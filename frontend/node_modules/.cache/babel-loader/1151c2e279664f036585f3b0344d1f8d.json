{"ast":null,"code":"import _slicedToArray from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{saveShippingAddress}from'../actions/cartActions';import CheckoutSteps from'../components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ShippingAddressScreen(props){var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;/*For  \"if(!userInfo){\" portion*/var cart=useSelector(function(state){return state.cart;});/*Getting state/status of cart from the redux*/var shippingAddress=cart.shippingAddress;/*If the user is not logged in, then the page will redirect him to the sign-in page*/if(!userInfo){props.history.push('/signin');}/*useState is filled with the\r\n                                status of the state \r\n                                in the REDUX, because to \r\n                                hold the data in the \r\n                                input boxes, entered by the user\r\n                                for auto fillup the fields*/var _useState=useState(shippingAddress.fullName),_useState2=_slicedToArray(_useState,2),fullName=_useState2[0],setFullName=_useState2[1];var _useState3=useState(shippingAddress.address),_useState4=_slicedToArray(_useState3,2),address=_useState4[0],setAddress=_useState4[1];var _useState5=useState(shippingAddress.city),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(shippingAddress.postalCode),_useState8=_slicedToArray(_useState7,2),postalCode=_useState8[0],setPostalCode=_useState8[1];var _useState9=useState(shippingAddress.country),_useState10=_slicedToArray(_useState9,2),country=_useState10[0],setCountry=_useState10[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({fullName:fullName,address:address,city:city,postalCode:postalCode,country:country}));props.history.push('/payment');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping Address\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fullName\",children:\"Full Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"fullName\",placeholder:\"Enter your full name\",value:fullName,onChange:function onChange(e){return setFullName(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"address\",placeholder:\"Enter your full address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",placeholder:\"Enter your city\",value:city,onChange:function onChange(e){return setCity(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postalCode\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postalCode\",placeholder:\"Enter your full name\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"country\",placeholder:\"Your address\",value:country,onChange:function onChange(e){return setCountry(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Continue\"})]})]})]});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin; /*For  \"if(!userInfo){\" portion*/\r\n    const cart = useSelector(state => state.cart);/*Getting state/status of cart from the redux*/\r\n    const {shippingAddress} = cart;\r\n    /*If the user is not logged in, then the page will redirect him to the sign-in page*/\r\n    if(!userInfo){\r\n        props.history.push('/signin');\r\n    }\r\n                                /*useState is filled with the\r\n                                status of the state \r\n                                in the REDUX, because to \r\n                                hold the data in the \r\n                                input boxes, entered by the user\r\n                                for auto fillup the fields*/\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({fullName, address, city, postalCode, country}),\r\n        );\r\n        props.history.push('/payment');\r\n    };\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Shipping Address</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input type=\"text\" \r\n                    id=\"fullName\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={fullName} \r\n                    onChange={(e) => setFullName(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"address\">Address </label>\r\n                    <input type=\"text\" \r\n                    id=\"address\" \r\n                    placeholder=\"Enter your full address\" \r\n                    value={address} \r\n                    onChange={(e) => setAddress(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <input type=\"text\" \r\n                    id=\"city\" \r\n                    placeholder=\"Enter your city\" \r\n                    value={city} \r\n                    onChange={(e) => setCity(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"postalCode\">Postal Code</label>\r\n                    <input type=\"text\" \r\n                    id=\"postalCode\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={postalCode} \r\n                    onChange={(e) => setPostalCode(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"country\">Country</label>\r\n                    <input type=\"text\" \r\n                    id=\"country\" \r\n                    placeholder=\"Your address\" \r\n                    value={country} \r\n                    onChange={(e) => setCountry(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Continue</button>\r\n                </div>\r\n                \r\n        </form>\r\n                \r\n        </div>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}