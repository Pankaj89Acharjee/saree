{"ast":null,"code":"import _slicedToArray from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{detailsUser,updateUser}from\"../actions/userActions\";import LoadingBox from\"../components/LoadingBox\";import MessageBox from\"../components/MessageBox\";import{USER_UPDATE_RESET}from\"../constants/userConstants\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UserEditScreen(props){/*We need specific Id for editing data*/var userId=props.match.params.id;/*Now we need to define useEffect()*/var _useState=useState(' '),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(' '),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSeller=_useState6[0],setIsSeller=_useState6[1];/*By default it is false*/var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAdmin=_useState8[0],setIsAdmin=_useState8[1];/*For getting users in details from redux store, i.e. from store.js*/var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;/*For getting users in details from redux store, i.e. from store.js*/var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;var dispatch=useDispatch();useEffect(function(){/*Need to check user*/if(!user||successUpdate){/*If not exists, bring it*/dispatch({type:USER_UPDATE_RESET});dispatch(detailsUser(userId._id));props.history.push('/userlist');}else{/*Showing the clicked user data*/setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);setIsSeller(user.isSeller);}},[dispatch,props.history,successUpdate,user,userId]);var submitHandler=function submitHandler(e){e.preventDefault();/*Preventing page refresh when user clicks on the edit button*/dispatch(updateUser({_id:userId,name:name,email:email,isSeller:isSeller,isAdmin:isAdmin}));/* updateUser() is defined in action.js*/};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Editing \",name]}),loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate})]}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",placeholder:\"Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-mail\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"text\",placeholder:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"isSeller\",children:\"Whether Seller\"}),/*#__PURE__*/_jsx(\"input\",{id:\"isSeller\",type:\"checkbox\",checked:isSeller,onChange:function onChange(e){return setIsSeller(e.target.checked);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"isAdmin\",children:\"Whether Admin\"}),/*#__PURE__*/_jsx(\"input\",{id:\"isAdmin\",type:\"checkbox\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"primary\",children:\"Update \"})})]})]})});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUser","LoadingBox","MessageBox","USER_UPDATE_RESET","UserEditScreen","props","userId","match","params","id","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","dispatch","type","_id","history","push","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsUser, updateUser } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nexport default function UserEditScreen(props) {\r\n    /*We need specific Id for editing data*/\r\n    const userId = props.match.params.id; /*Now we need to define useEffect()*/\r\n\r\n    const [name, setName] = useState(' ');\r\n    const [email, setEmail] = useState(' ');\r\n    const [isSeller, setIsSeller] = useState(false); /*By default it is false*/\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    \r\n    \r\n    \r\n    /*For getting users in details from redux store, i.e. from store.js*/\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    /*For getting users in details from redux store, i.e. from store.js*/\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate} = userUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {  \r\n        \r\n        \r\n                       \r\n            /*Need to check user*/\r\n        if(!user || successUpdate) { /*If not exists, bring it*/\r\n            dispatch({ type: USER_UPDATE_RESET});\r\n            \r\n            dispatch(detailsUser(userId._id));\r\n            props.history.push('/userlist');\r\n        } else {\r\n               /*Showing the clicked user data*/\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsAdmin(user.isAdmin);\r\n            setIsSeller(user.isSeller);\r\n        }\r\n    }, [dispatch, props.history, successUpdate, user, userId]);\r\n    \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); /*Preventing page refresh when user clicks on the edit button*/\r\n        dispatch(updateUser({\r\n            _id: userId, \r\n            name, \r\n            email, \r\n            isSeller, \r\n            isAdmin\r\n            })\r\n        );\r\n        /* updateUser() is defined in action.js*/\r\n    };\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Editing {name}</h1>\r\n                    \r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                </div>\r\n                {loading ? <LoadingBox></LoadingBox>\r\n                : error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n                : \r\n                <>\r\n                <div /*for name*/>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" type=\"text\" placeholder=\"Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*for email*/>\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input id=\"email\" type=\"text\" placeholder=\"email\"\r\n                    value={email} onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Checkbox for whether seller*/>\r\n                    <label htmlFor=\"isSeller\">Whether Seller</label>\r\n                    <input id=\"isSeller\" type=\"checkbox\" checked={isSeller}\r\n                    onChange={(e) => setIsSeller(e.target.checked)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Checkbox for whether Admin*/>\r\n                    <label htmlFor=\"isAdmin\">Whether Admin</label>\r\n                    <input id=\"isAdmin\" type=\"checkbox\" checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                    \r\n                    </input>\r\n                </div>\r\n                \r\n                <div>\r\n                    <button type=\"submit\" className=\"primary\">Update </button>\r\n                </div>\r\n                </>\r\n                }\r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}