{"ast":null,"code":"/*For viewing and editing/deleting the orders under ADMIN*/import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{deleteOrder,listOrders}from\"../actions/orderActions\";import LoadingBox from\"../components/LoadingBox\";import MessageBox from\"../components/MessageBox\";import{ORDER_DELETE_RESET}from\"../constants/orderConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function OrderListScreen(props){/*For filtered order list of Specific SELLER*/var sellerMode=props.match.path.indexOf('/seller')>=0;/*getting OrderList object from OrderReducer*/var orderList=useSelector(function(state){return state.orderList;});var loading=orderList.loading,error=orderList.error,orders=orderList.orders;/*getting orderDelete from redux store i.e. from store.js*/var orderDelete=useSelector(function(state){return state.orderDelete;});var loadingDelete=orderDelete.loading,errorDelete=orderDelete.error,successDelete=orderDelete.success;var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var dispatch=useDispatch();useEffect(function(){if(successDelete){dispatch({type:ORDER_DELETE_RESET});}/*As we donot want to delete any more data after the first one choiced by\r\n        us was deleted, we have to reset it and and show the order list*/dispatch(listOrders({seller:sellerMode?userInfo._id:''}));/*Need to define the fx in orderActions.js in actions folder.*/},[dispatch,successDelete,sellerMode,userInfo._id]);var deleteHandler=function deleteHandler(order){if(window.confirm('Are you sure to delete?')){dispatch(deleteOrder(order._id));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Orders by Customers\"}),loadingDelete&&/*#__PURE__*/_jsx(LoadingBox,{}),errorDelete&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorDelete}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ORDER ID NO\"}),/*#__PURE__*/_jsx(\"th\",{children:\"USER_NAME\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DATE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"TOTAL\"}),/*#__PURE__*/_jsx(\"th\",{children:\"PAID/NOT PAID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DELIVERED/HOLDING\"}),/*#__PURE__*/_jsx(\"th\",{children:\"ACTIONS\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(function(order){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:order.user.name}),/*#__PURE__*/_jsx(\"td\",{children:order.createdAt.substring(0,10)}),/*#__PURE__*/_jsxs(\"td\",{children:[\"Rs.\",order.totalPrice.toFixed(2),\"/-\"]}),/*#__PURE__*/_jsx(\"td\",{children:order.isPaid?order.paidAt.substring(0,10):'Not Paid'}),/*#__PURE__*/_jsx(\"td\",{children:order.isDelivered?order.deliveredAt.substring(0,10):'Not Delivered'}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:function onClick(){props.history.push(\"/order/\".concat(order._id));},children:\"Order Details\"}),/*#__PURE__*/_jsx(\"button\",{className:\"small\",type:\"button\",onClick:function onClick(){return deleteHandler(order);},children:\"Delete\"})]})]},order._id);})})]})]});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","deleteOrder","listOrders","LoadingBox","MessageBox","ORDER_DELETE_RESET","OrderListScreen","props","sellerMode","match","path","indexOf","orderList","state","loading","error","orders","orderDelete","loadingDelete","errorDelete","successDelete","success","userSignin","userInfo","dispatch","type","seller","_id","deleteHandler","order","window","confirm","map","user","name","createdAt","substring","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt","history","push"],"mappings":"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","sourcesContent":["/*For viewing and editing/deleting the orders under ADMIN*/\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteOrder, listOrders } from \"../actions/orderActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { ORDER_DELETE_RESET } from \"../constants/orderConstants\";\r\n\r\nexport default function OrderListScreen(props) {\r\n\r\n    /*For filtered order list of Specific SELLER*/\r\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n\r\n    /*getting OrderList object from OrderReducer*/\r\n    const orderList = useSelector(state => state.orderList);\r\n    const {loading, error, orders} = orderList;\r\n\r\n\r\n    /*getting orderDelete from redux store i.e. from store.js*/\r\n    const orderDelete = useSelector(state => state.orderDelete);\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = orderDelete;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect (() => {\r\n        if(successDelete) {\r\n            dispatch({type: ORDER_DELETE_RESET});\r\n        }\r\n        \r\n        /*As we donot want to delete any more data after the first one choiced by\r\n        us was deleted, we have to reset it and and show the order list*/\r\n        \r\n        dispatch(listOrders({ seller: sellerMode ? userInfo._id : ''})); /*Need to define the fx in orderActions.js in actions folder.*/\r\n    }, [dispatch, successDelete, sellerMode, userInfo._id]);\r\n\r\n    const deleteHandler = (order) => {\r\n        if(window.confirm('Are you sure to delete?')) {\r\n            dispatch(deleteOrder(order._id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <h1 /*We need to check 'loading' first*/>Orders by Customers</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {loading ? ( <LoadingBox></LoadingBox> \r\n             ): ( error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n             : (\r\n                 <table className=\"table\">\r\n                     <thead>\r\n                     <tr>\r\n                        <th>ORDER ID NO</th>\r\n                        <th>USER_NAME</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID/NOT PAID</th>\r\n                        <th>DELIVERED/HOLDING</th>\r\n                        <th>ACTIONS</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody /*Now looking over orders and using map fx to convert each orderobject into JSX*/>\r\n                         {orders.map((order) => (\r\n                             <tr key={order._id}>\r\n                             <td>{order._id}</td>\r\n                             <td>{order.user.name}</td>\r\n                             <td>{order.createdAt.substring(0, 10)}</td>\r\n                             <td>Rs.{order.totalPrice.toFixed(2)}/-</td>\r\n                             <td /*isPaid is conditional. If it is true (\r\n                                 ?) then show order.paidAt for showing \r\n                                 only date part and not time. Substring is used to capture only \r\n                                 date and not the time of the payment. If this condition is\r\n                                 false, then it will show not payment not paid \r\n                                 */>\r\n                                     {order.isPaid ? order.paidAt.substring(0, 10) : 'Not Paid'}         \r\n                            </td>\r\n                             \r\n                             <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'Not Delivered'}</td>\r\n                             <td>\r\n                                 <button type=\"button\" className=\"btn btn-primary\"\r\n                                 onClick={() => {\r\n                                     props.history.push(`/order/${order._id}`);\r\n                                 }}>Order Details</button>\r\n\r\n                                 <button \r\n                                 className=\"small\"\r\n                                 type = \"button\"\r\n                                 onClick={() => deleteHandler(order)}>\r\n                                     Delete\r\n                                 </button>\r\n                             </td>\r\n                             \r\n                         </tr>\r\n                         )\r\n                            \r\n                         )}\r\n                     </tbody>\r\n                 </table>\r\n\r\n             )\r\n             )\r\n            }\r\n\r\n        </div>\r\n    )\r\n        \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}