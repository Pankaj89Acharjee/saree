{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from\"axios\";import{USER_DETAILS_FAIL,USER_DETAILS_REQUEST,USER_DETAILS_SUCCESS,USER_REGISTER_FAIL,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_SIGIN_FAIL,USER_SIGIN_REQUEST,USER_SIGIN_SIGNOUT,USER_SIGIN_SUCCESS,USER_UPDATE_PROFILE_FAIL,USER_UPDATE_PROFILE_REQUEST,USER_UPDATE_PROFILE_SUCCESS}from\"../constants/userConstants\";export var signin=function signin(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$Axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:USER_SIGIN_REQUEST,payload:{email:email,password:password}});_context.prev=1;_context.next=4;return Axios.post('/api/users/signin',{email:email,password:password});case 4:_yield$Axios$post=_context.sent;data=_yield$Axios$post.data;dispatch({type:USER_SIGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);dispatch({type:USER_SIGIN_FAIL,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var signout=function signout(){return function(dispatch){localStorage.removeItem('userInfo');localStorage.removeItem('cartItems');localStorage.removeItem('shippingAddress');dispatch({type:USER_SIGIN_SIGNOUT});};};/*New User Registration*/export var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$Axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:USER_REGISTER_REQUEST,payload:{name:name,email:email,password:password}});_context2.prev=1;_context2.next=4;return Axios.post('/api/users/register',{name:name,email:email,password:password});case 4:_yield$Axios$post2=_context2.sent;data=_yield$Axios$post2.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});/*The below code is to update redux that a new user has registered*/dispatch({type:USER_SIGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);dispatch({type:USER_REGISTER_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};/*For Updating user details information*/export var detailsUser=function detailsUser(userId){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState,userInfo,_yield$Axios$get,data,message;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:/*Now declare constants in the userConstants*/dispatch({type:USER_DETAILS_REQUEST,payload:userId});/*Get a token by getState method. The {userSignin and {userInfo} values\r\nare used here to get data and these constants are brought from \r\nProfileScreen =>useSelector method}*/_getState=getState(),userInfo=_getState.userSignin.userInfo;_context3.prev=2;_context3.next=5;return Axios.get(\"/api/users/\".concat(userId),{headers:{Authorization:\"Bearer \".concat(userInfo.token)}});case 5:_yield$Axios$get=_context3.sent;data=_yield$Axios$get.data;dispatch({type:USER_DETAILS_SUCCESS,payload:data});_context3.next=14;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](2);message=_context3.t0.response&&_context3.t0.response.data.message?_context3.t0.response.data.message:_context3.t0.message;dispatch({type:USER_DETAILS_FAIL,payload:message});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[2,10]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();};/*From the ProfileScreen.js file, defining fx updateUserProfile()*/export var updateUserProfile=function updateUserProfile(user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState2,userInfo,_yield$Axios$put,data,message;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:/*Connecting constants*/dispatch({type:USER_UPDATE_PROFILE_REQUEST,payload:user});/*Get a token by getState method. The {userSignin and {userInfo} values\r\n    are used here to get data and these constants are brought from \r\n    ProfileScreen =>useSelector method}*/_getState2=getState(),userInfo=_getState2.userSignin.userInfo;_context4.prev=2;_context4.next=5;return Axios.put(\"/api/users/profile\",user,{headers:{Authorization:\"Bearer \".concat(userInfo.token)}});case 5:_yield$Axios$put=_context4.sent;data=_yield$Axios$put.data;dispatch({type:USER_UPDATE_PROFILE_SUCCESS,payload:data});dispatch({type:USER_SIGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context4.next=16;break;case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](2);message=_context4.t0.response&&_context4.t0.response.data.message?_context4.t0.response.data.message:_context4.t0.message;dispatch({type:USER_UPDATE_PROFILE_FAIL,payload:message});case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[2,12]]);}));return function(_x5,_x6){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGIN_FAIL","USER_SIGIN_REQUEST","USER_SIGIN_SIGNOUT","USER_SIGIN_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","signin","email","password","dispatch","type","payload","post","data","localStorage","setItem","JSON","stringify","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userInfo","userSignin","get","headers","Authorization","token","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import  Axios  from \"axios\";\r\nimport { USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, \r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, \r\n    USER_SIGIN_REQUEST, USER_SIGIN_SIGNOUT, \r\n    USER_SIGIN_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS} from \"../constants/userConstants\"\r\n\r\n\r\nexport const signin = (email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_SIGIN_REQUEST, payload: { email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/signin', { email, password });\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\nexport const signout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGIN_SIGNOUT});\r\n};\r\n\r\n\r\n/*New User Registration*/\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_REGISTER_REQUEST, payload: { name, email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        /*The below code is to update redux that a new user has registered*/\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\n\r\n/*For Updating user details information*/\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    /*Now declare constants in the userConstants*/\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\nare used here to get data and these constants are brought from \r\nProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data});\r\n    \r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload:message});\r\n    }\r\n};\r\n\r\n\r\n/*From the ProfileScreen.js file, defining fx updateUserProfile()*/\r\nexport const updateUserProfile = (user) =>async(dispatch, getState) => {\r\n    /*Connecting constants*/\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\n    are used here to get data and these constants are brought from \r\n    ProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n    /*AJAX Request. As it is sending data to backend, PUT method is used*/\r\n    /* /api/users/profile` ====> profile comes from App.js> Route*/\r\n    const { data } = await Axios.put(`/api/users/profile`, user,  {\r\n        headers: { Authorization: `Bearer ${userInfo.token}`},\r\n    });\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n    dispatch({ type: USER_SIGIN_SUCCESS, payload: data});\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload:message});\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}