{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Gemsapp\\\\frontend\\\\src\\\\screens\\\\SigninScreen.js\",\n    _s = $RefreshSig$();\n\n//import express from \"express\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { signin } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen(props) {\n  _s();\n\n  /*Creating REACT Hooks for email and password options*/\n  const [email, setEmail] = useState(' ');\n  const [password, setPassword] = useState(' ');\n  /*---------------------------------------------------*/\n\n  /*-----After Entering Login and successfully login validation, signin screen*/\n\n  const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo,\n    loading,\n    error\n  } = userSignin;\n  /*-----End of After Entering Login and successfully login validation, signin screen*/\n\n  /*React hooks for sign-in*/\n\n  const dispatch = useDispatch();\n  /*End of React hooks for sign-in*/\n\n  const submitHandler = e => {\n    e.preventDefault();\n    /*This is used not to refresh the page when the user clicks on the sign button*/\n\n    dispatch(signin(email, password));\n  };\n\n  useEffect(() => {\n    /*useEffect has two parameters*/\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n  }, [props.history, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Enter your e-mail Id\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter your password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Are you a new customer? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/register?redirect=${redirect}`,\n            children: \"Create your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SigninScreen, \"RLfFkMPilm/WXYdKch8qVwM4zFo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Gemsapp/frontend/src/screens/SigninScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","signin","LoadingBox","MessageBox","SigninScreen","props","email","setEmail","password","setPassword","redirect","location","search","split","userSignin","state","userInfo","loading","error","dispatch","submitHandler","e","preventDefault","history","push","target","value"],"mappings":"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","sourcesContent":["//import express from \"express\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function SigninScreen(props) {\r\n\r\n    /*Creating REACT Hooks for email and password options*/\r\n    const [email, setEmail] = useState(' ');\r\n    const [password, setPassword] = useState(' ');\r\n    /*---------------------------------------------------*/\r\n\r\n    /*-----After Entering Login and successfully login validation, signin screen*/\r\n    const redirect = props.location.search \r\n    ? props.location.search.split('=')[1] \r\n    : '/';\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    /*-----End of After Entering Login and successfully login validation, signin screen*/\r\n\r\n    /*React hooks for sign-in*/\r\n    const dispatch = useDispatch();\r\n     /*End of React hooks for sign-in*/\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault(); /*This is used not to refresh the page when the user clicks on the sign button*/\r\n        dispatch(signin(email, password));\r\n    };\r\n\r\n    useEffect(() => { /*useEffect has two parameters*/\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    return(\r\n        <div>\r\n            <form className = \"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>Sign in</h1>\r\n                </div>\r\n                \r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant = \"danger\">{ error }</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"email\">E-mail Address</label>\r\n                    <input type=\"email\" id=\"email\" placeholder=\"Enter your e-mail Id\" required\r\n                    onChange={e => setEmail(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Enter Password</label>\r\n                    <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" required\r\n                    onChange={e => setPassword(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Sign-in</button>\r\n                    \r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <div>\r\n                        Are you a new customer? <Link to = {`/register?redirect=${redirect}`}>Create your account</Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}