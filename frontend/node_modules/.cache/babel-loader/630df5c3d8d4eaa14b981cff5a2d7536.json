{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Saree\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen(props) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  /*For  \"if(!userInfo){\" portion*/\n\n  const [selected, setSelected] = useState();\n  /*Hook For dropdown*/\n\n  const cart = useSelector(state => state.cart);\n  /*Getting state/status of cart from the redux*/\n\n  const {\n    shippingAddress\n  } = cart;\n  /*If the user is not logged in, then the page will redirect him to the sign-in page*/\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  /*useState is filled with the\r\n  status of the state \r\n  in the REDUX, because to \r\n  hold the data in the \r\n  input boxes, entered by the user\r\n  for auto fillup the fields*/\n\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    props.history.push('/payment');\n  };\n\n  const changeSelectOptionHandler = e => {\n    e.preventDefault();\n    setSelected(e.target.value);\n  };\n\n  const countryOrigin = [{\n    id: 1,\n    country: 'India'\n  }, {\n    id: 2,\n    country: 'South Africa'\n  }, {\n    id: 3,\n    country: 'Australia'\n  }, {\n    id: 4,\n    country: 'United States'\n  }, {\n    id: 5,\n    country: 'Russia'\n  }, {\n    id: 6,\n    country: 'England'\n  }, {\n    id: 7,\n    country: 'United Kingdom'\n  }];\n  const districtOrigin = [{\n    id: 1,\n    address: 'Kolkata'\n  }, {\n    id: 2,\n    address: 'South Dinajpur'\n  }, {\n    id: 3,\n    address: 'North Dinajpur'\n  }, {\n    id: 4,\n    address: 'South 24 Parganas'\n  }, {\n    id: 5,\n    address: 'North 24 Parganas'\n  }, {\n    id: 6,\n    address: 'Howrah'\n  }, {\n    id: 7,\n    address: 'Darjeeling'\n  }, {\n    id: 8,\n    address: 'Coochbihar'\n  }, {\n    id: 9,\n    address: 'Alipurduar'\n  }, {\n    id: 10,\n    address: 'Jalpaiguri'\n  }, {\n    id: 11,\n    address: 'Malda'\n  }, {\n    id: 12,\n    address: 'Murshidabad'\n  }, {\n    id: 13,\n    address: 'Birbhum'\n  }, {\n    id: 14,\n    address: 'Burdwan East'\n  }, {\n    id: 15,\n    address: 'Burdwan West'\n  }, {\n    id: 16,\n    address: 'Medinipore'\n  }];\n  const maldacityOrigin = [{\n    id: 1,\n    city: 'English Bazaar'\n  }, {\n    id: 2,\n    city: 'Malda Town'\n  }, {\n    id: 3,\n    city: 'Gazole'\n  }, {\n    id: 2,\n    city: 'Adina'\n  }];\n  const ddinajpurcityOrigin = [{\n    id: 1,\n    city: \"Balurghat\"\n  }, {\n    id: 2,\n    city: \"Gangarampur\"\n  }, {\n    id: 3,\n    city: \"Buniadpur\"\n  }, {\n    id: 4,\n    city: \"Kushmundi\"\n  }, {\n    id: 5,\n    city: \"Hili\"\n  }];\n  const udinajpurcityOrigin = [{\n    id: 1,\n    city: \"Kaliyaganj\"\n  }, {\n    id: 2,\n    city: \"Raiganj\"\n  }, {\n    id: 3,\n    city: \"Islampur\"\n  }, {\n    id: 4,\n    city: \"Dalkhola\"\n  }, {\n    id: 5,\n    city: \"Panjipara\"\n  }, {\n    id: 6,\n    city: \"Itahar\"\n  }];\n  const kolkataOrigin = [{\n    id: 1,\n    city: \"Baligunge\"\n  }, {\n    id: 2,\n    city: \"Baruipur\"\n  }, {\n    id: 3,\n    city: \"Jadavpur\"\n  }, {\n    id: 4,\n    city: \"New Alipore\"\n  }, {\n    id: 5,\n    city: \"Bou Bazar\"\n  }, {\n    id: 6,\n    city: \"Esplanade\"\n  }];\n  const darjeelingOrigin = [{\n    id: 1,\n    city: \"Darjeeling\"\n  }, {\n    id: 2,\n    city: \"Kurseong\"\n  }, {\n    id: 3,\n    city: \"Mirik\"\n  }, {\n    id: 4,\n    city: \"Siliguri\"\n  }, {\n    id: 5,\n    city: \"Bagdogra\"\n  }, {\n    id: 6,\n    city: \"Matigara\"\n  }];\n  let type = null;\n  /* Type variable stores different arrays for different drop downs*/\n\n  let options = null;\n  /*Set of options that a user will see*/\n\n  if (selected === \"Malda\") {\n    type = maldacityOrigin;\n  } else if (selected === \"South Dinajpur\") {\n    type = ddinajpurcityOrigin;\n  } else if (selected === \"North Dinajpur\") {\n    type = udinajpurcityOrigin;\n  } else if (selected === \"Kolkata\") {\n    type = kolkataOrigin;\n  } else if (selected === \"Darjeeling\") {\n    type = darjeelingOrigin;\n  }\n\n  if (type) {\n    options = type.map((c, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: c.city,\n      children: c.city\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 40\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          placeholder: \"Enter your full name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Choose Your Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          onChange: e => setCountry(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 25\n          }, this), countryOrigin.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: data.country,\n              children: data.country\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"District \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"address\",\n          onClick: changeSelectOptionHandler,\n          onChange: e => setAddress(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), districtOrigin.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: data.address,\n              children: data.address\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"city\",\n          onChange: e => setCity(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this), options]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 22\n        }, this)\n        /*\r\n        <input type=\"text\" \r\n        id=\"city\" \r\n        placeholder=\"Enter your city\" \r\n        value={city} \r\n        onChange={(e) => setCity(e.target.value)} \r\n        required>\r\n        </input>\r\n        */\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postalCode\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postalCode\",\n          placeholder: \"Pin Number\",\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"Qi1PEq7BFG+rSe9HAI4jr7qo0dE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingAddressScreen;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","ShippingAddressScreen","props","userSignin","state","userInfo","selected","setSelected","cart","shippingAddress","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","changeSelectOptionHandler","target","value","countryOrigin","id","districtOrigin","maldacityOrigin","ddinajpurcityOrigin","udinajpurcityOrigin","kolkataOrigin","darjeelingOrigin","type","options","map","c","index","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin; /*For  \"if(!userInfo){\" portion*/\r\n\r\n    const [selected, setSelected] = useState(); /*Hook For dropdown*/\r\n\r\n    const cart = useSelector(state => state.cart);/*Getting state/status of cart from the redux*/\r\n    const {shippingAddress} = cart;\r\n\r\n   \r\n    /*If the user is not logged in, then the page will redirect him to the sign-in page*/\r\n    if(!userInfo){\r\n        props.history.push('/signin');\r\n    }\r\n                                /*useState is filled with the\r\n                                status of the state \r\n                                in the REDUX, because to \r\n                                hold the data in the \r\n                                input boxes, entered by the user\r\n                                for auto fillup the fields*/\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n             \r\n            dispatch(saveShippingAddress({\r\n                fullName, \r\n                address, \r\n                city, \r\n                postalCode, \r\n                country,\r\n            }),\r\n            );\r\n            props.history.push('/payment');\r\n        };\r\n    \r\n    const changeSelectOptionHandler = (e) => {\r\n         e.preventDefault();\r\n         setSelected(e.target.value);\r\n    };\r\n\r\n\r\n    const countryOrigin = [\r\n         \r\n         {\r\n            id: 1,\r\n            country: 'India',\r\n            \r\n         },   \r\n        \r\n        \r\n         {\r\n            id: 2,\r\n            country: 'South Africa',\r\n         },\r\n\r\n         {\r\n            id: 3,\r\n            country: 'Australia',\r\n         },\r\n\r\n         {\r\n            id: 4,\r\n            country: 'United States',\r\n         },\r\n\r\n         {\r\n            id: 5,\r\n            country: 'Russia',\r\n         },\r\n\r\n         {\r\n            id: 6,\r\n            country: 'England',\r\n         },\r\n         \r\n         {\r\n            id: 7,\r\n            country: 'United Kingdom',\r\n         },\r\n         \r\n         \r\n     ]\r\n    \r\n     const districtOrigin = [\r\n         \r\n        {\r\n           id: 1,\r\n           address: 'Kolkata',\r\n        },   \r\n       \r\n       \r\n        {\r\n           id: 2,\r\n           address: 'South Dinajpur',\r\n        },\r\n\r\n        {\r\n           id: 3,\r\n           address: 'North Dinajpur',\r\n        },\r\n\r\n        {\r\n           id: 4,\r\n           address: 'South 24 Parganas',\r\n        },\r\n\r\n        {\r\n           id: 5,\r\n           address: 'North 24 Parganas',\r\n        },\r\n\r\n        {\r\n           id: 6,\r\n           address: 'Howrah',\r\n        },\r\n        \r\n        {\r\n           id: 7,\r\n           address: 'Darjeeling',\r\n        },\r\n\r\n        {\r\n            id: 8,\r\n            address: 'Coochbihar',\r\n         },\r\n\r\n         {\r\n            id: 9,\r\n            address: 'Alipurduar',\r\n         },\r\n\r\n         {\r\n            id: 10,\r\n            address: 'Jalpaiguri',\r\n         },\r\n\r\n         {\r\n            id: 11,\r\n            address: 'Malda',\r\n         },\r\n\r\n         {\r\n            id: 12,\r\n            address: 'Murshidabad',\r\n         },\r\n\r\n         {\r\n            id: 13,\r\n            address: 'Birbhum',\r\n         },\r\n\r\n         {\r\n            id: 14,\r\n            address: 'Burdwan East',\r\n         },\r\n\r\n         {\r\n            id: 15,\r\n            address: 'Burdwan West',\r\n         },\r\n\r\n         {\r\n            id: 16,\r\n            address: 'Medinipore',\r\n         },                \r\n    ]\r\n    \r\n    const maldacityOrigin = [\r\n         \r\n      {\r\n         id: 1,\r\n         city: 'English Bazaar',\r\n      },   \r\n\r\n      {\r\n         id: 2,\r\n         city: 'Malda Town',\r\n      },  \r\n\r\n      {\r\n         id: 3,\r\n         city: 'Gazole',\r\n      }, \r\n      {\r\n         id: 2,\r\n         city: 'Adina',\r\n      }, \r\n   ]\r\n\r\n   const ddinajpurcityOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Balurghat\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Gangarampur\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Buniadpur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Kushmundi\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Hili\",\r\n      }\r\n   ]\r\n\r\n   const udinajpurcityOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Kaliyaganj\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Raiganj\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Islampur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Dalkhola\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Panjipara\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Itahar\",\r\n      },\r\n   ]\r\n\r\n   const kolkataOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Baligunge\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Baruipur\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Jadavpur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"New Alipore\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Bou Bazar\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Esplanade\",\r\n      },\r\n   ]\r\n   \r\n   const darjeelingOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Darjeeling\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Kurseong\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Mirik\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Siliguri\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Bagdogra\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Matigara\",\r\n      },\r\n   ]\r\n   let type = null; /* Type variable stores different arrays for different drop downs*/\r\n   let options = null; /*Set of options that a user will see*/\r\n\r\n   if (selected === \"Malda\") {\r\n      type = maldacityOrigin;\r\n   } else if (selected === \"South Dinajpur\") {\r\n      type = ddinajpurcityOrigin;\r\n   } else if (selected === \"North Dinajpur\") {\r\n      type = udinajpurcityOrigin;\r\n   } else if (selected === \"Kolkata\") {\r\n      type = kolkataOrigin;\r\n   } else if (selected === \"Darjeeling\") {\r\n      type = darjeelingOrigin;\r\n   }\r\n\r\n\r\n   if (type) {\r\n      options = type.map((c, index) => <option key={index} value={c.city}>{c.city}</option>)\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Shipping Address</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input type=\"text\" \r\n                    id=\"fullName\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={fullName} \r\n                    onChange={(e) => setFullName(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"country\">Choose Your Country</label>\r\n                   {/*\r\n\r\n                   <input type=\"text\" \r\n                    id=\"country\" \r\n                    placeholder=\"Your address\" \r\n                    value={country} \r\n                    onChange={(e) => setCountry(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                     */ }\r\n\r\n                     {/*Trying for drop-down*/}\r\n\r\n                     <select id=\"country\" onChange= {(e) => setCountry(e.target.value)} required>\r\n                        <option>Select...</option>\r\n                        {\r\n                            countryOrigin.map((data, index) => {\r\n                                return <option key = {index} value={data.country}>\r\n                                       {data.country}</option>\r\n                            })\r\n                        }                      \r\n                     </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"address\">District </label>\r\n                    {/*<input type=\"text\" \r\n                    id=\"address\" \r\n                    placeholder=\"Enter your full address\" \r\n                    value={address} \r\n                    onChange={(e) => setAddress(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                    */}\r\n                    <select id=\"address\" onClick={changeSelectOptionHandler} onChange={((e) => setAddress(e.target.value))} required>\r\n                        <option>Select...</option>\r\n                        {\r\n                            districtOrigin.map((data, index) => {\r\n                                return <option key = {index} value={data.address}>\r\n                                       {data.address}</option>\r\n                            })\r\n                        }                      \r\n                    </select>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                   \r\n                      \r\n                   \r\n                    <label htmlFor=\"city\">City</label>\r\n                    {\r\n                     <select id=\"city\" onChange={(e) => setCity(e.target.value)} required>\r\n                        <option>Select...</option>\r\n\r\n                           {options}\r\n                     </select>\r\n                    /*\r\n                    <input type=\"text\" \r\n                    id=\"city\" \r\n                    placeholder=\"Enter your city\" \r\n                    value={city} \r\n                    onChange={(e) => setCity(e.target.value)} \r\n                    required>\r\n                    </input>\r\n                    */ }\r\n                    \r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"postalCode\">Postal Code</label>\r\n                    <input type=\"text\" \r\n                    id=\"postalCode\" \r\n                    placeholder=\"Pin Number\" \r\n                    value={postalCode} \r\n                    onChange={(e) => setPostalCode(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n               \r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Continue</button>\r\n                </div>\r\n                \r\n        </form>\r\n                \r\n        </div>\r\n \r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}