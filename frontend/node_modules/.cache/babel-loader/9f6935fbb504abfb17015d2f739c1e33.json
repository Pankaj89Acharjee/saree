{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SIGNOUT, USER_SIGIN_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    /*AJAX  post request for signin*/\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGIN_SIGNOUT\n  });\n};\n/*New User Registration*/\n\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    /*AJAX  post request for signin*/\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    /*The below code is to update redux that a new user has registered*/\n\n    dispatch({\n      type: USER_SIGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n/*For Updating user details information*/\n\nexport const detailsUser = userId => async (dispatch, getState) => {\n  /*Now declare constants in the userConstants*/\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  /*Get a token by getState method. The {userSignin and {userInfo} values\r\n  are used here to get data and these constants are brought from \r\n  ProfileScreen =>useSelector method}*/\n\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    /*AJAX Request*/\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGIN_FAIL","USER_SIGIN_REQUEST","USER_SIGIN_SIGNOUT","USER_SIGIN_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import  Axios  from \"axios\";\r\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, USER_SIGIN_REQUEST, USER_SIGIN_SIGNOUT, \r\n    USER_SIGIN_SUCCESS } from \"../constants/userConstants\"\r\n\r\n\r\nexport const signin = (email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_SIGIN_REQUEST, payload: { email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/signin', { email, password });\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\nexport const signout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGIN_SIGNOUT});\r\n};\r\n\r\n\r\n/*New User Registration*/\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_REGISTER_REQUEST, payload: { name, email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        /*The below code is to update redux that a new user has registered*/\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\n\r\n/*For Updating user details information*/\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    /*Now declare constants in the userConstants*/\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\nare used here to get data and these constants are brought from \r\nProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data});\r\n    \r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload:message});\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}