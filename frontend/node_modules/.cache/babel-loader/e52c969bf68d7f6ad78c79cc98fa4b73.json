{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Gemsapp\\\\frontend\\\\src\\\\components\\\\AdminRoute.js\",\n    _s = $RefreshSig$();\n\n/*This file required because when ever we made a changes to the user details who are authenticated users\r\nthey are only allowed to see the profile page and not the one who \r\nare not the registered users. So, we need to exclude that types of users from\r\nviewing this page., and that's why this is Private Router*/\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminRoute(_ref) {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const userSignin = useSelector(state => state.userSignin);\n  /*Importing from React-redux*/\n\n  const {\n    userInfo\n  } = userSignin;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => userInfo && userInfo.isAdmin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n      /*This component is defined in App.js*/\n      : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoute, \"59R/NyI/AHcemVBrR8vP+vIULbA=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Gemsapp/frontend/src/components/AdminRoute.js"],"names":["React","useSelector","Redirect","Route","AdminRoute","component","Component","rest","userSignin","state","userInfo","props","isAdmin"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;AAEA,eAAe,SAASC,UAAT,OAAsD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAkC;AACjE,QAAMC,UAAU,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AAA2D;;AAC3D,QAAM;AAAEE,IAAAA;AAAF,MAAeF,UAArB;AACA,sBACI;AAAA,2BACI,QAAC,KAAD,OACOD,IADP;AACa,MAAA,MAAM,EAAGI,KAAD,IAAWD,QAAQ,IAAIA,QAAQ,CAACE,OAArB,gBAC5B,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AAAmC;AADP,qBAG5B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhBuBP,U;UACDH,W;;;KADCG,U","sourcesContent":["/*This file required because when ever we made a changes to the user details who are authenticated users\r\nthey are only allowed to see the profile page and not the one who \r\nare not the registered users. So, we need to exclude that types of users from\r\nviewing this page., and that's why this is Private Router*/\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nexport default function AdminRoute({ component: Component, ...rest}) {\r\n    const userSignin = useSelector(state => state.userSignin); /*Importing from React-redux*/\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <div>\r\n            <Route {\r\n                ...rest} render={(props) => userInfo && userInfo.isAdmin ? (\r\n                <Component {...props}></Component> /*This component is defined in App.js*/\r\n            ) : (\r\n                <Redirect to = \"/signin\"/>\r\n            )\r\n            }>\r\n\r\n            </Route>\r\n        </div> \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}