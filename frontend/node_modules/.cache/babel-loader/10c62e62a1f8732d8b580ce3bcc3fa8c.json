{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Saree\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen(props) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  /*For  \"if(!userInfo){\" portion*/\n\n  const cart = useSelector(state => state.cart);\n  /*Getting state/status of cart from the redux*/\n\n  const {\n    shippingAddress\n  } = cart;\n  /*If the user is not logged in, then the page will redirect him to the sign-in page*/\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  /*useState is filled with the\r\n  status of the state \r\n  in the REDUX, because to \r\n  hold the data in the \r\n  input boxes, entered by the user\r\n  for auto fillup the fields*/\n\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    props.history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          placeholder: \"Enter your full name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Choose Your Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          onChange: '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            placeholder: \"India\",\n            value: \"India\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Russia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"United States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Australia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"United Kingdom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Japan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Sri Lanka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"District \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          placeholder: \"Enter your full address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          placeholder: \"Enter your city\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postalCode\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postalCode\",\n          placeholder: \"Enter your full name\",\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"aKR3+eOT6Pr0Jsab41QkdGviOjA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingAddressScreen;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AACjD,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAM;AAACE,IAAAA;AAAD,MAAaF,UAAnB;AAA+B;;AAG/B,QAAMG,IAAI,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;AAA8C;;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAoBD,IAA1B;AAGA;;AACA,MAAG,CAACD,QAAJ,EAAa;AACTH,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH;AAC2B;AAChC;AACA;AACA;AACA;AACA;;;AACI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACW,eAAe,CAACG,QAAjB,CAAxC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACW,eAAe,CAACK,OAAjB,CAAtC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACW,eAAe,CAACO,IAAjB,CAAhC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAACW,eAAe,CAACS,UAAjB,CAA5C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACW,eAAe,CAACW,OAAjB,CAAtC;AACA,QAAME,QAAQ,GAAGvB,WAAW,EAA5B;;AAIA,QAAMwB,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEIH,IAAAA,QAAQ,CAACrB,mBAAmB,CAAC;AACzBW,MAAAA,QADyB;AAEzBE,MAAAA,OAFyB;AAGzBE,MAAAA,IAHyB;AAIzBE,MAAAA,UAJyB;AAKzBE,MAAAA;AALyB,KAAD,CAApB,CAAR;AAQAhB,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACH,GAZL;;AAgBA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEY,aAAjC;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,EAAE,EAAC,UADH;AAEA,UAAA,WAAW,EAAC,sBAFZ;AAGA,UAAA,KAAK,EAAEX,QAHP;AAIA,UAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ5B;AAKA,UAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAiBI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBK;AAAQ,UAAA,EAAE,EAAC,SAAX;AAAqB,UAAA,QAAQ,EAAE,EAA/B;AAAA,kCACG;AAAQ,YAAA,WAAW,EAAG,OAAtB;AAA8B,YAAA,KAAK,EAAG;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAHH,eAIG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAJH,eAKG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBALH,eAMG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBANH,eAOG;AAAQ,YAAA,KAAK,EAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAPH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eA2CI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,EAAE,EAAC,SADH;AAEA,UAAA,WAAW,EAAC,yBAFZ;AAGA,UAAA,KAAK,EAAEb,OAHP;AAIA,UAAA,QAAQ,EAAGU,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ3B;AAKA,UAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ,eAuDI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,EAAE,EAAC,MADH;AAEA,UAAA,WAAW,EAAC,iBAFZ;AAGA,UAAA,KAAK,EAAEX,IAHP;AAIA,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAJxB;AAKA,UAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDJ,eAmEI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,EAAE,EAAC,YADH;AAEA,UAAA,WAAW,EAAC,sBAFZ;AAGA,UAAA,KAAK,EAAET,UAHP;AAIA,UAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAACK,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ9B;AAKA,UAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnEJ,eAiFI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8FH;;GA1IuBxB,qB;UACDH,W,EAINA,W,EAmBID,W;;;KAxBGI,qB;AA0IvB","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin; /*For  \"if(!userInfo){\" portion*/\r\n\r\n    \r\n    const cart = useSelector(state => state.cart);/*Getting state/status of cart from the redux*/\r\n    const {shippingAddress} = cart;\r\n\r\n   \r\n    /*If the user is not logged in, then the page will redirect him to the sign-in page*/\r\n    if(!userInfo){\r\n        props.history.push('/signin');\r\n    }\r\n                                /*useState is filled with the\r\n                                status of the state \r\n                                in the REDUX, because to \r\n                                hold the data in the \r\n                                input boxes, entered by the user\r\n                                for auto fillup the fields*/\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n             \r\n            dispatch(saveShippingAddress({\r\n                fullName, \r\n                address, \r\n                city, \r\n                postalCode, \r\n                country,\r\n            }),\r\n            );\r\n            props.history.push('/payment');\r\n        };\r\n    \r\n\r\n  \r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Shipping Address</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input type=\"text\" \r\n                    id=\"fullName\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={fullName} \r\n                    onChange={(e) => setFullName(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"country\">Choose Your Country</label>\r\n                   {/*\r\n\r\n                   <input type=\"text\" \r\n                    id=\"country\" \r\n                    placeholder=\"Your address\" \r\n                    value={country} \r\n                    onChange={(e) => setCountry(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                     */ }\r\n\r\n                     {/*Trying for drop-down*/}\r\n\r\n                     <select id=\"country\" onChange={''}>\r\n                        <option placeholder = \"India\" value = 'India'></option>\r\n                        <option value = 'Russia'></option>\r\n                        <option value = 'United States'></option>\r\n                        <option value = 'Australia'></option>\r\n                        <option value = 'United Kingdom'></option>\r\n                        <option value = 'Japan'></option>\r\n                        <option value = 'Sri Lanka'></option>                        \r\n                     </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"address\">District </label>\r\n                    <input type=\"text\" \r\n                    id=\"address\" \r\n                    placeholder=\"Enter your full address\" \r\n                    value={address} \r\n                    onChange={(e) => setAddress(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"city\">City</label>\r\n                    <input type=\"text\" \r\n                    id=\"city\" \r\n                    placeholder=\"Enter your city\" \r\n                    value={city} \r\n                    onChange={(e) => setCity(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"postalCode\">Postal Code</label>\r\n                    <input type=\"text\" \r\n                    id=\"postalCode\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={postalCode} \r\n                    onChange={(e) => setPostalCode(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n               \r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Continue</button>\r\n                </div>\r\n                \r\n        </form>\r\n                \r\n        </div>\r\n \r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}