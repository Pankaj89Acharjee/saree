{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Saree\\\\frontend\\\\src\\\\screens\\\\OrderHistoryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"link\", {\n  href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n  rel: \"stylesheet\",\n  integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n  crossorigin: \"anonymous\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 1\n}, this);\n\nexport default function OrderHistoryScreen(props) {\n  _s();\n\n  /*Getting error, loading and orders from REDUX store i.e., from orderMineListReducer in orderReduer*/\n  const orderMineList = useSelector(state => state.orderMineList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderMineList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    /*Calling fx listOrderMine from Actions ==>> orderActions*/\n    dispatch(listOrderMine());\n  }, [dispatch]);\n  /*orderMineList is in store.js*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ORDER ID NO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID/NOT PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DELIVERED/HOLDING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ACTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(orders => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders.isPaid ? orders.paidAt.substring(0, 10) : 'Not Paid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orders.isDelivered ? orders.deliveredAt.substring(0, 10) : 'Not Delivered'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => {\n                props.history.push(`/order/${orders._id}`);\n              },\n              children: \"Order Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 30\n          }, this)]\n        }, orders._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderHistoryScreen, \"oIE4O+84vEn02klOwtWV1BCCo+g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OrderHistoryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistoryScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/OrderHistoryScreen.js"],"names":["React","useEffect","useDispatch","useSelector","listOrderMine","LoadingBox","MessageBox","OrderHistoryScreen","props","orderMineList","state","loading","error","orders","dispatch","map","_id","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","history","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { listOrderMine } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\"></link>\r\n\r\nexport default function OrderHistoryScreen(props) {\r\n    /*Getting error, loading and orders from REDUX store i.e., from orderMineListReducer in orderReduer*/\r\n    const orderMineList = useSelector(state => state.orderMineList);\r\n    const { loading, error, orders} = orderMineList;\r\n   \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        /*Calling fx listOrderMine from Actions ==>> orderActions*/\r\n        dispatch(listOrderMine());\r\n    }, [dispatch]);\r\n    /*orderMineList is in store.js*/\r\n    return (\r\n        <div>\r\n            <h1 /*We need to check 'loading' first*/>Order History</h1>\r\n            {loading ? ( <LoadingBox></LoadingBox> \r\n             ): ( error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n             : (\r\n                 <table className=\"table\">\r\n                     <thead>\r\n                     <tr>\r\n                        <th>ORDER ID NO</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID/NOT PAID</th>\r\n                        <th>DELIVERED/HOLDING</th>\r\n                        <th>ACTIONS</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody /*Now looking over orders and using map fx to convert each orderobject into JSX*/>\r\n                         {orders.map((orders) => (\r\n                             <tr key={orders._id}>\r\n                             <td>{orders._id}</td>\r\n                             <td>{orders.createdAt.substring(0, 10)}</td>\r\n                             <td>{orders.totalPrice}</td>\r\n                             <td /*isPaid is conditional. If it is true (\r\n                                 ?) then show order.paidAt for showing \r\n                                 only date part and not time. Substring is used to capture only \r\n                                 date and not the time of the payment. If this condition is\r\n                                 false, then it will show not payment not paid \r\n                                 */>\r\n                                     {orders.isPaid ? orders.paidAt.substring(0, 10) : 'Not Paid'}         \r\n                            </td>\r\n                             \r\n                             <td>{orders.isDelivered ? orders.deliveredAt.substring(0, 10) : 'Not Delivered'}</td>\r\n                             <td>\r\n                                 <button type=\"button\" className=\"btn btn-primary\"\r\n                                 onClick={() => {\r\n                                     props.history.push(`/order/${orders._id}`);\r\n                                 }}>Order Details</button>\r\n                             </td>\r\n                             \r\n                         </tr>\r\n                         )\r\n                            \r\n                         )}\r\n                     </tbody>\r\n                 </table>\r\n\r\n             )\r\n             )\r\n            }\r\n\r\n        </div>\r\n    )\r\n        \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}