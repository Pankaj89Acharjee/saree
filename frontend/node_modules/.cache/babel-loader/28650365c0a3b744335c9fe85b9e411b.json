{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    /*Importing userInfo from userSignIn*/\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    /*AJAX Request*/\n\n    const {\n      data\n    } = await Axios.post('api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n/*Defining detailsOrder from the orderScreen --> useEffect*/\n\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get"],"mappings":"AAAA,OAAQA,KAAR,MAAoB,OAApB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,oBAAT,EACIC,iBADJ,EAEIC,oBAFJ,EAGIC,qBAHJ,EAIIC,kBAJJ,QAI6B,6BAJ7B;AAMA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAET,oBAAP;AAA6BU,IAAAA,OAAO,EAAEJ;AAAtC,GAAD,CAAR;;AACA,MAAG;AACC;AACA,UAAM;AAACK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA6BJ,QAAQ,EAA3C;AACA;;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,YAAX,EAAyBR,KAAzB,EAAgC;AACnDS,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AADnC;AAD0C,KAAhC,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEV;AAAP,KAAD,CAAR;AACAmB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAEH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,iBADD;AAELS,MAAAA,OAAO,EACHU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACEF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADtB,GAEEF,KAAK,CAACE;AALP,KAAD,CAAR;AAOL;AACF,CAxBM;AA0BP;;AAEA,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAMjB,QAAN,EAAgBC,QAAhB,KAA6B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEN,qBAAR;AAA+BO,IAAAA,OAAO,EAAEc;AAAxC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAAC2B,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAoC;AACvDT,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AAD8C,KAApC,CAAvB;AAGH,GAJD,CAIE,OAAOG,KAAP,EAAc;AACZ,UAAME,OAAO,GAAGF,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAArC,GACdF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADN,GAEdF,KAAK,CAACE,OAFR;AAGAf,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,kBAAR;AAA4BM,MAAAA,OAAO,EAAEY;AAArC,KAAD,CAAR;AACH;AACJ,CAZM","sourcesContent":["import  Axios  from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport { ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try{\r\n        /*Importing userInfo from userSignIn*/\r\n        const {userSignin: { userInfo }} = getState();\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.post('api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/*Defining detailsOrder from the orderScreen --> useEffect*/\r\n\r\nexport const detailsOrder = (orderId) => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    try{\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`}\r\n        })\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}