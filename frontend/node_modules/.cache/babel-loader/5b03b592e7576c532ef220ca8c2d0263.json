{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL, ORDER_DELETE_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    /*Importing userInfo from userSignIn*/\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    /*AJAX Request*/\n\n    const {\n      data\n    } = await Axios.post('api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n/*Defining detailsOrder from the orderScreen --> useEffect*/\n\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  /*Geeting functional of getState and importing userInfo data*/\n\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    /*AJAX request*/\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    /*userInfo is obtained from getState*/\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n/*For defining successfullPaymentHandler in the ORderScreen*/\n\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  /*AJAX request*/\n\n  try {\n    /*Calling pay API and its type is PUT for payment order details in Paypal*/\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    /*AJAX REQUEST*/\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      /*Authorizzation for getting TOKEN*/\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n/*For viewing order history by admins. \"listOrders\" is a fx in OrderListScreen.js*/\n\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n/*For deleting orders by ADMIN. \"deleteOrder\" fx from OrderListScreen.js is defining here*/\n\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_FAIL","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_DELETE_REQUEST","ORDER_DELETE_FAIL","ORDER_DELETE_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine","listOrders","deleteOrder","delete"],"mappings":"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","sourcesContent":["import  Axios  from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport { ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_MINE_LIST_REQUEST,\r\n    ORDER_MINE_LIST_FAIL,\r\n    ORDER_MINE_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_DELETE_REQUEST,\r\n    ORDER_DELETE_FAIL,\r\n    ORDER_DELETE_SUCCESS} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try{\r\n        /*Importing userInfo from userSignIn*/\r\n        const {userSignin: { userInfo }} = getState();\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.post('api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/*Defining detailsOrder from the orderScreen --> useEffect*/\r\n\r\nexport const detailsOrder = (orderId) => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    \r\n    /*Geeting functional of getState and importing userInfo data*/\r\n    const {userSignin : {userInfo}} = getState();\r\n    \r\n    try{ /*AJAX request*/\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`}\r\n        });                                    /*userInfo is obtained from getState*/\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n};\r\n\r\n\r\n/*For defining successfullPaymentHandler in the ORderScreen*/\r\nexport const payOrder = (order, paymentResult) => async(dispatch, getState) => {\r\n    dispatch ({type: ORDER_PAY_REQUEST, payload: {order, paymentResult } });\r\n    const {userSignin : {userInfo}} = getState();\r\n\r\n        /*AJAX request*/\r\n        try{ /*Calling pay API and its type is PUT for payment order details in Paypal*/\r\n            const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {           \r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n         dispatch({type: ORDER_PAY_SUCCESS, payload: data});\r\n        } catch (error) {\r\n            const message = error.message && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({ type: ORDER_PAY_FAIL, payload: message});\r\n        }\r\n    } \r\n\r\nexport const listOrderMine = () => async(dispatch, getState) => {\r\n    dispatch({type: ORDER_MINE_LIST_REQUEST});\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n        /*AJAX REQUEST*/\r\n        const { data} = await Axios.get('/api/orders/mine', {\r\n            /*Authorizzation for getting TOKEN*/\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: ORDER_MINE_LIST_FAIL, payload: message});\r\n\r\n    }\r\n};\r\n\r\n/*For viewing order history by admins. \"listOrders\" is a fx in OrderListScreen.js*/\r\nexport const listOrders = () => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try{\r\n        const { data } = await Axios.get('/api/orders', {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: ORDER_LIST_FAIL, payload: message});\r\n    }\r\n};\r\n\r\n/*For deleting orders by ADMIN. \"deleteOrder\" fx from OrderListScreen.js is defining here*/\r\nexport const deleteOrder = (orderId) => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId});\r\n    const {userSignin:{userInfo}} = getState();\r\n    try{\r\n        const { data } = await Axios.delete(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message \r\n        : error.message;\r\n        dispatch({ type: ORDER_DELETE_FAIL, payload: message});\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}