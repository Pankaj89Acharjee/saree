{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\n/*For retreving data from the backend to the cart items*/\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n\n    /*At the very beginning of the web app, checking the local storage for Shipping information*/\n\n    /*Intital State of the Shipping Address*/\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n\n    /*Payment Method Module Paypal*/\n    paymentMethod: 'PayPal'\n  },\n\n  /*---------------------------------------------------*/\n\n  /*For retrieving data from the back end for the users*/\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n  /*---------------------------------------------------*/\n\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  listTopSellers: userTopSellerListReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","orderPayReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productListReducer","productUpdateReducer","userDeleteReducer","userDetailsReducer","userListReducer","userRegisterReducer","userSigninReducer","userTopSellerListReducer","userUpdateProfileReducer","userUpdateReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","paymentMethod","userSignin","userInfo","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","productDelete","orderList","orderDelete","orderDeliver","userList","userDelete","userUpdate","listTopSellers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAGuBC,gBAHvB,EAGyCC,oBAHzC,EAIEC,eAJF,QAIyB,0BAJzB;AAMA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,SAASC,iBAAT,EAA4BC,kBAA5B,EACEC,eADF,EACmBC,mBADnB,EAEEC,iBAFF,EAGEC,wBAHF,EAIEC,wBAJF,EAKEC,iBALF,QAK0B,yBAL1B;AAOA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;;AAIF;;AACA;AACAG,IAAAA,eAAe,EAAEJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADe,GAEf,EARA;;AAUF;AACAI,IAAAA,aAAa,EAAE;AAXb,GADa;;AAerB;;AAEA;AACEC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHQ;AAKd;;AAvBqB,CAArB;AA0BA,MAAMO,OAAO,GAAGlC,eAAe,CAAC;AAC9BmC,EAAAA,WAAW,EAAEtB,kBADiB;AAE9BuB,EAAAA,cAAc,EAAExB,qBAFc;AAG9BY,EAAAA,IAAI,EAAEtB,WAHwB;AAI9B8B,EAAAA,UAAU,EAAEb,iBAJkB;AAK9BkB,EAAAA,YAAY,EAAEnB,mBALgB;AAM9BoB,EAAAA,WAAW,EAAEnC,kBANiB;AAO9BoC,EAAAA,YAAY,EAAEjC,mBAPgB;AAQ9BkC,EAAAA,QAAQ,EAAE/B,eARoB;AAS9BgC,EAAAA,aAAa,EAAEjC,oBATe;AAU9BkC,EAAAA,WAAW,EAAE1B,kBAViB;AAW9B2B,EAAAA,iBAAiB,EAAEtB,wBAXW;AAY9BuB,EAAAA,aAAa,EAAElC,oBAZe;AAa9BmC,EAAAA,aAAa,EAAE/B,oBAbe;AAc9BgC,EAAAA,aAAa,EAAEnC,oBAde;AAe9BoC,EAAAA,SAAS,EAAExC,gBAfmB;AAgB9ByC,EAAAA,WAAW,EAAE5C,kBAhBiB;AAiB9B6C,EAAAA,YAAY,EAAE5C,mBAjBgB;AAkB9B6C,EAAAA,QAAQ,EAAEjC,eAlBoB;AAmB9BkC,EAAAA,UAAU,EAAEpC,iBAnBkB;AAoB9BqC,EAAAA,UAAU,EAAE9B,iBApBkB;AAqB9B+B,EAAAA,cAAc,EAAEjC;AArBc,CAAD,CAA/B;AAuBA,MAAMkC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C1D,OAAvE;AACA,MAAM2D,KAAK,GAAG5D,WAAW,CACvBqC,OADuB,EAEvBX,YAFuB,EAGvB+B,eAAe,CAACvD,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAewD,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, \r\n  orderDeleteReducer, \r\n  orderDeliverReducer, \r\n  orderDetailsReducer, orderListReducer, orderMineListReducer, \r\n  orderPayReducer } from './reducers/orderReducers';\r\n  \r\nimport {\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport { userDeleteReducer, userDetailsReducer, \r\n  userListReducer, userRegisterReducer, \r\n  userSigninReducer, \r\n  userTopSellerListReducer, \r\n  userUpdateProfileReducer, \r\n  userUpdateReducer} from './reducers/userReducers';\r\n\r\n/*For retreving data from the backend to the cart items*/\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n      /*At the very beginning of the web app, checking the local storage for Shipping information*/\r\n      /*Intital State of the Shipping Address*/\r\n      shippingAddress: localStorage.getItem('shippingAddress')\r\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n      : {},\r\n\r\n      /*Payment Method Module Paypal*/\r\n      paymentMethod: 'PayPal',\r\n  },\r\n\r\n/*---------------------------------------------------*/\r\n\r\n/*For retrieving data from the back end for the users*/\r\n  userSignin: {\r\n    userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n  }\r\n/*---------------------------------------------------*/\r\n\r\n};\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer, \r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  orderList: orderListReducer,\r\n  orderDelete: orderDeleteReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  listTopSellers: userTopSellerListReducer,\r\n});\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}