{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/USER/Desktop/Programming/Saree/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Axios from\"axios\";import{PayPalButton}from'react-paypal-button-v2';import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{Link}from\"react-router-dom\";import{deliverOrder,detailsOrder,payOrder}from\"../actions/orderActions\";import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{ORDER_DELIVER_RESET,ORDER_PAY_RESET}from\"../constants/orderConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function OrderScreen(props){var orderId=props.match.params.id;/*MAtching orderId and storing in orderId const*/ /*Getting status of PAYPAL SDK by REACT hooks*/var _useState=useState(false),_useState2=_slicedToArray(_useState,2),sdkReady=_useState2[0],setSdkReady=_useState2[1];/*Getting OrderPay from REDUX*/var orderPay=useSelector(function(state){return state.orderPay;});var loadingPay=orderPay.loading,errorPay=orderPay.error,successPay=orderPay.success;/*Getting OrderDeliver from REDUX, ie., from store.js*/var orderDeliver=useSelector(function(state){return state.orderDeliver;});var loadingDeliver=orderDeliver.loading,errorDeliver=orderDeliver.error,successDeliver=orderDeliver.success;/* Now fetching orderDetails from REDUX store*/var orderDetails=useSelector(function(state){return state.orderDetails;});/*orderDetails contains order loading and error from REDUX store*/var order=orderDetails.order,loading=orderDetails.loading,error=orderDetails.error;/*Importing userInfo from redux*/var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var dispatch=useDispatch();/*Using const orderId = props.match.params.id;*/useEffect(function(){var addPayPalScript=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Axios$get,data,script;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get('/api/config/paypal');case 2:_yield$Axios$get=_context.sent;data=_yield$Axios$get.data;script=document.createElement('script');script.type=\"text/javascript\";script.src=\"https://www.paypal.com/sdk/js?client-id=\".concat(data);script.async=true;script.onload=function(){setSdkReady(true);};document.body.appendChild(script);case 10:case\"end\":return _context.stop();}}},_callee);}));return function addPayPalScript(){return _ref.apply(this,arguments);};}();if(!order||successPay||successDeliver||order&&order._id!==orderId)/*If Order Id is not loaded, \r\n       then load it, OR if successPay is true then refresh the page OR \r\n       order_id and OrderId does not match means, if the ID is not matched \r\n       with the URL id and customer order Id, then refresh the page and \r\n       to generate a new order id*/{dispatch({type:ORDER_PAY_RESET});dispatch({type:ORDER_DELIVER_RESET});/*After updating delivery, we need to show the updated orders again*/dispatch(detailsOrder(orderId));/*OrderId comes from URL, so we need to define and import it*/}else{if(!order.isPaid){if(!window.paypal){addPayPalScript();/*If paypal window is not loaded, it loads it*/}else{setSdkReady(true);}}}},[dispatch,order,orderId,sdkReady,successPay,successDeliver]);/*---Defining SuccessPaymentHandler----*/var successPaymentHandler=function successPaymentHandler(paymentResult){dispatch(payOrder(order,paymentResult));/*paymentResult is the result in the paypal*/};/*For DeliverHandler fx*/var deliverHandler=function deliverHandler(){dispatch(deliverOrder(order._id));};var date=useState(function(currentDateTime){return Date();});return loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Order No: \",order._id]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row top\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-2\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card card-body\"/*For Shipping Address*/,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),order.shippingAddress.fullName,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"}),order.shippingAddress.address,\",\",order.shippingAddress.city,\",\",order.shippingAddress.postalCode,\",\",order.shippingAddress.country]}),order.isDelivered?/*#__PURE__*/_jsxs(MessageBox,{variant:\"success\",children:[\"Delivered at \",order.deliveredAt]}):/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:\"Not Delivered\"})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card card-body\"/*For payment*/,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Method:\"}),order.paymentMethod]}),order.isPaid?/*#__PURE__*/_jsxs(MessageBox,{variant:\"success\",children:[\"Paid at \",order.paidAt]}):/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:\"Not Paid\"})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card card-body\"/*For payment*/,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Ordered Items\"}),/*#__PURE__*/_jsx(\"ul\",{children:order.orderItems.map(function(item){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\"/*For fetching product details*/,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:item.image,alt:item.name,className:\"small\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"min-30\"/*2nd Col for Product Name*/,children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(\"div\",{children:[item.qty,\"  Pieces x \",item.price,\" Rs/Unit =  Rs. \",item.qty*item.price]})]})},item.product);})})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card card-body\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Total Price of items\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rs. \",order.itemsPrice.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Shipping Cost \"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rs. \",order.shippingPrice.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Tax \"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rs. \",order.taxPrice.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Rs. \",order.totalPrice.toFixed(2)]})})]})}),!order.isPaid&&/*#__PURE__*/_jsx(\"li\",{children:!sdkReady?/*#__PURE__*/_jsx(LoadingBox,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[errorPay&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorPay}),loadingPay&&/*#__PURE__*/_jsx(LoadingBox,{}),/*#__PURE__*/_jsx(PayPalButton,{amount:order.totalPrice,onSuccess:successPaymentHandler})]})}),userInfo.isAdmin&&order.isPaid&&!order.isDelivered&&/*#__PURE__*/_jsxs(\"li\",{children:[loadingDeliver&&/*#__PURE__*/_jsx(LoadingBox,{}),errorDeliver&&/*#__PURE__*/_jsx(MessageBox,{variant:\"damger\",children:errorDeliver}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"primary block\",onClick:deliverHandler,children:\"Deliver Order\"})]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Date of Order: \",date,\" \"]})})]})})})]})]});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/OrderScreen.js"],"names":["Axios","PayPalButton","React","useEffect","useState","useDispatch","useSelector","Link","deliverOrder","detailsOrder","payOrder","LoadingBox","MessageBox","ORDER_DELIVER_RESET","ORDER_PAY_RESET","OrderScreen","props","orderId","match","params","id","sdkReady","setSdkReady","orderPay","state","loadingPay","loading","errorPay","error","successPay","success","orderDeliver","loadingDeliver","errorDeliver","successDeliver","orderDetails","order","userSignin","userInfo","dispatch","addPayPalScript","get","data","script","document","createElement","type","src","async","onload","body","appendChild","_id","isPaid","window","paypal","successPaymentHandler","paymentResult","deliverHandler","date","currentDateTime","Date","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","orderItems","map","item","image","name","product","qty","price","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["\r\nimport  Axios  from \"axios\";\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deliverOrder, detailsOrder, payOrder } from \"../actions/orderActions\";\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\n\r\nexport default function OrderScreen(props) { \r\n    const orderId = props.match.params.id; /*MAtching orderId and storing in orderId const*/\r\n    /*Getting status of PAYPAL SDK by REACT hooks*/\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    /*Getting OrderPay from REDUX*/\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const {\r\n        loading: loadingPay, \r\n        error: errorPay, \r\n        success: successPay} = orderPay;\r\n\r\n\r\n    /*Getting OrderDeliver from REDUX, ie., from store.js*/\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const {\r\n        loading: loadingDeliver, \r\n        error: errorDeliver, \r\n        success: successDeliver} = orderDeliver;\r\n    \r\n    \r\n    /* Now fetching orderDetails from REDUX store*/\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    /*orderDetails contains order loading and error from REDUX store*/\r\n    const {order,loading, error} = orderDetails; \r\n\r\n\r\n    /*Importing userInfo from redux*/\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    /*Using const orderId = props.match.params.id;*/\r\n    useEffect(() => {\r\n       const addPayPalScript = async () => {\r\n           /*It's backend request to get the client ID*/\r\n           const { data } = await Axios.get('/api/config/paypal');\r\n           const script = document.createElement('script');\r\n           script.type=\"text/javascript\";\r\n           script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n           script.async=true;\r\n           script.onload = () => {\r\n               setSdkReady(true);\r\n           };\r\n           document.body.appendChild(script); \r\n       };\r\n       if(!order || successPay || successDeliver || (order && order._id !== orderId))  /*If Order Id is not loaded, \r\n       then load it, OR if successPay is true then refresh the page OR \r\n       order_id and OrderId does not match means, if the ID is not matched \r\n       with the URL id and customer order Id, then refresh the page and \r\n       to generate a new order id*/\r\n       {\r\n        dispatch({type: ORDER_PAY_RESET});\r\n        dispatch({type:ORDER_DELIVER_RESET}); /*After updating delivery, we need to show the updated orders again*/\r\n        dispatch(detailsOrder(orderId)); /*OrderId comes from URL, so we need to define and import it*/\r\n       } else {\r\n           if(!order.isPaid) {\r\n               if(!window.paypal) {\r\n                   addPayPalScript(); /*If paypal window is not loaded, it loads it*/\r\n               } else {\r\n                   setSdkReady(true);\r\n               }\r\n           }\r\n       }\r\n       \r\n    }, [dispatch, order, orderId, sdkReady, successPay, successDeliver]);\r\n\r\n/*---Defining SuccessPaymentHandler----*/\r\nconst successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(order, paymentResult)) /*paymentResult is the result in the paypal*/\r\n\r\n}\r\n\r\n/*For DeliverHandler fx*/\r\nconst deliverHandler = () => {\r\n    dispatch(deliverOrder(order._id));\r\n}\r\n\r\n    \r\n\r\n    var date = useState(currentDateTime => Date());\r\n    \r\n    return loading? (\r\n    <LoadingBox></LoadingBox>\r\n    ) : error? (\r\n    <MessageBox variant = \"danger\">{error}</MessageBox>\r\n    ) : (\r\n        <div>\r\n           <h1>Order No: {order._id}</h1>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For Shipping Address*/>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong> \r\n                                    {order.shippingAddress.fullName} <br />\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address}, \r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered \r\n                                ? ( <MessageBox variant=\"success\">Delivered at {order.deliveredAt}\r\n                                </MessageBox> \r\n                                 ) : (\r\n                                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        \r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Payment</h2>\r\n                                <p>\r\n                                    <strong>Method:</strong> \r\n                                    {order.paymentMethod}            \r\n                                </p>\r\n                                \r\n                                {order.isPaid \r\n                                ? ( <MessageBox variant=\"success\">Paid at {order.paidAt}\r\n                                </MessageBox> \r\n                                 ) : (\r\n                                <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Ordered Items</h2>\r\n                                <ul>\r\n                                    { order.orderItems.map((item) => (\r\n                                    <li key = {item.product}>\r\n                                    <div className = \"row\" /*For fetching product details*/> \r\n                                    <div /*!st Col for image*/> \r\n                                        <img src = {item.image} \r\n                                        alt = {item.name} \r\n                                        className = \"small\">                      \r\n                                        </img>\r\n                                    </div>\r\n\r\n                                    <div className = \"min-30\" /*2nd Col for Product Name*/>\r\n                                         <Link to = {`/product/${item.product}`}>\r\n                                             {item.name}</Link>\r\n                                    </div>\r\n\r\n                                    \r\n\r\n                                    <div /*4th Col showing price per unit*/>\r\n                                        {item.qty}  Pieces x {item.price} Rs/Unit =  Rs. {item.qty * item.price}\r\n                                    </div>\r\n\r\n                        \r\n                                    </div>\r\n\r\n                                    </li>\r\n                                    )\r\n                                    )}\r\n                                </ul>\r\n                                \r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className = \"col-1\">\r\n                    <div className = \"card card-body\">\r\n                        <ul>\r\n                            <li>\r\n                                <h2>Order Summary</h2>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Total Price of items</div>\r\n                                    <div>Rs. {order.itemsPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                \r\n                                <div className=\"row\">\r\n                                    <div>Shipping Cost </div>\r\n                                    <div>Rs. {order.shippingPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Tax </div>\r\n                                    <div>Rs. {order.taxPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div><strong>Total Amount</strong></div>\r\n                                    <div><strong>Rs. {order.totalPrice.toFixed(2)}</strong></div>\r\n                                </div>\r\n                            </li>\r\n                            {\r\n                                !order.isPaid && (\r\n                                    <li>\r\n                                        {!sdkReady ? (<LoadingBox></LoadingBox>\r\n                                        ) : (\r\n                                            <>\r\n                                            {\r\n                                                errorPay && <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                                            }\r\n\r\n                                            {\r\n                                                loadingPay && <LoadingBox></LoadingBox>\r\n                                            }\r\n                                           <PayPalButton \r\n                                             amount={order.totalPrice}\r\n                                             onSuccess={successPaymentHandler}>\r\n                                            </PayPalButton>\r\n                                            </>\r\n                                        )}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <li>\r\n                                    {loadingDeliver && <LoadingBox></LoadingBox>}\r\n                                    {errorDeliver && <MessageBox variant=\"damger\">{errorDeliver}</MessageBox>}\r\n                                    <button type=\"button\" \r\n                                    className=\"primary block\"\r\n                                    onClick={deliverHandler} >Deliver Order</button>\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <p>Date of Order: {date} </p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}