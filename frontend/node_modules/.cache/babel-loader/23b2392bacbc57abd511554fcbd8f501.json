{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Programming\\\\Saree\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { detailsProduct } from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen(props) {\n  _s();\n\n  /*1st of all we need productId from the URL*/\n  const productId = props.match.params.id;\n  /*Defining Hooks for product fields*/\n\n  const [name, setName] = useState(' ');\n  const [price, setPrice] = useState(' ');\n  const [image, setImage] = useState(' ');\n  const [category, setCategory] = useState(' ');\n  const [countInStock, setCountInStock] = useState(' ');\n  const [brand, setBrand] = useState(' ');\n  const [description, setDescription] = useState(' ');\n  /*We need \"productDetails()\" fx from store.js and here to use its effect from the REDUCER*/\n\n  const productDetails = useSelector(state => state.productDetails);\n  /*Using following fx from the REDUCER for \"productDetails()\" >> store.js*/\n\n  const {\n    product,\n    loading,\n    error\n  } = productDetails;\n  /*Now as we need to dispatch the details product, we have to use\r\n  useEffect from the react redux*/\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!product || product._id !== productId)\n      /*This means that we didn't load product from the back end. It ibstructs to load product*/\n\n      /* (product._id !== productId) >> means product exists but if the new id is not same as database product's Id.\r\n      This is done because before that when ever we click on the create new product\r\n      button, it automatically redirects us to the product edit screen instead of \r\n      product create screen.*/\n      {\n        dispatch(detailsProduct(productId));\n        /*detailsProduct() fx residing in productAction.js file*/\n      } else {\n      /*If exists, then fill the fields accroding to the data in the backend to the UI*/\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [dispatch, productId, product]);\n  /*Defining fx {submitHandler}*/\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"PRODUCT EDIT SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter product name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"price\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"New Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter product category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter product brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"No of stocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter product stock number\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            type: \"text\",\n            rows: \"3\",\n            placeholder: \"Enter product description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"YqC1djl2W5T4yMUK7f58D5Rx6MM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsProduct","LoadingBox","MessageBox","ProductEditScreen","props","productId","match","params","id","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","productDetails","state","product","loading","error","dispatch","_id","submitHandler","e","preventDefault","updateProduct","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AACjD;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,GAAD,CAA9C;AACA;;AACA,QAAM0B,cAAc,GAAGxB,WAAW,CAACyB,KAAK,IAAIA,KAAK,CAACD,cAAhB,CAAlC;AACA;;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BJ,cAApC;AAEA;AACA;;AACA,QAAMK,QAAQ,GAAG9B,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAAC6B,OAAD,IAAaA,OAAO,CAACI,GAAR,KAAgBxB,SAAhC;AAA6C;;AACjC;AAChB;AACA;AACA;AACI;AACIuB,QAAAA,QAAQ,CAAC5B,cAAc,CAACK,SAAD,CAAf,CAAR;AAAqC;AACxC,OAPD,MAOO;AAAE;AACLK,MAAAA,OAAO,CAACe,OAAO,CAAChB,IAAT,CAAP;AACAG,MAAAA,QAAQ,CAACa,OAAO,CAACd,KAAT,CAAR;AACAG,MAAAA,QAAQ,CAACW,OAAO,CAACZ,KAAT,CAAR;AACAG,MAAAA,WAAW,CAACS,OAAO,CAACV,QAAT,CAAX;AACAG,MAAAA,eAAe,CAACO,OAAO,CAACR,YAAT,CAAf;AACAG,MAAAA,QAAQ,CAACK,OAAO,CAACN,KAAT,CAAR;AACAG,MAAAA,cAAc,CAACG,OAAO,CAACJ,WAAT,CAAd;AACH;AAGJ,GAnBQ,EAmBN,CAACO,QAAD,EAAWvB,SAAX,EAAsBoB,OAAtB,CAnBM,CAAT;AAqBA;;AACI,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,QAAQ,CACJK,aAAa,CAAC;AACVJ,MAAAA,GAAG,EAAExB,SADK;AAEVI,MAAAA,IAFU;AAGVE,MAAAA,KAHU;AAIVE,MAAAA,KAJU;AAKVE,MAAAA,QALU;AAMVI,MAAAA,KANU;AAOVF,MAAAA,YAPU;AAQVI,MAAAA;AARU,KAAD,CADT,CAAR;AAYH,GAfG;;AAiBA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAG,MAAlB;AAAyB,MAAA,QAAQ,EAAIS,aAArC;AAAA,8BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKJ,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GACNC,KAAK,gBAAG,QAAC,UAAD;AAAY,QAAA,OAAO,EAAG,QAAtB;AAAA,kBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAEP;AAAA,gCACA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,MAAV;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,WAAW,EAAG,oBAFd;AAGA,YAAA,KAAK,EAAIlB,IAHT;AAIA,YAAA,QAAQ,EAAKsB,CAAD,IAAOrB,OAAO,CAACqB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAWA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,OAAV;AACA,YAAA,IAAI,EAAG,OADP;AAEA,YAAA,WAAW,EAAG,aAFd;AAGA,YAAA,KAAK,EAAIxB,KAHT;AAIA,YAAA,QAAQ,EAAKoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXA,eAqBA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,OAAV;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,WAAW,EAAG,WAFd;AAGA,YAAA,KAAK,EAAItB,KAHT;AAIA,YAAA,QAAQ,EAAKkB,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBA,eA+BA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,UAAV;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,WAAW,EAAG,wBAFd;AAGA,YAAA,KAAK,EAAIpB,QAHT;AAIA,YAAA,QAAQ,EAAKgB,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BA,eAyCA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,OAAV;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,WAAW,EAAG,qBAFd;AAGA,YAAA,KAAK,EAAIhB,KAHT;AAIA,YAAA,QAAQ,EAAKY,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACG,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCA,eAmDA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,cAAV;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,WAAW,EAAG,4BAFd;AAGA,YAAA,KAAK,EAAIlB,YAHT;AAIA,YAAA,QAAQ,EAAKc,CAAD,IAAOb,eAAe,CAACa,CAAC,CAACG,MAAF,CAASC,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnDA,eA6DA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,EAAE,EAAC,aAAb;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,IAAI,EAAG,GAFP;AAGA,YAAA,WAAW,EAAG,2BAHd;AAIA,YAAA,KAAK,EAAId,WAJT;AAKA,YAAA,QAAQ,EAAKU,CAAD,IAAOT,cAAc,CAACS,CAAC,CAACG,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DA,eAwEA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxEA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4FH;;GAtJuBhC,iB;UAYDJ,W,EAMND,W;;;KAlBOK,iB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsProduct } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function ProductEditScreen(props) {\r\n/*1st of all we need productId from the URL*/\r\nconst productId = props.match.params.id;\r\n/*Defining Hooks for product fields*/\r\nconst [name, setName] = useState(' ');\r\nconst [price, setPrice] = useState(' ');\r\nconst [image, setImage] = useState(' ');\r\nconst [category, setCategory] = useState(' ');\r\nconst [countInStock, setCountInStock] = useState(' ');\r\nconst [brand, setBrand] = useState(' ');\r\nconst [description, setDescription] = useState(' ');\r\n/*We need \"productDetails()\" fx from store.js and here to use its effect from the REDUCER*/\r\nconst productDetails = useSelector(state => state.productDetails);\r\n/*Using following fx from the REDUCER for \"productDetails()\" >> store.js*/\r\nconst { product, loading, error } = productDetails;\r\n\r\n/*Now as we need to dispatch the details product, we have to use\r\nuseEffect from the react redux*/\r\nconst dispatch = useDispatch();\r\nuseEffect(() => {\r\n    if(!product || (product._id !== productId) ) /*This means that we didn't load product from the back end. It ibstructs to load product*/\r\n                /* (product._id !== productId) >> means product exists but if the new id is not same as database product's Id.\r\n                This is done because before that when ever we click on the create new product\r\n                button, it automatically redirects us to the product edit screen instead of \r\n                product create screen.*/\r\n    {\r\n        dispatch(detailsProduct(productId)); /*detailsProduct() fx residing in productAction.js file*/\r\n    } else { /*If exists, then fill the fields accroding to the data in the backend to the UI*/\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setBrand(product.brand);\r\n        setDescription(product.description);\r\n    }\r\n    \r\n    \r\n}, [dispatch, productId, product]);\r\n\r\n/*Defining fx {submitHandler}*/\r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n        updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            category,\r\n            brand,\r\n            countInStock,\r\n            description,\r\n        })\r\n    );\r\n};\r\n\r\n    return (\r\n        <div>\r\n            <form className = \"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>PRODUCT EDIT SECTION</h1>\r\n                </div>\r\n                {loading ? <LoadingBox></LoadingBox> \r\n                : error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n                : \r\n                <>\r\n                <div /*Editing for name field*/>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product name\" \r\n                    value = {name} \r\n                    onChange = {(e) => setName(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for name price*/>\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input id=\"price\" \r\n                    type = \"price\" \r\n                    placeholder = \"Enter price\" \r\n                    value = {price} \r\n                    onChange = {(e) => setPrice(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for Image*/>\r\n                    <label htmlFor=\"image\">Name</label>\r\n                    <input id=\"image\" \r\n                    type = \"text\" \r\n                    placeholder = \"New Image\" \r\n                    value = {image} \r\n                    onChange = {(e) => setImage(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for category field*/>\r\n                    <label htmlFor=\"category\">Category</label>\r\n                    <input id=\"category\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product category\" \r\n                    value = {category} \r\n                    onChange = {(e) => setCategory(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for brand field*/>\r\n                    <label htmlFor=\"brand\">Brand</label>\r\n                    <input id=\"brand\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product brand\" \r\n                    value = {brand} \r\n                    onChange = {(e) => setBrand(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for countInStock field*/>\r\n                    <label htmlFor=\"countInStock\">No of stocks</label>\r\n                    <input id=\"countInStock\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product stock number\" \r\n                    value = {countInStock} \r\n                    onChange = {(e) => setCountInStock(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for description field*/>\r\n                    <label htmlFor=\"description\">Name</label>\r\n                    <textarea id=\"description\" \r\n                    type = \"text\" \r\n                    rows = \"3\"\r\n                    placeholder = \"Enter product description\" \r\n                    value = {description} \r\n                    onChange = {(e) => setDescription(e.target.value)}>\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type = \"submit\">Update Details</button>\r\n                </div>\r\n\r\n                </>\r\n                }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}