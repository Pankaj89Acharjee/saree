{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCreateReducer, productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\n/*For retreving data from the backend to the cart items*/\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n\n    /*At the very beginning of the web app, checking the local storage for Shipping information*/\n\n    /*Intital State of the Shipping Address*/\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n\n    /*Payment Method Module Paypal*/\n    paymentMethod: 'PayPal'\n  },\n\n  /*---------------------------------------------------*/\n\n  /*For retrieving data from the back end for the users*/\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n  /*---------------------------------------------------*/\n\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Programming/Saree/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","orderPayReducer","productCreateReducer","productDetailsReducer","productListReducer","userDetailsReducer","userRegisterReducer","userSigninReducer","userUpdateProfileReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","paymentMethod","userSignin","userInfo","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EACEC,mBADF,EACuBC,oBADvB,EAEEC,eAFF,QAEyB,0BAFzB;AAIA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,4BAJP;AAKA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAqEC,wBAArE,QAAqG,yBAArG;AAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;;AAIF;;AACA;AACAG,IAAAA,eAAe,EAAEJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADe,GAEf,EARA;;AAUF;AACAI,IAAAA,aAAa,EAAE;AAXb,GADa;;AAerB;;AAEA;AACEC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHQ;AAKd;;AAvBqB,CAArB;AA0BA,MAAMO,OAAO,GAAGzB,eAAe,CAAC;AAC9B0B,EAAAA,WAAW,EAAEjB,kBADiB;AAE9BkB,EAAAA,cAAc,EAAEnB,qBAFc;AAG9BO,EAAAA,IAAI,EAAEb,WAHwB;AAI9BqB,EAAAA,UAAU,EAAEX,iBAJkB;AAK9BgB,EAAAA,YAAY,EAAEjB,mBALgB;AAM9BkB,EAAAA,WAAW,EAAE1B,kBANiB;AAO9B2B,EAAAA,YAAY,EAAE1B,mBAPgB;AAQ9B2B,EAAAA,QAAQ,EAAEzB,eARoB;AAS9B0B,EAAAA,aAAa,EAAE3B,oBATe;AAU9B4B,EAAAA,WAAW,EAAEvB,kBAViB;AAW9BwB,EAAAA,iBAAiB,EAAErB,wBAXW;AAY9BsB,EAAAA,aAAa,EAAE5B;AAZe,CAAD,CAA/B;AAcA,MAAM6B,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CxC,OAAvE;AACA,MAAMyC,KAAK,GAAG1C,WAAW,CACvB4B,OADuB,EAEvBX,YAFuB,EAGvBsB,eAAe,CAACrC,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAesC,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, \r\n  orderDetailsReducer, orderMineListReducer, \r\n  orderPayReducer } from './reducers/orderReducers';\r\n  \r\nimport {\r\n  productCreateReducer,\r\n  productDetailsReducer,\r\n  productListReducer,\r\n} from './reducers/productReducers';\r\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\r\n\r\n/*For retreving data from the backend to the cart items*/\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n      /*At the very beginning of the web app, checking the local storage for Shipping information*/\r\n      /*Intital State of the Shipping Address*/\r\n      shippingAddress: localStorage.getItem('shippingAddress')\r\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n      : {},\r\n\r\n      /*Payment Method Module Paypal*/\r\n      paymentMethod: 'PayPal',\r\n  },\r\n\r\n/*---------------------------------------------------*/\r\n\r\n/*For retrieving data from the back end for the users*/\r\n  userSignin: {\r\n    userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n  }\r\n/*---------------------------------------------------*/\r\n\r\n};\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer, \r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  productCreate: productCreateReducer,\r\n});\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}