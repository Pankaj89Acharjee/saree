{"version":3,"sources":["constants/productConstants.js","actions/productActions.js","constants/userConstants.js","actions/userActions.js","components/AdminRoute.js","components/LoadingBox.js","components/MessageBox.js","components/PrivateRoute.js","components/SearchBox.js","components/SellerRoute.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","constants/orderConstants.js","screens/DashboardScreen.js","actions/orderActions.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/OrderHistoryScreen.js","screens/OrderListScreen.js","screens/OrderScreen.js","components/CheckoutSteps.js","screens/PaymentMethodScreen.js","screens/PlaceOrderScreen.js","screens/ProductEditScreen.js","screens/ProductListScreen.js","screens/ProductScreen.js","screens/ProfileScreen.js","screens/RegisterScreen.js","utils.js","screens/SearchScreen.js","screens/SellerScreen.js","screens/ShippingAddressScreen.js","screens/SigninScreen.js","screens/UserEditScreen.js","screens/UserListScreen.js","App.js","serviceWorker.js","reducers/productReducers.js","store.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_RESET","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_FAIL","PRODUCT_REVIEW_REQUEST","PRODUCT_REVIEW_SUCCESS","PRODUCT_REVIEW_FAIL","PRODUCT_REVIEW_RESET","listProducts","pageNumber","seller","name","category","min","max","rating","order","dispatch","a","type","Axios","get","data","payload","message","detailsProduct","productId","response","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGIN_REQUEST","USER_SIGIN_SUCCESS","USER_SIGIN_FAIL","USER_SIGIN_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_TOPSELLER_LIST_REQUEST","USER_TOPSELLER_LIST_SUCCESS","USER_TOPSELLER_LIST_FAIL","detailsUser","userId","getState","userInfo","userSignin","headers","Authorization","token","AdminRoute","Component","component","rest","useSelector","state","render","props","isAdmin","to","LoadingBox","className","MessageBox","variant","children","PrivateRoute","SearchBox","useState","setName","onSubmit","e","preventDefault","history","push","id","onChange","target","value","SellerRoute","isSeller","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_EMPTY","addToCart","qty","image","price","countInStock","product","_id","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","match","params","location","search","Number","split","useDispatch","useEffect","removeFromCartHandler","removeFromCart","length","map","item","src","alt","Array","keys","x","onClick","reduce","c","disabled","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELETE_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","ORDER_SUMMARY_FAIL","DashboardScreen","orderSummary","loading","summary","error","users","numUsers","orders","numOrders","totalSales","toFixed","dailyOrders","width","height","chartType","loader","sales","productCategories","count","Rating","numReviews","caption","Product","HomeScreen","useParams","productList","products","pages","page","userTopSellersList","loadingSellers","errorSellers","sellers","showArrows","autoPlay","showThumbs","logo","OrderHistoryScreen","orderMineList","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","OrderListScreen","sellerMode","path","indexOf","orderList","orderDelete","loadingDelete","errorDelete","successDelete","success","listOrders","deleteHandler","orderId","window","confirm","delete","user","OrderScreen","sdkReady","setSdkReady","orderPay","loadingPay","errorPay","successPay","orderDeliver","loadingDeliver","errorDeliver","successDeliver","orderDetails","addPayPalScript","script","document","createElement","async","onload","body","appendChild","detailsOrder","paypal","date","currentDateTime","Date","shippingAddress","fullName","address","city","postalCode","country","paymentMethod","orderItems","itemsPrice","shippingPrice","taxPrice","amount","onSuccess","paymentResult","put","payOrder","deliverOrder","CheckoutSteps","step1","step2","step3","step4","PaymentMethodScreen","setPaymentMethod","required","checked","htmlFor","PlaceOrderScreen","orderCreate","toPrice","num","post","removeItem","createOrder","ProductEditScreen","setPrice","setImage","setCategory","setCountInStock","brand","setBrand","description","setDescription","productDetails","productUpdate","loadingUpdate","errorUpdate","successUpdated","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","uploadFileHandler","file","files","bodyFormData","FormData","append","updateProduct","placeholder","label","rows","ProductListScreen","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","productDelete","ProductScreen","setQty","productReviewCreate","loadingReviewCreate","errorReviewCreate","successReviewCreate","setRating","comment","setComment","alert","reviews","review","createReview","ProfileScreen","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userDetails","userUpdateProfile","successUpdate","updateUserProfile","RegisterScreen","redirect","userRegister","register","prices","ratings","SearchScreen","productCategoryList","categories","getFilterUrl","filter","filterPage","filterCategory","filterName","filterRating","sortOrder","filterMin","filterMax","p","r","SellerScreen","sellerId","loadingProducts","errorProducts","href","ShippingAddressScreen","selected","setSelected","setFullName","setAddress","setCity","setPostalCode","setCountry","options","index","SigninScreen","signin","UserEditScreen","setIsSeller","setIsAdmin","userUpdate","updateUser","UserListScreen","userList","userDelete","App","exact","class","Boolean","hostname","require","initialState","getItem","parse","reducer","combineReducers","action","existItem","find","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.30f19139.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\nexport const PRODUCT_DELETE_RESET = 'PRODUCT_DELETE_RESET';\r\n\r\nexport const PRODUCT_CATEGORY_LIST_SUCCESS = \"PRODUCT_CATEGORY_LIST_SUCCESS\";\r\nexport const PRODUCT_CATEGORY_LIST_REQUEST = \"PRODUCT_CATEGORY_LIST_REQUEST\";\r\nexport const PRODUCT_CATEGORY_LIST_FAIL = \"PRODUCT_CATEGORY_LIST_FAIL\";\r\n\r\n\r\nexport const PRODUCT_REVIEW_REQUEST = 'PRODUCT_REVIEW_REQUEST';\r\nexport const PRODUCT_REVIEW_SUCCESS = 'PRODUCT_REVIEW_SUCCESS';\r\nexport const PRODUCT_REVIEW_FAIL = 'PRODUCT_REVIEW_FAIL';\r\nexport const PRODUCT_REVIEW_RESET = 'PRODUCT_REVIEW_RESET';","import Axios from 'axios';\r\nimport {\r\n  PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_CATEGORY_LIST_REQUEST,\r\n  PRODUCT_CATEGORY_LIST_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = ({\r\n  pageNumber = '',\r\n  seller = '', \r\n  name='', \r\n  category= '', \r\n  min = 0, \r\n  max = 0, \r\n  rating = 0, \r\n  order = '', } /*Default value is 0*/) => async (dispatch) => {\r\n    dispatch({type: PRODUCT_LIST_REQUEST,});\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    const { data } = await Axios.get(`/api/products/${productId}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/* fx defining here which is written in ProductListScreen names as\r\ncreateProduct fx*/\r\nexport const createProduct = () => async(dispatch, getState) => {\r\n  dispatch({type: PRODUCT_CREATE_REQUEST});\r\n  /*We need token for login, so userInfo is imported here and only\r\n  admins can create products, that's why checking user is compulsory*/\r\n  const {userSignin:{userInfo}} = getState();\r\n  try {\r\n    /*AJAX request*/\r\n    const { data } = await Axios.post('/api/products', {}, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}`},\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data.product});\r\n    /* Here in the above, payload: data.product --> data.product is\r\n    the parameter used in the productRouter in the BACKEND => res.send({message: 'Product Created', product: createdProduct });\r\n    => in the last parameter createdProduct to the FRONTEND. \r\n    Means createdProduct = data.product*/\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message\r\n    ? error.response.data.message\r\n    : error.message;\r\n    dispatch({type: PRODUCT_CREATE_FAIL, payload:message});\r\n  }\r\n  \r\n};\r\n\r\n\r\n/*For updating product, and fx defined in ProductEditScreen.js*/\r\nexport const updateProduct = (product) => async(dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product});\r\n  /*GEtting token for userInfo for userSignIn*/\r\n  const {userSignin:{userInfo}} = getState();\r\n  try{\r\n    /*AJAX*/\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, \r\n    {headers: {Authorization: `Bearer ${userInfo.token}`}}\r\n    )\r\n    dispatch({type: PRODUCT_UPDATE_SUCCESS, payload: data});\r\n  }\r\n   catch (error) {\r\n    const message = error.response && error.response.data.message\r\n    ? error.response.data.message\r\n    : error.message;\r\n    dispatch({type: PRODUCT_UPDATE_FAIL, error:message});\r\n  }\r\n\r\n  \r\n};\r\n\r\n/*Fx for deleting products from the fx deleteProduct in the ProductListScreen*/\r\nexport const deleteProduct = (productId) => async(dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n  /*We need token for authenticated request in the userSignin*/\r\n  const {userSignin: {userInfo}} = getState();\r\n  try{\r\n    const { data } =  Axios.delete(`/api/products/${productId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}`}\r\n    })\r\n    dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data});\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message\r\n    ? error.response.data.message\r\n    : error.message;\r\n    dispatch({type: PRODUCT_DELETE_FAIL, payload: message});\r\n  }\r\n};\r\n\r\n/*Defining listProductCategory from the APP.JS for category wise listing of products*/\r\nexport const listProductCategories = () => async (dispatch) => {\r\n  dispatch({\r\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(`/api/products/categories`);\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n/*For rating and comment by the user and defining the function in the\r\nsubmitHandler () fx of PreoductScreen.js*/\r\nexport const createReview = (productId, review) => async(dispatch, getState) => {\r\n  dispatch({type: PRODUCT_REVIEW_REQUEST});\r\n  /*We need token for login, so userInfo is imported here and only\r\n  admins can create products, that's why checking user is compulsory*/\r\n  const {userSignin:{userInfo}} = getState();\r\n  try {\r\n    /*AJAX request*/\r\n    const { data } = await Axios.post(`/api/products/${productId}/reviews`, review, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}`},\r\n      }\r\n    );\r\n    dispatch({ type: PRODUCT_REVIEW_SUCCESS, payload: data.review});\r\n    /* Here in the above, payload: data.product --> data.product is\r\n    the parameter used in the productRouter in the BACKEND => res.send({message: 'Product Created', product: createdProduct });\r\n    => in the last parameter createdProduct to the FRONTEND. \r\n    Means createdProduct = data.product*/\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message\r\n    ? error.response.data.message\r\n    : error.message;\r\n    dispatch({type: PRODUCT_REVIEW_FAIL, payload:message});\r\n  }\r\n  \r\n};","export const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\n\r\nexport const USER_SIGIN_REQUEST = \"USER_SIGIN_REQUEST\";\r\nexport const USER_SIGIN_SUCCESS = \"USER_SIGIN_SUCCESS\";\r\nexport const USER_SIGIN_FAIL = \"USER_SIGIN_FAIL\";\r\nexport const USER_SIGIN_SIGNOUT= \"USER_SIGIN_SIGNOUT\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\nexport const USER_DELETE_RESET = \"USER_DELETE_RESET\";\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\nexport const USER_TOPSELLER_LIST_REQUEST = \"USER_TOPSELLER_LIST_REQUEST\";\r\nexport const USER_TOPSELLER_LIST_SUCCESS = \"USER_TOPSELLER_LIST_SUCCESS\";\r\nexport const USER_TOPSELLER_LIST_FAIL = \"USER_TOPSELLER_LIST_FAIL\";\r\n","import  Axios  from \"axios\";\r\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, \r\n    USER_LIST_FAIL, \r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS, \r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, \r\n    USER_SIGIN_REQUEST, USER_SIGIN_SIGNOUT, \r\n    USER_SIGIN_SUCCESS, \r\n    USER_TOPSELLER_LIST_FAIL, \r\n    USER_TOPSELLER_LIST_REQUEST, \r\n    USER_TOPSELLER_LIST_SUCCESS, \r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_SUCCESS} from \"../constants/userConstants\"\r\n\r\n\r\nexport const signin = (email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_SIGIN_REQUEST, payload: { email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/signin', { email, password });\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\nexport const signout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({type: USER_SIGIN_SIGNOUT});\r\n};\r\n\r\n\r\n/*New User Registration*/\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    dispatch ({ type: USER_REGISTER_REQUEST, payload: { name, email, password}});\r\n    try {\r\n        /*AJAX  post request for signin*/\r\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        /*The below code is to update redux that a new user has registered*/\r\n        dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n\r\n        });\r\n    }    \r\n};\r\n\r\n\r\n/*For Fetching user details information*/\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    /*Now declare constants in the userConstants*/\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\nare used here to get data and these constants are brought from \r\nProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo?.token}`},\r\n        });\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data});\r\n    \r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload:message});\r\n    }\r\n};\r\n\r\n\r\n/*From the ProfileScreen.js file, defining fx updateUserProfile()*/\r\nexport const updateUserProfile = (user) =>async(dispatch, getState) => {\r\n    /*Connecting constants*/\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\n    are used here to get data and these constants are brought from \r\n    ProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n    /*AJAX Request. As it is sending data to backend, PUT method is used*/\r\n    /* /api/users/profile` ====> profile comes from App.js> Route*/\r\n    const { data } = await Axios.put(`/api/users/profile`, user,  {\r\n        headers: { Authorization: `Bearer ${userInfo.token}`},\r\n    });\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n    dispatch({ type: USER_SIGIN_SUCCESS, payload: data});\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload:message});\r\n    }\r\n};\r\n\r\n/*Defining fx in the UserListScreen namely \"listUsers()\"*/\r\nexport const listUsers = () => async(dispatch, getState) => {\r\n    dispatch({ type: USER_LIST_REQUEST});\r\n    try{\r\n        const {userSignin: {userInfo}} = getState();\r\n        const { data} = await Axios.get('/api/users', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: USER_LIST_SUCCESS, payload: data});\r\n    } catch (error){\r\n        const message = \r\n        error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: USER_LIST_FAIL, payload:message});\r\n    }\r\n}\r\n\r\n/*Defining deleteUser() fx in the UserList Screen.js for deleting users*/\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({type: USER_DELETE_REQUEST, payload: userId});\r\n    const { userSignin:{userInfo}} = getState();\r\n    try{\r\n        const { data } = await Axios.delete(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({type: USER_DELETE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n        error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: USER_DELETE_FAIL, payload:message}); \r\n    }\r\n}\r\n\r\n\r\n/*For updaing user data*/\r\nexport const updateUser = (user) =>async(dispatch, getState) => {\r\n    /*Connecting constants*/\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    /*Get a token by getState method. The {userSignin and {userInfo} values\r\n    are used here to get data and these constants are brought from \r\n    ProfileScreen =>useSelector method}*/\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n    /*AJAX Request. As it is sending data to backend, PUT method is used*/\r\n    /* /api/users/profile` ====> profile comes from App.js> Route*/\r\n    const { data } = await Axios.put(`/api/users/${user._id}`, user,  {\r\n        headers: { Authorization: `Bearer ${userInfo.token}`},\r\n    });\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: USER_UPDATE_FAIL, payload:message});\r\n    }\r\n};\r\n\r\n/*Defining fx in the Homecreen namely \"listTopSellers()\"*/\r\nexport const listTopSellers = () => async(dispatch) => {\r\n    dispatch({ type: USER_TOPSELLER_LIST_REQUEST});\r\n    try{\r\n        \r\n        const { data} = await Axios.get('/api/users/top-sellers');\r\n        dispatch({type: USER_TOPSELLER_LIST_SUCCESS, payload: data});\r\n    } catch (error){\r\n        const message = \r\n        error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: USER_TOPSELLER_LIST_FAIL, payload:message});\r\n    }\r\n}","/*This file required because when ever we made a changes to the user details who are authenticated users\r\nthey are only allowed to see the profile page and not the one who \r\nare not the registered users. So, we need to exclude that types of users from\r\nviewing this page., and that's why this is Private Router*/\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nexport default function AdminRoute({ component: Component, ...rest}) {\r\n    const userSignin = useSelector(state => state.userSignin); /*Importing from React-redux*/\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <div>\r\n            <Route {\r\n                ...rest} render={(props) => userInfo && userInfo.isAdmin ? (\r\n                <Component {...props}></Component> /*This component is defined in App.js*/\r\n            ) : (\r\n                <Redirect to = \"/signin\"/>\r\n            )\r\n            }>\r\n\r\n            </Route>\r\n        </div> \r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <i className = \"fa fa-spinner fa-spin\">Loading...</i>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function MessageBox(props) { /*props is used here to access the child */\r\n    return (\r\n        <div className = {`alert alert-${props.variant || 'info'}`}>\r\n           {props.children}\r\n        </div>\r\n    )\r\n}","/*This file required because when ever we made a changes to the user details who are authenticated users\r\nthey are only allowed to see the profile page and not the one who \r\nare not the registered users. So, we need to exclude that types of users from\r\nviewing this page., and that's why this is Private Router*/\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest}) {\r\n    const userSignin = useSelector(state => state.userSignin); /*Importing from React-redux*/\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <div>\r\n            <Route {...rest} render={(props) => userInfo ? (\r\n                <Component {...props}></Component> /*This component is defined in App.js*/\r\n            ) : (\r\n                <Redirect to = \"/signin\"/>\r\n            )\r\n            }>\r\n\r\n            </Route>\r\n        </div> \r\n    );\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function SearchBox(props) {\r\n    /*Hooks for managing names that enters users in the search box*/\r\n    const [name, setName] = useState('');\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.history.push(`/search/name/${name}`); /*Redirecting user to the search page and not the search result here*/\r\n    };\r\n    return(\r\n        <form className=\"search\" onSubmit={submitHandler}>\r\n            <div className=\"row\">\r\n                <input type = \"text\"\r\n                name = \"q\"\r\n                id = \"q\"\r\n                onChange={(e) => setName(e.target.value)}></input>\r\n\r\n                <button className=\"primary\" type=\"submit\">\r\n                    <i className=\"fa fa-search\"></i>\r\n                </button>\r\n                \r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}","/*This file required because when ever we made a changes to the user details who are authenticated users\r\nthey are only allowed to see the profile page and not the one who \r\nare not the registered users. So, we need to exclude that types of users from\r\nviewing this page., and that's why this is Private Router*/\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function SellerRoute({ component: Component, ...rest}) {\r\n    const userSignin = useSelector(state => state.userSignin); /*Importing from React-redux*/\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <div>\r\n            <Route \r\n            {...rest} \r\n            render={(props) => userInfo && userInfo.isSeller ? (\r\n                <Component {...props}></Component> /*This component is defined in App.js*/\r\n            ) : (\r\n                <Redirect to = \"/signin\"/>\r\n            )\r\n            }>\r\n\r\n            </Route>\r\n        </div> \r\n    );\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\nexport const CART_EMPTY = 'CART_EMPTY';","import Axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \r\n'../constants/cartConstants';\r\n\r\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\r\n  const { data } = await Axios.get(`/api/products/${productId}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      product: data._id,\r\n      seller: data.seller, /*Filling Seller field of \r\n                            order from data.seller, means one can buy from only \r\n                            one seller at a time*/\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (productId) => (dispatch, getState) => {\r\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data});\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function CartScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split('=')[1])\r\n    : 1;\r\n\r\n  const cart = useSelector(state => state.cart); /*Cart Need to import from redux*/\r\n  const { cartItems } = cart;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkOutHandler = () =>{\r\n    props.history.push('/signin?redirect=shipping'); /**********RECHECK HERE FOR Checkout module */\r\n  };\r\n \r\n  return (\r\n    \r\n    <div className = \"row top\">\r\n        <div className = \"col-2\">\r\n          <h1>Shopping Cart</h1>\r\n          { cartItems.length === 0 ? \r\n          <MessageBox>\r\n              Your Cart is empty <br/>\r\n              <Link to = \"/\">Go back to Shopping Section</Link>\r\n          </MessageBox> \r\n          :\r\n          (\r\n            <ul>\r\n              { cartItems.map((item) => (\r\n                <li key = {item.product}>\r\n                  <div className = \"row\" /*For 5 coloums*/> \r\n                    <div /*1st Col for image*/> \r\n                      <img src = {item.image} alt = {item.name} className = \"small\">                      \r\n                      </img>\r\n                    </div>\r\n\r\n                    <div className = \"min-30\" /*2nd Col for Product Name*/>\r\n                      <Link to = {`/product/${item.product}`}>{item.name}</Link>\r\n                    </div>\r\n\r\n                    <div /*3rd Col for number of items to buy*/>\r\n                     \r\n                      <select value = {item.qty} \r\n                      onChange = {e => dispatch(addToCart(item.product, Number(e.target.value))\r\n                      )                           /*addToCart handler uses two parameters*/\r\n                      }>\r\n                      \r\n                      {[...Array(item.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}items\r\n                                  </option>\r\n                                )\r\n                              )}\r\n\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div /*4th Col showing price per unit*/>\r\n                        <h4> Rs. {item.price}/- Per Unit </h4>\r\n                    </div>\r\n\r\n                    <div /*5th Col for delete button. item.product means productId*/>\r\n                      <button className = \"button\" type = \"button\" onClick={() => removeFromCartHandler(item.product)}>Delete Items</button>                    \r\n                    </div>\r\n                  </div>\r\n\r\n                </li>\r\n              )\r\n              )}\r\n            </ul>\r\n          )}\r\n      </div>   \r\n\r\n                                  \r\n      <div className = \"col-1\">\r\n        <div className = \"card card-body\">\r\n             <ul>\r\n               <li>\r\n                 <h2>Sub-Total ({cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                 : \r\n                 Rs {cartItems.reduce((a, c) => a + c.price * c.qty, 0)} </h2>\r\n               </li>\r\n                                \r\n               <li>\r\n                 <button type=\"button\" className = \"primary block\" onClick = {checkOutHandler} disabled = {cartItems.length === 0}>Checkout</button>\r\n               </li>\r\n             </ul>                     \r\n        </div>\r\n      </div>\r\n\r\n  </div>                   \r\n    \r\n\r\n\r\n\r\n  );\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_MINE_LIST_REQUEST = 'ORDER_MINE_LIST_REQUEST';\r\nexport const ORDER_MINE_LIST_SUCCESS = 'ORDER_MINE_LIST_SUCCESS ';\r\nexport const ORDER_MINE_LIST_FAIL= 'ORDER_MINE_LIST_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST';\r\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS';\r\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL';\r\nexport const ORDER_DELETE_RESET = 'ORDER_DELETE_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n\r\nexport const ORDER_SUMMARY_REQUEST = \"ORDER_SUMMARY_REQUEST\"\r\nexport const ORDER_SUMMARY_SUCCESS = \"ORDER_SUMMARY_SUCCESS\"\r\nexport const ORDER_SUMMARY_FAIL = \"ORDER_SUMMARY_FAIL\"\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { summaryOrder } from \"../actions/orderActions\";\r\nimport Chart from 'react-google-charts';\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function DashboardScreen() {\r\n    const orderSummary = useSelector((state) => state.orderSummary);\r\n    const { loading, summary, error } = orderSummary;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(summaryOrder()); /*implmenting summaryOrder() in orderActions.js*/\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <div className=\"row\">\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n\r\n            { loading ? (\r\n                <LoadingBox/>\r\n               ) : error ? (\r\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                ) : (\r\n                    <>\r\n                        <ul className=\"row summary\">\r\n                            <li>\r\n                                <div className=\"summary-title color1\">\r\n                                    <span>\r\n                                        <i className=\"fa fa-users\"/>Users\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"summary-body\">\r\n                                    {summary.users[0].numUsers}\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"summary-title color2\">\r\n                                    <span>\r\n                                        <i className=\"fa fa-shopping-cart\"/>Orders\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"summary-body\">\r\n                                    {summary.orders[0]? summary.orders[0].numOrders: 0}\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"summary-title color3\">\r\n                                    <span>\r\n                                        <i className=\"fa fa-money\"/>Sales\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"summary-body\">\r\n                                   Rs. {summary.orders[0] \r\n                                   ? summary.orders[0].totalSales.toFixed(2)\r\n                                    : 0}\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                        <div /*for Charts*/>\r\n                            <h2>Sales</h2>\r\n                            {\r\n                                summary.dailyOrders.length === 0 ? (\r\n                                    <MessageBox>No of Sales</MessageBox>\r\n                                ) : (\r\n                                    <Chart width=\"100%\"\r\n                                            height=\"400px\"\r\n                                            chartType=\"AreaChart\"\r\n                                            loader={\r\n                                                <div>Loading Chart</div>\r\n                                            }\r\n                                            data={[\r\n                                                ['Date', 'Sales'],\r\n                                                ...summary.dailyOrders.map((x) => [x._id, x.sales]),\r\n                                            ]}>                                            \r\n                                    </Chart>\r\n                                )\r\n                               \r\n                            }\r\n                        </div>\r\n                        \r\n                        <div /*for Charts*/>\r\n                            <h2>Different Categories</h2>\r\n                            {\r\n                                summary.dailyOrders.length === 0 ? (\r\n                                    <MessageBox>No of Categories</MessageBox>\r\n                                ) : (\r\n                                    <Chart width=\"100%\"\r\n                                            height=\"400px\"\r\n                                            chartType=\"PieChart\"\r\n                                            loader={\r\n                                                <div>Loading Chart</div>\r\n                                            }\r\n                                            data={[\r\n                                                ['Category', 'Products'],\r\n                                                ...summary.productCategories.map((x) => [x._id, x.count]),\r\n                                            ]}>                                            \r\n                                    </Chart>\r\n                                )\r\n                               \r\n                            }\r\n                        </div>\r\n\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n}","import  Axios  from \"axios\";\r\nimport { CART_EMPTY } from \"../constants/cartConstants\";\r\nimport { ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_MINE_LIST_REQUEST,\r\n    ORDER_MINE_LIST_FAIL,\r\n    ORDER_MINE_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_DELETE_REQUEST,\r\n    ORDER_DELETE_FAIL,\r\n    ORDER_DELETE_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_SUMMARY_FAIL,\r\n    ORDER_SUMMARY_SUCCESS,\r\n    ORDER_SUMMARY_REQUEST} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n    try{\r\n        /*Importing userInfo from userSignIn*/\r\n        const {userSignin: { userInfo }} = getState();\r\n        /*AJAX Request*/\r\n        const { data } = await Axios.post('api/orders', order, {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order});\r\n        dispatch({type: CART_EMPTY});\r\n        localStorage.removeItem('cartItems');\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n/*Defining detailsOrder from the orderScreen --> useEffect*/\r\n\r\nexport const detailsOrder = (orderId) => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    \r\n    /*Geeting functional of getState and importing userInfo data*/\r\n    const {userSignin : {userInfo}} = getState();\r\n    \r\n    try{ /*AJAX request*/\r\n        const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`}\r\n        });                                    /*userInfo is obtained from getState*/\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: ORDER_DETAILS_FAIL, payload: message});\r\n    }\r\n};\r\n\r\n\r\n/*For defining successfullPaymentHandler in the ORderScreen*/\r\nexport const payOrder = (order, paymentResult) => async(dispatch, getState) => {\r\n    dispatch ({type: ORDER_PAY_REQUEST, payload: {order, paymentResult } });\r\n    const {userSignin : {userInfo}} = getState();\r\n\r\n        /*AJAX request*/\r\n        try{ /*Calling pay API and its type is PUT for payment order details in Paypal*/\r\n            const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {           \r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n         dispatch({type: ORDER_PAY_SUCCESS, payload: data});\r\n        } catch (error) {\r\n            const message = error.message && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({ type: ORDER_PAY_FAIL, payload: message});\r\n        }\r\n    } \r\n\r\nexport const listOrderMine = () => async(dispatch, getState) => {\r\n    dispatch({type: ORDER_MINE_LIST_REQUEST});\r\n    const { userSignin: {userInfo}} = getState();\r\n    try{\r\n        /*AJAX REQUEST*/\r\n        const { data} = await Axios.get('/api/orders/mine', {\r\n            /*Authorizzation for getting TOKEN*/\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        });\r\n        dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = \r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({type: ORDER_MINE_LIST_FAIL, payload: message});\r\n\r\n    }\r\n};\r\n\r\n/*For viewing order history by admins. \"listOrders\" is a fx in OrderListScreen.js*/\r\nexport const listOrders = ( { seller = ' '}) => async(dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST});\r\n    const {userSignin: {userInfo}} = getState();\r\n    try{\r\n        const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\r\n            headers: {Authorization: `Bearer ${userInfo.token}`}\r\n        });\r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n        dispatch({ type: ORDER_LIST_FAIL, payload: message});\r\n    }\r\n};\r\n\r\n/*For deleting orders by ADMIN. \"deleteOrder\" fx from OrderListScreen.js is defining here*/\r\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId});\r\n    const {userSignin:{userInfo}} = getState();\r\n    try{\r\n        const { data } = await Axios.delete(`/api/orders/${orderId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n        ? error.response.data.message \r\n        : error.message;\r\n        dispatch({ type: ORDER_DELETE_FAIL, payload: message});\r\n    }\r\n};\r\n\r\n/*For defining deliverOrderHandler in orderScrren.js*/\r\nexport const deliverOrder = (orderId) => async(dispatch, getState) => {\r\n    dispatch ({type: ORDER_DELIVER_REQUEST, payload: orderId });\r\n    const {userSignin : {userInfo}} = getState();\r\n\r\n        /*AJAX request*/\r\n        try{ /*Calling pay API and its type is PUT for payment order details in Paypal*/\r\n            const { data } = Axios.put(`/api/orders/${orderId}/deliver`, {}, {           \r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n         dispatch({type: ORDER_DELIVER_SUCCESS, payload: data});\r\n        } catch (error) {\r\n            const message = error.message && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({ type: ORDER_DELIVER_FAIL, payload: message});\r\n        }\r\n    } \r\n\r\n    /*Order Summary from the DashboardScreen.js*/\r\nexport const summaryOrder = () => async(dispatch, getState) => {\r\n    dispatch ({type: ORDER_SUMMARY_REQUEST });\r\n    const { userSignin : {userInfo} } = getState();\r\n\r\n    try{\r\n        const {data} = await Axios.get('/api/orders/summary', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}`},\r\n        });\r\n        dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        const message = error.message && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n            dispatch({ type: ORDER_SUMMARY_FAIL, payload: message});\r\n    }\r\n\r\n} ","import React from 'react'\r\n\r\nexport default function Rating(props) {\r\n    const {rating, numReviews, caption} = props;\r\n    return (\r\n\r\n        <div className = \"rating\"> \r\n                            <span>\r\n                                <i className = {\r\n                                    rating >=1\r\n                                    ?\"fa fa-star\" \r\n                                    : rating >=0.5\r\n                                    ?'fa fa-star-half-o' \r\n                                    : 'fa fa-star-o'}></i>\r\n                            </span>\r\n                            <span>\r\n                            <i className = {\r\n                                    rating >=2\r\n                                    ?\"fa fa-star\" \r\n                                    : rating >=1.5\r\n                                    ?'fa fa-star-half-o' \r\n                                    : 'fa fa-star-o'}></i>\r\n                            </span>\r\n                            <span>\r\n                            <i className = {\r\n                                    rating >=3\r\n                                    ?\"fa fa-star\" \r\n                                    : rating >=2.5\r\n                                    ?'fa fa-star-half-o' \r\n                                    : 'fa fa-star-o'}></i>\r\n                            </span>\r\n                            <span>\r\n                            <i className = {\r\n                                    rating >=4\r\n                                    ?\"fa fa-star\" \r\n                                    : rating >=3.5\r\n                                    ?'fa fa-star-half-o' \r\n                                    : 'fa fa-star-o'}></i>\r\n                            </span>\r\n                            <span>\r\n                            <i className = {\r\n                                    rating >=5\r\n                                    ?\"fa fa-star\" \r\n                                    : rating >=4.5\r\n                                    ?'fa fa-star-half-o' \r\n                                    : 'fa fa-star-o'}></i>\r\n                            </span>\r\n\r\n                            <span>\r\n                                {caption ? <span>{caption}</span>: \r\n                                <span>{numReviews + 'reviews'}</span>}\r\n                                \r\n                            </span>\r\n                        </div>     \r\n    )\r\n}","import React from 'react'\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Product(props) {\r\n    const { product } = props;\r\n    return (\r\n            <div key = {product._id} className = \"card\"> \r\n                   <Link to={`/product/${product._id}`}>\r\n                        <img className = \"medium\" \r\n                        src = {product.image} \r\n                        alt = {product.name}/> \r\n                    </Link>\r\n                    <div className = \"card-body\">\r\n                        <Link to = {`/product/${product._id}`}>\r\n                            <h2>{product.name}</h2>\r\n                        </Link>\r\n                        <Rating rating = {product.rating}\r\n                                numReviews = {product.numReviews}>\r\n                        </Rating>\r\n                        <div className='row'>\r\n                            <div className = \"price\">Rs.{product.price}/-</div>\r\n                            <div>\r\n                                <Link to = {`/seller/${product.seller._id}`}>\r\n                                    {product.seller.seller.name\r\n                                        /*2 times seller.\r\n                                        One is for SELLER in productModel.js\r\n                                        second one is SELLER in userModel.js\r\n                                        From the userModel we get the name of the user\r\n                                        \r\n                                        If we donot edit the names of the users after\r\n                                        first time seed, then it will show error that \r\n                                        name is undefined. So we in that case only\r\n                                        product.seller.name will work and not two seller\r\n                                        would. So we need to edit the name of the sellers\r\n                                        as many as sellers in our database*/\r\n                                    } \r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n       \r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Product from '../components/Product';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { listTopSellers } from '../actions/userActions';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nexport default function HomeScreen() {\r\n  const { pageNumber = 1} = useParams();\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n/*Importing from store.js*/\r\n  const userTopSellersList = useSelector((state) => state.userTopSellersList);\r\n  const { loading: loadingSellers, error: errorSellers, users: sellers } = userTopSellersList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts({ pageNumber })); /*Means return all products and donot filter any products*/\r\n    /*Now we need to show top sellers*/\r\n    dispatch(listTopSellers()); /*Defining it in userActions.js*/\r\n  }, [dispatch, pageNumber]);\r\n  return (\r\n    <div>\r\n      <div>\r\n      <h3>Best Sellers</h3>\r\n      </div>\r\n      \r\n        {loadingSellers ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : errorSellers ? (\r\n        <MessageBox variant=\"danger\">{errorSellers}</MessageBox>\r\n      ) : ( \r\n        <>\r\n          {sellers.length === 0 && <MessageBox variant=\"danger\">No Seller Found</MessageBox>}\r\n          <Carousel showArrows autoPlay showThumbs={false}>\r\n            {sellers.map((seller) => (\r\n              <div key={seller._id}>\r\n                <Link to = {`/seller/${seller._id}`}>\r\n                  <img src = {seller.seller.logo} alt = {seller.seller.name}></img>\r\n                  <p className='legend'>{seller.seller.name}</p>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n        </>\r\n           \r\n  \r\n      )}\r\n\r\n      <h2 className='headerH2'>Featured Products</h2>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          {products.length === 0 && <MessageBox variant=\"danger\">No Products Found</MessageBox>}\r\n\r\n          <div className=\"row1 center\">\r\n          {products.map((product) => (\r\n            <Product key={product._id} product={product}></Product>\r\n          ))}\r\n          </div>\r\n\r\n          <div className=\"row1 pagination\" /*For showing page numbers in the homepage*/>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n\r\n    \r\n                        <Link key={x + 1 /*For displaying page number*/} \r\n                        to = {`/pageNumber/${x + 1}`}>\r\n                        {x + 1}</Link>\r\n                    ))\r\n                } \r\n                </div>\r\n        </>\r\n        \r\n        \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { listOrderMine } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n\r\n\r\nexport default function OrderHistoryScreen(props) {\r\n    /*Getting error, loading and orders from REDUX store i.e., from orderMineListReducer in orderReduer*/\r\n    const orderMineList = useSelector(state => state.orderMineList);\r\n    const { loading, error, orders} = orderMineList;\r\n   \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(!orders) {\r\n\r\n    \r\n        /*Calling fx listOrderMine from Actions ==>> orderActions*/\r\n        dispatch(listOrderMine());\r\n    }}, [orders, dispatch]);\r\n    /*orderMineList is in store.js*/\r\n    return (\r\n        <div className = \"container\">\r\n            <h1 /*We need to check 'loading' first*/>Order History</h1>\r\n            {loading ? ( <LoadingBox></LoadingBox> \r\n             ): ( error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n             : (\r\n                 <table className=\"table\">\r\n                     <thead>\r\n                     <tr>\r\n                        <th>ORDER ID NO</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID/NOT PAID</th>\r\n                        <th>DELIVERED/HOLDING</th>\r\n                        <th>ACTIONS</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody /*Now looking over orders and using map fx to convert each orderobject into JSX*/>\r\n                         {orders.map((orders) => (\r\n                             <tr key={orders._id}>\r\n                             <td>{orders._id}</td>\r\n                             <td>{orders.createdAt.substring(0, 10)}</td>\r\n                             <td>Rs.{orders.totalPrice.toFixed(2)}/-</td>\r\n                             <td /*isPaid is conditional. If it is true (\r\n                                 ?) then show order.paidAt for showing \r\n                                 only date part and not time. Substring is used to capture only \r\n                                 date and not the time of the payment. If this condition is\r\n                                 false, then it will show not payment not paid \r\n                                 */>\r\n                                     {orders.isPaid ? orders.paidAt.substring(0, 10) : 'Not Paid'}         \r\n                            </td>\r\n                             \r\n                             <td>{orders.isDelivered ? orders.deliveredAt.substring(0, 10) : 'Not Delivered'}</td>\r\n                             <td>\r\n                                 <button type=\"button\" className=\"btn btn-primary\"\r\n                                 onClick={() => {\r\n                                     props.history.push(`/order/${orders._id}`);\r\n                                 }}>Order Details</button>\r\n                             </td>\r\n                             \r\n                         </tr>\r\n                         )\r\n                            \r\n                         )}\r\n                     </tbody>\r\n                 </table>\r\n\r\n             )\r\n             )\r\n            }\r\n\r\n        </div>\r\n    )\r\n        \r\n    \r\n}","/*For viewing and editing/deleting the orders under ADMIN*/\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteOrder, listOrders } from \"../actions/orderActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { ORDER_DELETE_RESET } from \"../constants/orderConstants\";\r\n\r\nexport default function OrderListScreen(props) {\r\n\r\n    /*For filtered order list of Specific SELLER*/\r\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n\r\n    /*getting OrderList object from OrderReducer*/\r\n    const orderList = useSelector(state => state.orderList);\r\n    const {loading, error, orders} = orderList;\r\n\r\n\r\n    /*getting orderDelete from redux store i.e. from store.js*/\r\n    const orderDelete = useSelector(state => state.orderDelete);\r\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = orderDelete;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect (() => {\r\n        if(successDelete) {\r\n            dispatch({type: ORDER_DELETE_RESET});\r\n        }\r\n        \r\n        /*As we donot want to delete any more data after the first one choiced by\r\n        us was deleted, we have to reset it and and show the order list*/\r\n        \r\n        dispatch(listOrders({ seller: sellerMode ? userInfo._id : ''})); /*Need to define the fx in orderActions.js in actions folder.*/\r\n    }, [dispatch, successDelete, sellerMode, userInfo._id]);\r\n\r\n    const deleteHandler = (order) => {\r\n        if(window.confirm('Are you sure to delete?')) {\r\n            dispatch(deleteOrder(order._id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <h1 /*We need to check 'loading' first*/>Orders by Customers</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {loading ? ( <LoadingBox></LoadingBox> \r\n             ): ( error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n             : (\r\n                 <table className=\"table\">\r\n                     <thead>\r\n                     <tr>\r\n                        <th>ORDER ID NO</th>\r\n                        <th>USER_NAME</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID/NOT PAID</th>\r\n                        <th>DELIVERED/HOLDING</th>\r\n                        <th>ACTIONS</th>\r\n                     </tr>\r\n                     </thead>\r\n                     <tbody /*Now looking over orders and using map fx to convert each orderobject into JSX*/>\r\n                         {orders.map((order) => (\r\n                             <tr key={order._id}>\r\n                             <td>{order._id}</td>\r\n                             <td>{order.user.name}</td>\r\n                             <td>{order.createdAt.substring(0, 10)}</td>\r\n                             <td>Rs.{order.totalPrice.toFixed(2)}/-</td>\r\n                             <td /*isPaid is conditional. If it is true (\r\n                                 ?) then show order.paidAt for showing \r\n                                 only date part and not time. Substring is used to capture only \r\n                                 date and not the time of the payment. If this condition is\r\n                                 false, then it will show not payment not paid \r\n                                 */>\r\n                                     {order.isPaid ? order.paidAt.substring(0, 10) : 'Not Paid'}         \r\n                            </td>\r\n                             \r\n                             <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'Not Delivered'}</td>\r\n                             <td>\r\n                                 <button type=\"button\" className=\"btn btn-primary\"\r\n                                 onClick={() => {\r\n                                     props.history.push(`/order/${order._id}`);\r\n                                 }}>Order Details</button>\r\n\r\n                                 <button \r\n                                 className=\"small\"\r\n                                 type = \"button\"\r\n                                 onClick={() => deleteHandler(order)}>\r\n                                     Delete\r\n                                 </button>\r\n                             </td>\r\n                             \r\n                         </tr>\r\n                         )\r\n                            \r\n                         )}\r\n                     </tbody>\r\n                 </table>\r\n\r\n             )\r\n             )\r\n            }\r\n\r\n        </div>\r\n    )\r\n        \r\n    \r\n}","\r\nimport  Axios  from \"axios\";\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deliverOrder, detailsOrder, payOrder } from \"../actions/orderActions\";\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\n\r\nexport default function OrderScreen(props) { \r\n    const orderId = props.match.params.id; /*MAtching orderId and storing in orderId const*/\r\n    /*Getting status of PAYPAL SDK by REACT hooks*/\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    /*Getting OrderPay from REDUX*/\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const {\r\n        loading: loadingPay, \r\n        error: errorPay, \r\n        success: successPay} = orderPay;\r\n\r\n\r\n    /*Getting OrderDeliver from REDUX, ie., from store.js*/\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const {\r\n        loading: loadingDeliver, \r\n        error: errorDeliver, \r\n        success: successDeliver} = orderDeliver;\r\n    \r\n    \r\n    /* Now fetching orderDetails from REDUX store*/\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    /*orderDetails contains order loading and error from REDUX store*/\r\n    const {order,loading, error} = orderDetails; \r\n\r\n\r\n    /*Importing userInfo from redux*/\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    /*Using const orderId = props.match.params.id;*/\r\n    useEffect(() => {\r\n       const addPayPalScript = async () => {\r\n           /*It's backend request to get the client ID*/\r\n           const { data } = await Axios.get('/api/config/paypal');\r\n           const script = document.createElement('script');\r\n           script.type=\"text/javascript\";\r\n           script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n           script.async=true;\r\n           script.onload = () => {\r\n               setSdkReady(true);\r\n           };\r\n           document.body.appendChild(script); \r\n       };\r\n       if(!order || successPay || successDeliver || (order && order._id !== orderId))  /*If Order Id is not loaded, \r\n       then load it, OR if successPay is true then refresh the page OR \r\n       order_id and OrderId does not match means, if the ID is not matched \r\n       with the URL id and customer order Id, then refresh the page and \r\n       to generate a new order id*/\r\n       {\r\n        dispatch({type: ORDER_PAY_RESET});\r\n        dispatch({type:ORDER_DELIVER_RESET}); /*After updating delivery, we need to show the updated orders again*/\r\n        dispatch(detailsOrder(orderId)); /*OrderId comes from URL, so we need to define and import it*/\r\n       } else {\r\n           if(!order.isPaid) {\r\n               if(!window.paypal) {\r\n                   addPayPalScript(); /*If paypal window is not loaded, it loads it*/\r\n               } else {\r\n                   setSdkReady(true);\r\n               }\r\n           }\r\n       }\r\n       \r\n    }, [dispatch, order, orderId, sdkReady, successPay, successDeliver]);\r\n\r\n/*---Defining SuccessPaymentHandler----*/\r\nconst successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(order, paymentResult)) /*paymentResult is the result in the paypal*/\r\n\r\n}\r\n\r\n/*For DeliverHandler fx*/\r\nconst deliverHandler = () => {\r\n    dispatch(deliverOrder(order._id));\r\n}\r\n\r\n    \r\n\r\n    var date = useState(currentDateTime => Date());\r\n    \r\n    return loading? (\r\n    <LoadingBox></LoadingBox>\r\n    ) : error? (\r\n    <MessageBox variant = \"danger\">{error}</MessageBox>\r\n    ) : (\r\n        <div>\r\n           <h1>Order No: {order._id}</h1>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For Shipping Address*/>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong> \r\n                                    {order.shippingAddress.fullName} <br />\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address}, \r\n                                    {order.shippingAddress.city},\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered \r\n                                ? ( <MessageBox variant=\"success\">Delivered at {order.deliveredAt}\r\n                                </MessageBox> \r\n                                 ) : (\r\n                                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        \r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Payment</h2>\r\n                                <p>\r\n                                    <strong>Method:</strong> \r\n                                    {order.paymentMethod}            \r\n                                </p>\r\n                                \r\n                                {order.isPaid \r\n                                ? ( <MessageBox variant=\"success\">Paid at {order.paidAt}\r\n                                </MessageBox> \r\n                                 ) : (\r\n                                <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Ordered Items</h2>\r\n                                <ul>\r\n                                    { order.orderItems.map((item) => (\r\n                                    <li key = {item.product}>\r\n                                    <div className = \"row\" /*For fetching product details*/> \r\n                                    <div /*!st Col for image*/> \r\n                                        <img src = {item.image} \r\n                                        alt = {item.name} \r\n                                        className = \"small\">                      \r\n                                        </img>\r\n                                    </div>\r\n\r\n                                    <div className = \"min-30\" /*2nd Col for Product Name*/>\r\n                                         <Link to = {`/product/${item.product}`}>\r\n                                             {item.name}</Link>\r\n                                    </div>\r\n\r\n                                    \r\n\r\n                                    <div /*4th Col showing price per unit*/>\r\n                                        {item.qty}  Pieces x {item.price} Rs/Unit =  Rs. {item.qty * item.price}\r\n                                    </div>\r\n\r\n                        \r\n                                    </div>\r\n\r\n                                    </li>\r\n                                    )\r\n                                    )}\r\n                                </ul>\r\n                                \r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className = \"col-1\">\r\n                    <div className = \"card card-body\">\r\n                        <ul>\r\n                            <li>\r\n                                <h2>Order Summary</h2>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Total Price of items</div>\r\n                                    <div>Rs. {order.itemsPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                \r\n                                <div className=\"row\">\r\n                                    <div>Shipping Cost </div>\r\n                                    <div>Rs. {order.shippingPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Tax </div>\r\n                                    <div>Rs. {order.taxPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div><strong>Total Amount</strong></div>\r\n                                    <div><strong>Rs. {order.totalPrice.toFixed(2)}</strong></div>\r\n                                </div>\r\n                            </li>\r\n                            {\r\n                                !order.isPaid && (\r\n                                    <li>\r\n                                        {!sdkReady ? (<LoadingBox></LoadingBox>\r\n                                        ) : (\r\n                                            <>\r\n                                            {\r\n                                                errorPay && <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                                            }\r\n\r\n                                            {\r\n                                                loadingPay && <LoadingBox></LoadingBox>\r\n                                            }\r\n                                           <PayPalButton \r\n                                             amount={order.totalPrice}\r\n                                             onSuccess={successPaymentHandler}>\r\n                                            </PayPalButton>\r\n                                            </>\r\n                                        )}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <li>\r\n                                    {loadingDeliver && <LoadingBox></LoadingBox>}\r\n                                    {errorDeliver && <MessageBox variant=\"damger\">{errorDeliver}</MessageBox>}\r\n                                    <button type=\"button\" \r\n                                    className=\"primary block\"\r\n                                    onClick={deliverHandler} >Deliver Order</button>\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <p>Date of Order: {date} </p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport React from 'react';\r\n\r\nexport default function CheckoutSteps(props) {\r\n    return(\r\n        <div className =\"row checkout-steps\" /*Main Container*/> \r\n            <div className = {props.step1 ? 'active': ' '} /*Checking*/>Sign-in</div>\r\n            <div className = {props.step2 ? 'active': ' '} /*Checking*/>Shipping</div>\r\n            <div className = {props.step3 ? 'active': ' '} /*Checking*/>Payment</div>\r\n            <div className = {props.step4 ? 'active': ' '} /*Checking*/>Place Order</div>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nexport default function PaymentMethodScreen(props) {\r\n    /*If the user didn't put the shipping address and went to the payment methods\r\n    we need to redirect him to the shipping screen to put his address*/\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n    if (!shippingAddress.address) {\r\n        props.history.push('/shipping');\r\n    }\r\n    /*REACT HOOK*/\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        props.history.push('/placeorder');\r\n    };\r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n            <form className=\"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>\r\n                        Payment Methods\r\n                    </h1>\r\n\r\n                    <div className=\"form-razor\">\r\n                        <input \r\n                        type=\"radio\" \r\n                        id=\"razorpay\" \r\n                        value=\"Razorpay\" name=\"paymentMethod\" \r\n                        required checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n\r\n                        </input>\r\n                        <label htmlFor=\"razorpay\">Razorpay</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-paypal\">\r\n                        <input \r\n                        type=\"radio\" \r\n                        id=\"paypal\" \r\n                        value=\"PayPal\" name=\"paymentMethod\" \r\n                        required checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n\r\n                        </input>\r\n                        <label htmlFor=\"paypal\">Paypal</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <button className=\"primary\" type=\"submit\">Proceed</button>\r\n                </div>\r\n\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n\r\nexport default function PlaceOrderScreen(props) { \r\n    /*Import cart from REDUX STORE*/\r\n    const cart = useSelector((state) => state.cart);\r\n    /*Checking whether user had selected the payment method or not*/\r\n    if(!cart.paymentMethod) {\r\n        props.history.push('/payment');\r\n    };\r\n\r\n    /*Importing from orderCreate REDUX*/\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const { loading, success, error, order} = orderCreate;\r\n\r\n\r\n    const toPrice = (num) => Number(num.toFixed(2)); /* e.g., it takes 5.123 => converts to string \"5.123\" => and then to the number of two decimal places */\r\n    /*For Cart items and Price*/\r\n    cart.itemsPrice = toPrice(cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0))\r\n    /*Shipping Price*/\r\n    cart.shippingPrice = cart.itemsPrice > 300 ? toPrice(0) : toPrice(40);\r\n    /*For Tax Price*/\r\n    cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\r\n    /*Total amount calculation*/\r\n    cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\r\n\r\n    const dispatch = useDispatch();\r\n    const placeOrderHandler = () => {\r\n        /*here we need order-items and not cart-items because we need the items what our customers have choiced*/\r\n        dispatch(createOrder({...cart, orderItems: cart.cartItems}));\r\n        /*Here in the above statement we used all objects of 'cart' objects and replaced card items with order items*/\r\n    };\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    /*Using the variables loading, success, error and order*/\r\n    useEffect(() => {\r\n        if(success) {\r\n            props.history.push(`/order/${order._id}`);\r\n            dispatch({type: ORDER_CREATE_RESET});\r\n        }\r\n    }, [dispatch, order, props.history, success]);\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    var date = useState(currentDateTime => Date());\r\n    \r\n    return(\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For Shipping Address*/>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong> \r\n                                    {cart.shippingAddress.fullName} <br />\r\n                                    <strong>Address:</strong>\r\n                                    {cart.shippingAddress.address}, \r\n                                    {cart.shippingAddress.city},\r\n                                    {cart.shippingAddress.postalCode},\r\n                                    {cart.shippingAddress.country}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n                        \r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Payment</h2>\r\n                                <p>\r\n                                    <strong>Method:</strong> \r\n                                    {cart.paymentMethod} \r\n                                    \r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\" /*For payment*/>\r\n                                <h2>Ordered Items</h2>\r\n                                <ul>\r\n                                    { cart.cartItems.map((item) => (\r\n                                    <li key = {item.product}>\r\n                                    <div className = \"row\" /*For fetching product details*/> \r\n                                    <div /*!st Col for image*/> \r\n                                        <img src = {item.image} \r\n                                        alt = {item.name} \r\n                                        className = \"small\">                      \r\n                                        </img>\r\n                                    </div>\r\n\r\n                                    <div className = \"min-30\" /*2nd Col for Product Name*/>\r\n                                         <Link to = {`/product/${item.product}`}>\r\n                                             {item.name}</Link>\r\n                                    </div>\r\n\r\n                                    \r\n\r\n                                    <div /*4th Col showing price per unit*/>\r\n                                        {item.qty}  Pieces x {item.price} Rs/Unit =  Rs. {item.qty * item.price}\r\n                                    </div>\r\n\r\n                        \r\n                                    </div>\r\n\r\n                                    </li>\r\n                                    )\r\n                                    )}\r\n                                </ul>\r\n                                \r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className = \"col-1\">\r\n                    <div className = \"card card-body\">\r\n                        <ul>\r\n                            <li>\r\n                                <h2>Order Summary</h2>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Total Price of items</div>\r\n                                    <div>Rs. {cart.itemsPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                \r\n                                <div className=\"row\">\r\n                                    <div>Shipping Cost </div>\r\n                                    <div>Rs. {cart.shippingPrice.toFixed(2)}</div>\r\n                                </div>\r\n                                <p>(Free shipping above order Rs 300)</p>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Tax </div>\r\n                                    <div>Rs. {cart.taxPrice.toFixed(2)}</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div><strong>Total Amount</strong></div>\r\n                                    <div><strong>Rs. {cart.totalPrice.toFixed(2)}</strong></div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"button\" onClick = {placeOrderHandler}\r\n                                className = \"primary block\"\r\n                                disabled = {cart.cartItems.length === 0} >Place order\r\n                                \r\n                                </button>\r\n                            </li>\r\n                            {\r\n                                loading && <LoadingBox></LoadingBox>\r\n                            }\r\n                            {\r\n                                error && <MessageBox variant=\"danger\">{error};</MessageBox>\r\n                            }\r\n                            <li>\r\n                                <p>Date of Order: {date} </p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport  Axios  from \"../../node_modules/axios/index\";\r\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nexport default function ProductEditScreen(props) {\r\n/*1st of all we need productId from the URL*/\r\nconst productId = props.match.params.id;\r\n/*Defining Hooks for product fields*/\r\nconst [name, setName] = useState(' ');\r\nconst [price, setPrice] = useState(' ');\r\nconst [image, setImage] = useState(' ');\r\nconst [category, setCategory] = useState(' ');\r\nconst [countInStock, setCountInStock] = useState(' ');\r\nconst [brand, setBrand] = useState(' ');\r\nconst [description, setDescription] = useState(' ');\r\n/*We need \"productDetails()\" fx from store.js and here to use its effect from the REDUCER*/\r\nconst productDetails = useSelector(state => state.productDetails);\r\n/*Using following fx from the REDUCER for \"productDetails()\" >> store.js*/\r\nconst { product, loading, error } = productDetails;\r\n\r\n\r\n/*Importing from REDUX i.e., from APP.js, after successful updation of data into the database*/\r\nconst productUpdate = useSelector(state => state.productUpdate);\r\nconst { loading: loadingUpdate, error: errorUpdate, success: successUpdated} = productUpdate;\r\n\r\n\r\n/*Now as we need to dispatch the details product, we have to use\r\nuseEffect from the react redux*/\r\nconst dispatch = useDispatch();\r\nuseEffect(() => {\r\n    /*After updation, user needs to be redirected to the product list*/\r\n    if(!product || product._id !== productId || successUpdated ) /*This means that we didn't load product from the back end. It ibstructs to load product*/\r\n                /* (product._id !== productId) >> means product exists but if the new id is not same as database product's Id.\r\n                This is done because before that when ever we click on the create new product\r\n                button, it automatically redirects us to the product edit screen instead of \r\n                product create screen.*/\r\n    {\r\n        dispatch({ type: PRODUCT_UPDATE_RESET});\r\n        dispatch(detailsProduct(productId)); /*detailsProduct() fx residing in productAction.js file*/\r\n        \r\n    } else { /*If exists, then fill the fields accroding to the data in the backend to the UI*/\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setBrand(product.brand);\r\n        setDescription(product.description);\r\n    }\r\n    \r\n    \r\n}, [dispatch, productId, product, successUpdated]);\r\n\r\n/*Defining fx {submitHandler}*/\r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n        updateProduct({  /*This is a fx, we need to implement it in Actions folder >> ProductActions.js*/\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            category,\r\n            brand,\r\n            countInStock,\r\n            description,\r\n        })\r\n    );\r\n};\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState();\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const uploadFileHandler = async(e) => { /*sedning ajax req to backend for uploading*/\r\n       const file = e.target.files[0]; /*[0] means upload only first selected file*/\r\n       const bodyFormData = new FormData(); /*FormData class is req to upload files by ajax req*/\r\n       bodyFormData.append('image', file);\r\n       setLoadingUpload(true);\r\n       try{\r\n        const { data} = await Axios.post('/api/uploads', bodyFormData, {\r\n            headers: {'Content-Type':'multipart/form-data', \r\n            Authorization: `Bearer ${userInfo.token}`},\r\n         });\r\n         setImage(data);\r\n         setLoadingUpload(false);\r\n       } catch (error) {\r\n           setErrorUpload(error.message);\r\n           setLoadingUpload(false);\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className = \"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>PRODUCT EDIT SECTION</h1>\r\n                </div>\r\n                { successUpdated && props.history.push('/productlist')}\r\n                {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                 {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n\r\n                {loading ? <LoadingBox></LoadingBox> \r\n                : error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n                : \r\n                <>\r\n                <div /*Editing for name field*/>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product name\" \r\n                    value = {name} \r\n                    onChange = {(e) => setName(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for name price*/>\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input id=\"price\" \r\n                    type = \"price\" \r\n                    placeholder = \"Enter price\" \r\n                    value = {price} \r\n                    onChange = {(e) => setPrice(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for Image*/>\r\n                    <label htmlFor=\"image\">Name</label>\r\n                    <input id=\"image\" \r\n                    type = \"text\" \r\n                    placeholder = \"New Image\" \r\n                    value = {image} \r\n                    onChange = {(e) => setImage(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"imageFile\">Image File</label>\r\n                    <input type=\"file\" id=\"imageFile\" label=\"Choose Image\"\r\n                    onChange={uploadFileHandler}></input>\r\n                    {loadingUpload && <LoadingBox></LoadingBox>}\r\n                    {errorUpload && <MessageBox variant=\"danger\">{errorUpload}</MessageBox>}\r\n                </div>\r\n\r\n                <div /*Editing for category field*/>\r\n                    <label htmlFor=\"category\">Category</label>\r\n                    <input id=\"category\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product category\" \r\n                    value = {category} \r\n                    onChange = {(e) => setCategory(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for brand field*/>\r\n                    <label htmlFor=\"brand\">Brand</label>\r\n                    <input id=\"brand\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product brand\" \r\n                    value = {brand} \r\n                    onChange = {(e) => setBrand(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for countInStock field*/>\r\n                    <label htmlFor=\"countInStock\">No of stocks</label>\r\n                    <input id=\"countInStock\" \r\n                    type = \"text\" \r\n                    placeholder = \"Enter product stock number\" \r\n                    value = {countInStock} \r\n                    onChange = {(e) => setCountInStock(e.target.value)}>\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Editing for description field*/>\r\n                    <label htmlFor=\"description\">Name</label>\r\n                    <textarea id=\"description\" \r\n                    type = \"text\" \r\n                    rows = \"3\"\r\n                    placeholder = \"Enter product description\" \r\n                    value = {description} \r\n                    onChange = {(e) => setDescription(e.target.value)}>\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type = \"submit\">Update Details</button>\r\n                </div>\r\n\r\n                </>\r\n                }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { createProduct, deleteProduct, listProducts } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { PRODUCT_CREATE_RESET, PRODUCT_DELETE_RESET } from \"../constants/productConstants\";\r\n\r\nexport default function ProductListScreen(props) {\r\n\r\n    const { pageNumber = 1} = useParams();\r\n    /*For specifying for SELLER*/\r\n    const sellerMode = props.match.path.indexOf('/seller') >=0; \r\n    const productList = useSelector((state) => state.productList); /*Importing from rext Redux*/\r\n    /*We also created productList() object in the HomeScreen.js*/\r\n    /*Using it*/\r\n    const { loading, error, products, page, pages} = productList;\r\n\r\n\r\n\r\n    /*Importing productCreate from Store.js and thus importing reducers*/\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { loading: loadingCreate, \r\n        error: errorCreate, \r\n        success: successCreate, \r\n        product: createdProduct} = productCreate;\r\n\r\n    \r\n        /*Importing from store.js for deletion*/\r\n    const productDelete = useSelector(state => state.productDelete); \r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n       if(successCreate) {\r\n           dispatch({type: PRODUCT_CREATE_RESET}); /*Because a blank page needs \r\n           to be shown after successful creation of product*/\r\n           props.history.push(`/product/${createdProduct._id}/edit`);\r\n       }\r\n       if(successDelete) {\r\n           dispatch({ type: PRODUCT_DELETE_RESET});\r\n       }\r\n        dispatch(listProducts({seller: sellerMode ? userInfo._id : '', pageNumber /*If SellerMode is true, then show filtered products of that seller*/\r\n        })\r\n        ); /*Imported from Actions/productActions*/\r\n    }, [ createdProduct, \r\n        dispatch, \r\n        props.history, \r\n        successCreate, \r\n        successDelete, \r\n        sellerMode, \r\n        userInfo._id,\r\n        pageNumber\r\n        ]);\r\n \r\n\r\n\r\n    \r\n    \r\n    const deleteHandler = (product) => {\r\n        if(window.confirm('Are you sure to delete the product?')) {\r\n            dispatch(deleteProduct(product._id)); /*deleteProduct is a fx and need to be implemented in the productAction.js*/\r\n        }\r\n    };\r\n\r\n    const createHandler = () => {\r\n        \r\n            dispatch(createProduct()); /*This is a new action, it is to be \r\n        implemented in the actions folder named as createProduct()*/  \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <h1> List of All products</h1>\r\n            <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n                Create New Product\r\n            </button>\r\n            </div>\r\n            {loadingDelete && <LoadingBox></LoadingBox> }\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n\r\n            {loadingCreate && <LoadingBox></LoadingBox> }\r\n            {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n            {\r\n                loading ? (<LoadingBox></LoadingBox>)\r\n                : error ? (<MessageBox variant = \"danger\">{error}</MessageBox>\r\n                ) : (\r\n                    \r\n               <>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th>ACTIONS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map((product) => (\r\n\r\n                       \r\n                            <tr key = {product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <button \r\n                                    type=\"button\"\r\n                                    className = \"small\"\r\n                                    onClick = {() =>\r\n                                    props.history.push(`/product/${product._id}/edit`)}>\r\n                                        EDIT\r\n                                    </button>\r\n                                \r\n                                    <button \r\n                                    type=\"button\"\r\n                                    className = \"small\"\r\n                                    onClick = {() => deleteHandler(product)}\r\n                                    >\r\n                                        DELETE\r\n                                    </button>\r\n\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                        )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"row1 center pagination\" /*For showing page numbers in the below*/>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n\r\n    \r\n                        <Link key={x + 1 /*For showing page number*/} \r\n                        to = {`/productlist/pageNumber/${x + 1}`}>\r\n                        P{x + 1}</Link>\r\n                    ))\r\n                } \r\n                </div>\r\n                </>\r\n             )}\r\n        </div>\r\n    );\r\n}","  \r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createReview, detailsProduct } from '../actions/productActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Rating from '../components/Rating';\r\nimport { PRODUCT_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductScreen(props) {\r\n  const dispatch = useDispatch();\r\n  const productId = props.match.params.id;\r\n  const [qty, setQty] = useState(1);\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingReviewCreate,\r\n    error: errorReviewCreate,\r\n    success: successReviewCreate,\r\n  } = productReviewCreate;\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (successReviewCreate) {\r\n      window.alert('Review Submitted Successfully');\r\n      setRating('');\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_REVIEW_RESET });\r\n    }\r\n    dispatch(detailsProduct(productId));\r\n  }, [dispatch, productId, successReviewCreate]);\r\n  const addToCartHandler = () => {\r\n    props.history.push(`/cart/${productId}?qty=${qty}`);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (comment && rating) {\r\n      dispatch(\r\n        createReview(productId, { rating, comment, name: userInfo.name })\r\n      );\r\n    } else {\r\n      alert('Please enter comment and rating');\r\n    }\r\n  };\r\n  return (\r\n    <div className='space-x-4'>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/\"><h4>Back to Shopping Page</h4></Link>\r\n          <br/>\r\n          <div className=\"row top\">\r\n            <div className=\"col-2\">\r\n              <img\r\n                className=\"large\"\r\n                src={product.image}\r\n                alt={product.name}\r\n              ></img>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <ul>\r\n                <li>\r\n                  <h1>{product.name}</h1>\r\n                </li>\r\n                <li>\r\n                  <Rating\r\n                    rating={product.rating}\r\n                    numReviews={product.numReviews}\r\n                  ></Rating>\r\n                </li>\r\n                <li>\r\n                  <h4>Price : Rs.{product.price}/-\r\n                  </h4>\r\n                </li>\r\n                <li>\r\n                  <h4>Description: <span>\r\n                  {product.description}</span>\r\n                  </h4>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <div className=\"card card-body\">\r\n                <ul>\r\n                  <li>\r\n                    <h3>Seller{' '}</h3>\r\n                    <h2>\r\n                      <Link to={`/seller/${product.seller._id}`}>\r\n                        {product.seller.seller.name}\r\n                      </Link>\r\n                    </h2>\r\n                    <Rating\r\n                      rating={product.seller.seller.rating}\r\n                      numReviews={product.seller.seller.numReviews}\r\n                    ></Rating>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"row\">\r\n                      <div><h4>Price</h4></div>\r\n                      <div className=\"price\">Rs.{product.price}/-</div>\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <div className=\"row\">\r\n                      <div><h4>Status</h4></div>\r\n                      <div>\r\n                        {product.countInStock > 0 ? (\r\n                          <span className=\"success\">In Stock</span>\r\n                        ) : (\r\n                          <span className=\"danger\">Unavailable</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  {product.countInStock > 0 && (\r\n                    <>\r\n                      <li>\r\n                        <div className=\"row\">\r\n                          <div><h4>Qty</h4></div>\r\n                          <div>\r\n                            <select\r\n                              value={qty}\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                            >\r\n                              {[...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                )\r\n                              )}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <button\r\n                          onClick={addToCartHandler}\r\n                          className=\"primary block\"\r\n                        >\r\n                          Add to Cart\r\n                        </button>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2 id=\"reviews\">Reviews</h2>\r\n            {product.reviews.length === 0 && (\r\n              <MessageBox>There is no review</MessageBox>\r\n            )}\r\n            <ul /*map fx used to convert each reviews objects to JSX objects*/>\r\n              {product.reviews.map((review) => (\r\n                <li key={review._id}>\r\n                  <strong /*Showing name who reviewed*/>{review.name}</strong>\r\n                  <Rating rating={review.rating} caption=\" \" /*The caption is kept blank to put the p tag data and show it*/></Rating>\r\n                  <p>{review.createdAt.substring(0, 10)}</p>\r\n                  <p>{review.comment}</p>\r\n                </li>\r\n              ))}\r\n              <li /*A form section to write the reviews and user need to\r\n                login for passing a review*/>\r\n                {userInfo ? (\r\n                  <form className=\"form\" onSubmit={submitHandler}>\r\n                    <div>\r\n                      <h2 className='uppercase'>customer review section</h2>\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"rating\">Rating</label>\r\n                      <select\r\n                        id=\"rating\"\r\n                        value={rating}\r\n                        onChange={(e) => setRating(e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select...</option>\r\n                        <option value=\"1\">1- Poor</option>\r\n                        <option value=\"2\">2- Fair</option>\r\n                        <option value=\"3\">3- Good</option>\r\n                        <option value=\"4\">4- Very good</option>\r\n                        <option value=\"5\">5- Excelent</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"comment\">Comment</label>\r\n                      <textarea\r\n                        id=\"comment\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                      ></textarea>\r\n                    </div>\r\n                    <div>\r\n                      <label />\r\n                      <button className=\"primary\" type=\"submit\">\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      {loadingReviewCreate && <LoadingBox></LoadingBox>}\r\n                      {errorReviewCreate && (\r\n                        <MessageBox variant=\"danger\">\r\n                          {errorReviewCreate}\r\n                        </MessageBox>\r\n                      )}\r\n                    </div>\r\n                  </form>\r\n                ) : (\r\n                  <MessageBox /*If a user is not logged in*/>\r\n                    Please <Link to=\"/signin\">Sign In</Link> to write a review\r\n                  </MessageBox>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen(props) {\r\n    \r\n    /*For Updating the fields*/\r\n    const [name, setName] = useState(' ');\r\n    const [email, setEmail] = useState(' ');\r\n    const [password, setPassword] = useState(' ');\r\n    const [confirmPassword, setConfirmPassword] = useState(' ');\r\n\r\n    /*Hooks For Entering Seller data*/\r\n    const [sellerName, setSellerName] = useState(' ');\r\n    const [sellerLogo, setSellerLogo] = useState(' ');\r\n    const [sellerDescription, setSellerDescription] = useState(' ');\r\n\r\n\r\n\r\n\r\n     \r\n    /*Getting 'signin' details from Redux store for passing parameter to the detailsUser() fx\r\n    for getting details of the user*/\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    /*From userSigin, we get userInfo*/\r\n    const {userInfo} = userSignin;\r\n   \r\n\r\n    /*Getting userDetails from redux store i.e., defined in App.js and \r\n    in App.js it redirects to Reducers*/\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    /*Getting data from fx in userUpdateProfile() in App.js and the\r\n    fx is mined in the redux store i.e., in Reducers. We need to\r\n    define that fx consisting in the reducer and below is its definition*/\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    /*From redux, lets get the following*/\r\n    const { success: successUpdate, error: errorUpdate, loading: loadingUpdate } = userUpdateProfile;\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    /*Importing dispatch from React Redux*/\r\n    const dispatch = useDispatch();\r\n\r\n    /*Getting user information from the redux*/\r\n    useEffect(() => {\r\n        if(!user) {\r\n            dispatch({ type: USER_UPDATE_PROFILE_RESET});\r\n             /*useEffect contains two parameters, first is the function that\r\n        runs and the second one is the dependency list in [].*/\r\n\r\n            dispatch(detailsUser(userInfo._id)); /*detailsUser is an action in userAction file*/\r\n        } else {\r\n            /*Filling name and email from the backend*/\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            if(user.seller) {\r\n                setSellerName(user.seller.name);\r\n                setSellerLogo(user.seller.logo);\r\n                setSellerDescription(user.seller.description);\r\n            }\r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword)\r\n        {\r\n            alert('Password didnot match');\r\n        } else {\r\n            dispatch(updateUserProfile({ /*A new action created and define it in userActions file\r\n                as well as create a constant in the constants folder*/\r\n                /*The below data is passed to the database*/\r\n                userId: user._id, \r\n                name, \r\n                email, \r\n                password,\r\n                sellerName,\r\n                sellerLogo,\r\n                sellerDescription,\r\n\r\n\r\n            \r\n            })\r\n         );\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>User Profile</h1>\r\n                </div>\r\n                { loading ? (<LoadingBox></LoadingBox>\r\n                ) : error ? (<MessageBox variant = \"danger\">{error}</MessageBox>\r\n                ) : (\r\n\r\n         \r\n                <>\r\n\r\n                { loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && (<MessageBox variant = \"danger\">{errorUpdate}</MessageBox>\r\n                )}\r\n                {successUpdate && <MessageBox variant = \"success\">Data Updated Successfully</MessageBox>}\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input id = \"name\"\r\n                               type = \"text\"\r\n                               placeholder = \"Enter your name\"\r\n                               value={name}\r\n                               onChange = {(e) => setName(e.target.value)}>\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input id = \"email\"\r\n                               type = \"email\"\r\n                               placeholder = \"Enter your e-mail\"\r\n                               value={email}\r\n                               onChange = {(e) => setEmail(e.target.value)}>\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input id = \"password\"\r\n                               type = \"password\"\r\n                               placeholder = \"Enter your password\"\r\n                               onChange = {(e) => setPassword(e.target.value)}>\r\n                        </input>    \r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                        <input id = \"confirmPassword\"\r\n                               type = \"password\"\r\n                               placeholder = \"Re-enter your password\"\r\n                               onChange = {(e) => setConfirmPassword(e.target.value)}>\r\n                               \r\n                        </input>\r\n                    </div>   \r\n\r\n                    {\r\n                        /*For Seller DATA input*/\r\n                        user.isSeller && (\r\n                            <>\r\n                            <h2>Seller Details</h2>\r\n                            <div>\r\n                                <label htmlFor='sellerName'>Seller Name</label>\r\n                                <input id = \"sellerName\" type=\"text\" placeholder='Enter Seller Name' \r\n                                value={sellerName} onChange={(e) => setSellerName(e.target.value)}>\r\n                                </input>                          \r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor='sellerLogo'>Seller Logo</label>\r\n                                <input id = \"sellerLogo\" type=\"text\" placeholder='Put Seller Logo' \r\n                                value={sellerLogo} onChange={(e) => setSellerLogo(e.target.value)}>\r\n                                </input>                          \r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                <label htmlFor='sellerDescription'>Seller Description</label>\r\n                                <input id = \"sellerDescription\" type=\"text\" placeholder='Enter Seller Description' \r\n                                value={sellerDescription} onChange={(e) => setSellerDescription(e.target.value)}>\r\n                                </input>                          \r\n                            </div>\r\n                            </>\r\n                        )\r\n                    }         \r\n\r\n                    <div>\r\n                        <label/>\r\n                        <button className=\"primary\" type=\"submit\">Update</button>\r\n                        \r\n                    </div>\r\n                </>\r\n                ) \r\n            }\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}","//import express from \"express\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function RegisterScreen(props) {\r\n\r\n    /*Creating REACT Hooks for email and password options*/\r\n    const [name, setName] = useState(' ');\r\n    const [email, setEmail] = useState(' ');\r\n    const [password, setPassword] = useState(' ');\r\n    const [confirmPassword, setConfirmPassword] = useState(' ');\r\n    /*---------------------------------------------------*/\r\n\r\n    /*-----After Entering Login and successfully login validation, signin screen*/\r\n    const redirect = props.location.search \r\n    ? props.location.search.split('=')[1]  \r\n    : '/';\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { userInfo, loading, error } = userRegister;\r\n\r\n    /*-----End of After Entering Login and successfully login validation, signin screen*/\r\n\r\n    /*React hooks for sign-in*/\r\n    const dispatch = useDispatch();\r\n     /*End of React hooks for sign-in*/\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault(); /*This is used not to refresh the page when the user clicks on the sign button*/\r\n        /*Checking if two passwords entered are same or not*/\r\n        if(password !== confirmPassword){\r\n            alert('The password typed you didnot matched');\r\n        }else{\r\n            dispatch(register(name, email, password));\r\n        }       \r\n    };\r\n\r\n    useEffect(() => { /*useEffect has two parameters*/\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    return(\r\n        <div>\r\n            <form className = \"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>Create a new account</h1>\r\n                </div>\r\n                \r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant = \"danger\">{ error }</MessageBox>}\r\n\r\n                <div> \r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" id=\"name\" placeholder=\"Enter your name\" required\r\n                    onChange={e => setName(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"email\">E-mail Address</label>\r\n                    <input type=\"email\" id=\"email\" placeholder=\"Enter your e-mail Id\" required\r\n                    onChange={e => setEmail(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Enter Password</label>\r\n                    <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" required\r\n                    onChange={e => setPassword(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <input type=\"password\" id=\"confirmPassword\" placeholder=\"Re-Enter your password\" required\r\n                    onChange={e => setConfirmPassword(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Register here</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <div>\r\n                        Already have an account with us? <Link to = {`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n\r\n    \r\n}","export const prices = [ /*For rating and prices as a filter in the search box*/\r\n    {\r\n        name: 'Any Price',\r\n        min: 0,\r\n        max: 0,\r\n    },\r\n\r\n    {\r\n        name: 'Rs.10 to 100',\r\n        min: 10,\r\n        max: 100,\r\n    },\r\n    \r\n    {\r\n        name: 'Rs.100 to Rs.500',\r\n        min: 100,\r\n        max: 500,\r\n    },\r\n\r\n    {\r\n        name: 'Rs.500 to Rs.1000',\r\n        min: 500,\r\n        max: 1000,\r\n    },\r\n];\r\n\r\nexport const ratings = [\r\n    {\r\n        name:'4 Stars and up',\r\n        rating: 4,\r\n    },\r\n\r\n    {\r\n        name:'3 Stars and up',\r\n        rating: 3,\r\n    },\r\n\r\n    {\r\n        name:'2 Stars and up',\r\n        rating: 2,\r\n    },\r\n\r\n    {\r\n        name:'1 Stars and up',\r\n        rating: 1,\r\n    },\r\n];","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport Product from \"../components/Product\";\r\nimport Rating from \"../components/Rating\";\r\nimport { prices, ratings } from \"../utils\";\r\n\r\nexport default function SearchScreen (props) {\r\n    /*importing name. Default value is all means if there is no name, then use all names.\r\n    useParams is a fx(hook) from React DOM*/\r\n    const {\r\n        name = 'all', \r\n        category='all', \r\n        min=0, max=0, \r\n        rating = 0, \r\n        order = 'newest',\r\n        pageNumber = 1 } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    /*getting product list*/\r\n    const productList = useSelector((state) => state.productList);\r\n    const {loading, error, products, page, pages} = productList;\r\n\r\n\r\n     /*getting product list category wise from redux store*/\r\n     const productCategoryList = useSelector((state) => state.productCategoryList);\r\n     const {loading: loadingCategories, error: errorCategories, categories} = productCategoryList;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts({\r\n            pageNumber,\r\n            name: name !== 'all' ? name: '',\r\n            category: category !== 'all' ? category: '',\r\n            min, max, rating, order,\r\n        })\r\n      );\r\n    }, [dispatch, name, category, min, max, rating, order, pageNumber]);\r\n\r\n    const getFilterUrl = (filter) => {\r\n        const filterPage = filter.page || pageNumber;\r\n        const filterCategory = filter.category || category;\r\n        const filterName = filter.name || name;\r\n        const filterRating = filter.rating || rating;\r\n        const sortOrder = filter.order || order;\r\n        const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\r\n        const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\r\n        return `/search/category/${filterCategory}/name/${filterName}/min/${filterMin}/max/${filterMax}/rating/${filterRating}/order/${sortOrder}/pageNumber/${filterPage}`;\r\n    };\r\n    return(\r\n        <div>\r\n            <div className=\"row\">\r\n            {loading ? <LoadingBox></LoadingBox>\r\n            : error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            : \r\n            <div>\r\n                {products.length} Results found\r\n            </div>\r\n            }\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n               Sort Products By {' '}\r\n                <select value={order} onChange={(e) => {\r\n                    props.history.push(getFilterUrl({ order: e.target.value}));\r\n                }}>\r\n                \r\n                   <option value = \"newest\">Newest Arrivals</option> \r\n                   <option value = \"lowest\">Price Low to High</option> \r\n                   <option value = \"highest\">Price High to Low</option> \r\n                   <option value = \"toprated\">Avg Customer Reviews</option> \r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"row top\">\r\n                <div className=\"col-1\">\r\n                    <h3>All Categories</h3>\r\n                 <div>\r\n                    {\r\n                        loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                        ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                        ) : (                              \r\n                        \r\n                        <ul /*Show category wise list*/>   \r\n                            <li>\r\n                                <Link className={ 'all' === category ? \r\n                                'active': ''} /*Checking category in the URL*/\r\n                                to={getFilterUrl({ category: 'all' })}></Link>\r\n                            </li>                         \r\n                           {products.map((c) => (\r\n                               <li key={c}>\r\n                                   \r\n                                   <Link\r\n                                        className={c === category ? 'active': ''} /*Checking category in the URL*/\r\n                                        to={getFilterUrl({ category: c.category })}>{c.category}</Link>\r\n                                    \r\n                               </li>\r\n                           ))} \r\n                        </ul>\r\n\r\n                        )}\r\n                  </div>\r\n\r\n                  <div>\r\n                      <h3>Price</h3>\r\n                      <ul /*Defining prices in src >> utils.js*/>\r\n                          {prices.map((p) => (\r\n                              <li key={p.name}>\r\n                                  <Link to = {getFilterUrl({ min: p.min, max: p.max})}\r\n                                  className={`${p.min}-${p.max}` === `${min}-${max}` ? 'active' : ''}>\r\n                                     {p.name} \r\n                                  </Link>\r\n                              </li>\r\n                          ))}\r\n                      </ul>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <h3>Customer Reviews</h3>\r\n                      <ul /*Defining prices in src >> utils.js*/>\r\n                          {ratings.map((r) => (\r\n                              <li key={r.rating}>\r\n                                  <Link to = {getFilterUrl({ rating: r.rating })}\r\n                                  className = {`${r.rating}` === `${rating}` ? 'active' : ''}>\r\n\r\n                                    <Rating caption = {\" & up\"} rating = {r.rating}></Rating>                           \r\n                                  </Link>\r\n                              </li>\r\n                          ))}\r\n                      </ul>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-3\">\r\n                   {loading ? <LoadingBox></LoadingBox>\r\n                   : error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                   :\r\n                   <>\r\n                        {products.length === 0 && (\r\n                            <MessageBox>No Products to show</MessageBox>\r\n                        )}\r\n                        <div className=\"row center\" /*Showing products accordint to productId after searching in the search box*/>\r\n                            {products.map((product) => (\r\n                                <Product key = {product._id} product = {product}></Product>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row1 pagination\" /*For showing page numbers in the below*/>\r\n                           {\r\n                               [...Array(pages).keys()].map((x) => (\r\n\r\n                               \r\n                                   <Link key={x + 1} to = {getFilterUrl({ page: x + 1})}>\r\n                                       P{x + 1}</Link>\r\n                                ))\r\n                           } \r\n                        </div>\r\n                   \r\n                   </>\r\n                \r\n                    } \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        \r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { detailsUser } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport Product from \"../components/Product\";\r\nimport Rating from \"../components/Rating\";\r\n\r\nexport default function SellerScreen(props) {\r\n    const params = useParams();\r\n    const {id: sellerId} = params;\r\n    \r\n    //const sellerId = props.match.params.id;\r\n\r\n    /*getting userDetails from the redux*/\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n     /*getting productList from the redux*/\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading: loadingProducts, error: errorProducts, products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(detailsUser(sellerId));\r\n        dispatch(listProducts({seller : sellerId}));\r\n    }, [dispatch, sellerId]);\r\n    return (\r\n        <div className=\"row top\">\r\n            <div className=\"col-1\">\r\n                {loading ? <LoadingBox></LoadingBox>\r\n                : error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n                : \r\n                (\r\n                    <ul className=\"card card-body\">\r\n                        <li className=\"row start\" /*for Logo*/>\r\n                            <div className=\"p-1\">\r\n                                <img className=\"small\" \r\n                                src = {user.seller.logo} \r\n                                alt={user.seller.name}></img>                    \r\n                            </div>\r\n\r\n                            <div className=\"p-1\">\r\n                                <h1>\r\n                                    {user.seller.name}\r\n                                </h1>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li /*Rating*/>\r\n                            <Rating rating = {user.seller.rating} \r\n                            numReviews = {user.seller.numReviews}></Rating>\r\n                        </li>\r\n\r\n                        <li /*for emailing to seller*/>\r\n                            <a href = {`mailto:${user.email}`}>Contact Seller</a>\r\n                        </li>\r\n\r\n                        <li /*Description of the Seller*/>\r\n                            {user.seller.description}\r\n                        </li>\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"col-3\">\r\n            {loadingProducts ? <LoadingBox></LoadingBox>\r\n                : errorProducts ? <MessageBox variant = \"danger\">{errorProducts}</MessageBox>\r\n                : \r\n                (\r\n                    <>\r\n                         {products.length === 0 && <MessageBox variant=\"danger\">No Products Found</MessageBox>} \r\n                         <div className=\"row center\">\r\n                             {products.map((product) => ( /*Showing products according to the product.id*/\r\n                                 <Product key={product._id} product={product}></Product>\r\n                             ))}\r\n\r\n                         </div>\r\n                    </>\r\n                   \r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin; /*For  \"if(!userInfo){\" portion*/\r\n\r\n    const [selected, setSelected] = useState(); /*Hook For dropdown*/\r\n\r\n    const cart = useSelector(state => state.cart);/*Getting state/status of cart from the redux*/\r\n    const {shippingAddress} = cart;\r\n\r\n   \r\n    /*If the user is not logged in, then the page will redirect him to the sign-in page*/\r\n    if(!userInfo){\r\n        props.history.push('/signin');\r\n    }\r\n                                /*useState is filled with the\r\n                                status of the state \r\n                                in the REDUX, because to \r\n                                hold the data in the \r\n                                input boxes, entered by the user\r\n                                for auto fillup the fields*/\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n             \r\n            dispatch(saveShippingAddress({\r\n                fullName, \r\n                address, \r\n                city, \r\n                postalCode, \r\n                country,\r\n            }),\r\n            );\r\n            props.history.push('/payment');\r\n        };\r\n    \r\n    const changeSelectOptionHandler = (e) => {\r\n         e.preventDefault();\r\n         setSelected(e.target.value);\r\n    };\r\n\r\n\r\n    const countryOrigin = [\r\n         \r\n         {\r\n            id: 1,\r\n            country: 'India',\r\n            \r\n         },   \r\n        \r\n        \r\n         {\r\n            id: 2,\r\n            country: 'South Africa',\r\n         },\r\n\r\n         {\r\n            id: 3,\r\n            country: 'Australia',\r\n         },\r\n\r\n         {\r\n            id: 4,\r\n            country: 'United States',\r\n         },\r\n\r\n         {\r\n            id: 5,\r\n            country: 'Russia',\r\n         },\r\n\r\n         {\r\n            id: 6,\r\n            country: 'England',\r\n         },\r\n         \r\n         {\r\n            id: 7,\r\n            country: 'United Kingdom',\r\n         },\r\n         \r\n         \r\n     ]\r\n    \r\n     const districtOrigin = [\r\n         \r\n\r\n      \r\n\r\n        {\r\n           id: 1,\r\n           address: 'Kolkata',\r\n        },   \r\n       \r\n       \r\n        {\r\n           id: 2,\r\n           address: 'South Dinajpur',\r\n        },\r\n\r\n        {\r\n           id: 3,\r\n           address: 'North Dinajpur',\r\n        },\r\n\r\n        {\r\n           id: 4,\r\n           address: 'South 24 Parganas',\r\n        },\r\n\r\n        {\r\n           id: 5,\r\n           address: 'North 24 Parganas',\r\n        },\r\n\r\n        {\r\n           id: 6,\r\n           address: 'Howrah',\r\n        },\r\n        \r\n        {\r\n           id: 7,\r\n           address: 'Darjeeling',\r\n        },\r\n\r\n        {\r\n            id: 8,\r\n            address: 'Coochbihar',\r\n         },   \r\n\r\n         {\r\n            id: 9,\r\n            address: 'Jalpaiguri',\r\n         },\r\n\r\n         {\r\n            id: 10,\r\n            address: 'Malda',\r\n         },  \r\n         \r\n         {\r\n            id: 11,\r\n            address: 'United Kingdom',\r\n         }, \r\n   \r\n         {\r\n            id: 12,\r\n            address: 'England',\r\n         }, \r\n   \r\n         {\r\n            id: 13,\r\n            address: 'Russia',\r\n         }, \r\n   \r\n         {\r\n            id: 14,\r\n            address: 'United States',\r\n         }, \r\n   \r\n         {\r\n            id: 15,\r\n            address: 'Australia',\r\n         }, \r\n   \r\n         {\r\n            id: 16,\r\n            address: 'South Africa',\r\n         }, \r\n    ]\r\n    \r\n\r\n\r\n    \r\n    const maldacityOrigin = [\r\n         \r\n      {\r\n         id: 1,\r\n         city: 'English Bazaar',\r\n      },   \r\n\r\n      {\r\n         id: 2,\r\n         city: 'Malda Town',\r\n      },  \r\n\r\n      {\r\n         id: 3,\r\n         city: 'Gazole',\r\n      }, \r\n      {\r\n         id: 2,\r\n         city: 'Adina',\r\n      }, \r\n   ]\r\n\r\n   const ddinajpurcityOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Balurghat\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Gangarampur\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Buniadpur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Kushmundi\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Hili\",\r\n      }\r\n   ]\r\n\r\n   const udinajpurcityOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Kaliyaganj\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Raiganj\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Islampur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Dalkhola\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Panjipara\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Itahar\",\r\n      },\r\n   ]\r\n\r\n   const kolkataOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Baligunge\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Baruipur\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Jadavpur\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"New Alipore\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Bou Bazar\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Esplanade\",\r\n      },\r\n   ]\r\n   \r\n   const darjeelingOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Darjeeling\",\r\n      },\r\n\r\n      {\r\n         id: 2,\r\n         city: \"Kurseong\",\r\n      },\r\n\r\n      {\r\n         id: 3,\r\n         city: \"Mirik\",\r\n      },\r\n\r\n      {\r\n         id: 4,\r\n         city: \"Siliguri\",\r\n      },\r\n\r\n      {\r\n         id: 5,\r\n         city: \"Bagdogra\",\r\n      },\r\n\r\n      {\r\n         id: 6,\r\n         city: \"Matigara\",\r\n      },\r\n   ]\r\n\r\n   const howrahOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Howrah\",\r\n      },     \r\n   ]\r\n\r\n   const jalpaiguriOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Jalpaiguri\",\r\n      }, \r\n      \r\n      {\r\n         id: 2,\r\n         city: \"Malbazar\",\r\n      }, \r\n   ]\r\n\r\n   const coochbiharOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Coochbihar\",\r\n      }, \r\n      \r\n      {\r\n         id: 2,\r\n         city: \"Dinhata\",\r\n      }, \r\n   ]\r\n\r\n   const s24Origin = [\r\n      {\r\n         id: 1,\r\n         city: \"Baruipur(M)\",\r\n      }, \r\n      \r\n      {\r\n         id: 2,\r\n         city: \"Garia\",\r\n      }, \r\n   ]\r\n\r\n   const n24Origin = [\r\n      {\r\n         id: 1,\r\n         city: \"Barrackpore\",\r\n      }, \r\n      \r\n      {\r\n         id: 2,\r\n         city: \"Naihati\",\r\n      }, \r\n   ]\r\n\r\n   const russiaOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Moscow\",\r\n      },             \r\n   ]\r\n\r\n   const usaOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"WashingtonDC\",\r\n      },             \r\n   ]\r\n\r\n   const ukOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"London\",\r\n      },             \r\n   ]\r\n\r\n   const australiaOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Canberra\",\r\n      },             \r\n   ]\r\n\r\n\r\n   const safricaOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"Pretoria\",\r\n      },             \r\n   ]\r\n\r\n   const englandOrigin = [\r\n      {\r\n         id: 1,\r\n         city: \"London\",\r\n      },             \r\n   ]\r\n\r\n\r\n\r\n   let type = null; /* Type variable stores different arrays for different drop downs*/\r\n   let options = null; /*Set of options that a user will see*/\r\n\r\n   if (selected === \"Malda\") {\r\n      type = maldacityOrigin;\r\n   } else if (selected === \"South Dinajpur\") {\r\n      type = ddinajpurcityOrigin;\r\n   } else if (selected === \"North Dinajpur\") {\r\n      type = udinajpurcityOrigin;\r\n   } else if (selected === \"Kolkata\") {\r\n      type = kolkataOrigin;\r\n   } else if (selected === \"Darjeeling\") {\r\n      type = darjeelingOrigin;\r\n   } else if (selected === \"Howrah\") {\r\n      type = howrahOrigin;\r\n   } else if (selected === \"Jalpaiguri\") {\r\n      type = jalpaiguriOrigin;\r\n   } else if (selected === \"Coochbihar\") {\r\n      type = coochbiharOrigin;\r\n   } else if (selected === \"South 24 Parganas\") {\r\n      type = s24Origin;\r\n   } else if (selected === \"North 24 Parganas\") {\r\n      type = n24Origin;\r\n   } else if (selected === \"South Africa\") {\r\n      type = safricaOrigin;\r\n   }  else if (selected === \"Australia\") {\r\n      type = australiaOrigin;\r\n   }  else if (selected === \"United States\") {\r\n      type = usaOrigin;\r\n   }  else if (selected === \"United Kingdom\") {\r\n      type = ukOrigin;\r\n   }  else if (selected === \"Russia\") {\r\n      type = russiaOrigin;\r\n   }  else if (selected === \"England\") {\r\n      type = englandOrigin;\r\n   }  \r\n\r\n\r\n\r\n\r\n\r\n   if (type) {\r\n      options = type.map((c, index) => <option key={index} value={c.city}>{c.city}</option>)\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h2>Shipping Address</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"fullName\">Full Name</label>\r\n                    <input type=\"text\" \r\n                    id=\"fullName\" \r\n                    placeholder=\"Enter your full name\" \r\n                    value={fullName} \r\n                    onChange={(e) => setFullName(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"country\">Choose Your Country</label>\r\n                   {/*\r\n\r\n                   <input type=\"text\" \r\n                    id=\"country\" \r\n                    placeholder=\"Your address\" \r\n                    value={country} \r\n                    onChange={(e) => setCountry(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                     */ }\r\n\r\n                     {/*Trying for drop-down*/}\r\n\r\n                     <select id=\"country\" onChange= {(e) => setCountry(e.target.value)} required>\r\n                        <option>Select...</option>\r\n                        {\r\n                            countryOrigin.map((data, index) => {\r\n                                return <option key = {index} value={data.country}>\r\n                                       {data.country}</option>\r\n                            })\r\n                        }                      \r\n                     </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"address\">District </label>\r\n                    {/*<input type=\"text\" \r\n                    id=\"address\" \r\n                    placeholder=\"Enter your full address\" \r\n                    value={address} \r\n                    onChange={(e) => setAddress(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                    */}\r\n                    <select id=\"address\" onClick={changeSelectOptionHandler} onChange={((e) => setAddress(e.target.value))} required>\r\n                        <option>Select...</option>\r\n                        {\r\n                            districtOrigin.map((data, index) => {\r\n                                return <option key = {index} value={data.address}>\r\n                                       {data.address}</option>\r\n                            })\r\n                        }                      \r\n                    </select>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                   \r\n                      \r\n                   \r\n                    <label htmlFor=\"city\">City</label>\r\n                    {\r\n                     <select id=\"city\" onChange={(e) => setCity(e.target.value)} required>\r\n                        <option>Select...</option>\r\n\r\n                           {options}\r\n                     </select>\r\n                    /*\r\n                    <input type=\"text\" \r\n                    id=\"city\" \r\n                    placeholder=\"Enter your city\" \r\n                    value={city} \r\n                    onChange={(e) => setCity(e.target.value)} \r\n                    required>\r\n                    </input>\r\n                    */ }\r\n                    \r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"postalCode\">Postal Code</label>\r\n                    <input type=\"text\" \r\n                    id=\"postalCode\" \r\n                    placeholder=\"Pin Number\" \r\n                    value={postalCode} \r\n                    onChange={(e) => setPostalCode(e.target.value)} \r\n                    required>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n               \r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Continue</button>\r\n                </div>\r\n                \r\n        </form>\r\n                \r\n        </div>\r\n \r\n    )\r\n};\r\n","//import express from \"express\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function SigninScreen(props) {\r\n\r\n    /*Creating REACT Hooks for email and password options*/\r\n    const [email, setEmail] = useState(' ');\r\n    const [password, setPassword] = useState(' ');\r\n    /*---------------------------------------------------*/\r\n\r\n    /*-----After Entering Login and successfully login validation, signin screen*/\r\n    const redirect = props.location.search \r\n    ? props.location.search.split('=')[1] \r\n    : '/';\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    /*-----End of After Entering Login and successfully login validation, signin screen*/\r\n\r\n    /*React hooks for sign-in*/\r\n    const dispatch = useDispatch();\r\n     /*End of React hooks for sign-in*/\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault(); /*This is used not to refresh the page when the user clicks on the sign button*/\r\n        dispatch(signin(email, password));\r\n    };\r\n\r\n    useEffect(() => { /*useEffect has two parameters*/\r\n        if(userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    return(\r\n        <div>\r\n            <form className = \"form\" onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>Sign in</h1>\r\n                </div>\r\n                \r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant = \"danger\">{ error }</MessageBox>}\r\n                <div>\r\n                    <label htmlFor=\"email\">E-mail Address</label>\r\n                    <input type=\"email\" id=\"email\" placeholder=\"Enter your e-mail Id\" required\r\n                    onChange={e => setEmail(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Enter Password</label>\r\n                    <input type=\"password\" id=\"password\" placeholder=\"Enter your password\" required\r\n                    onChange={e => setPassword(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <button className=\"primary\" type=\"submit\">Sign-in</button>\r\n                    \r\n                </div>\r\n\r\n                <div>\r\n                    <label/>\r\n                    <div>\r\n                        Are you a new customer? <Link to = {`/register?redirect=${redirect}`}>Create your account</Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n        \r\n\r\n    \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsUser, updateUser } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nexport default function UserEditScreen(props) {\r\n    /*We need specific Id for editing data*/\r\n    const userId = props.match.params.id; /*Now we need to define useEffect()*/\r\n\r\n    const [name, setName] = useState(' ');\r\n    const [email, setEmail] = useState(' ');\r\n    const [isSeller, setIsSeller] = useState(false); /*By default it is false*/\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    \r\n    \r\n    \r\n    /*For getting users in details from redux store, i.e. from store.js*/\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const {loading, error, user} = userDetails;\r\n\r\n    /*For getting users in details from redux store, i.e. from store.js*/\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate, \r\n        error: errorUpdate, \r\n        success: successUpdate} = userUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {  \r\n        \r\n        \r\n                       \r\n            /*Need to check user*/\r\n        if(!user || successUpdate) { /*If not exists, bring it*/\r\n            dispatch({ type: USER_UPDATE_RESET});\r\n            \r\n            dispatch(detailsUser(userId._id));\r\n            props.history.push('/userlist');\r\n        } else {\r\n               /*Showing the clicked user data*/\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsAdmin(user.isAdmin);\r\n            setIsSeller(user.isSeller);\r\n        }\r\n    }, [dispatch, props.history, successUpdate, user, userId]);\r\n    \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault(); /*Preventing page refresh when user clicks on the edit button*/\r\n        dispatch(updateUser({\r\n            _id: userId, \r\n            name, \r\n            email, \r\n            isSeller, \r\n            isAdmin\r\n            })\r\n        );\r\n        /* updateUser() is defined in action.js*/\r\n    };\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Editing {name}</h1>\r\n                    \r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                </div>\r\n                {loading ? <LoadingBox></LoadingBox>\r\n                : error ? <MessageBox variant = \"danger\">{error}</MessageBox>\r\n                : \r\n                <>\r\n                <div /*for name*/>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input id=\"name\" type=\"text\" placeholder=\"Name\"\r\n                    value={name} onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*for email*/>\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input id=\"email\" type=\"text\" placeholder=\"email\"\r\n                    value={email} onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Checkbox for whether seller*/>\r\n                    <label htmlFor=\"isSeller\">Whether Seller</label>\r\n                    <input id=\"isSeller\" type=\"checkbox\" checked={isSeller}\r\n                    onChange={(e) => setIsSeller(e.target.checked)}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                <div /*Checkbox for whether Admin*/>\r\n                    <label htmlFor=\"isAdmin\">Whether Admin</label>\r\n                    <input id=\"isAdmin\" type=\"checkbox\" checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                    \r\n                    </input>\r\n                </div>\r\n                \r\n                <div>\r\n                    <button type=\"submit\" className=\"primary\">Update </button>\r\n                </div>\r\n                </>\r\n                }\r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteUser, listUsers } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\r\n\r\nexport default function UserListScreen(props) {\r\n    const userList = useSelector(state => state.userList); /*From store.js*/\r\n    const {loading, users, error} = userList;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);/*From store.js*/\r\n    const {\r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete} = userDelete;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(listUsers()); /*Need to create listusers( ) fx in userActions,js*/\r\n        dispatch({ type: USER_DETAILS_RESET}); /*getting details of another users after editing a user details*/\r\n    }, [dispatch, successDelete]);\r\n\r\n\r\n/*Defining deleteHandler() fx for deleting users*/\r\n    const deleteHandler = (user) => {\r\n        if(window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(user._id)); /*deleteUser() fx created here and body is \r\n            being written in actions folder >> userActions.js*/\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>List of Users</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant = \"error\">{errorDelete}</MessageBox>}\r\n            {successDelete && <MessageBox variant = \"success\">User Deleted Successfully</MessageBox>}\r\n            { loading ? (<LoadingBox></LoadingBox>)\r\n            :\r\n            error ? (<MessageBox variant = \"danger\">{error}</MessageBox>)\r\n            :\r\n            (\r\n                <table className=\"table\">\r\n                    <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>WHETHER SELLER</th>\r\n                                <th>WHETHER ADMIN</th>\r\n                                <th>ACTIONS</th>\r\n                            </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        users.map((user) => (                 \r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isSeller? 'YES': 'NO'}</td>\r\n                                <td>{user.isAdmin? 'YES': 'NO'}</td>\r\n                                <td>\r\n                                    <button  type=\"button\"\r\n                                        className=\"small\"\r\n                                        onClick={() => props.history.push(`/user/${user._id}/edit`)}\r\n                                        >Edit</button>\r\n                                    <button \r\n                                        type=\"button\"\r\n                                        className=\"small\"\r\n                                        onClick={() => \r\n                                            deleteHandler(user)\r\n                                        }>Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                        }\r\n                    </tbody>\r\n                    \r\n                </table>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport { listProductCategories } from './actions/productActions';\nimport { signout } from './actions/userActions';\nimport AdminRoute from './components/AdminRoute';\nimport LoadingBox from './components/LoadingBox';\nimport MessageBox from './components/MessageBox';\nimport PrivateRoute from './components/PrivateRoute';\nimport SearchBox from './components/SearchBox';\nimport SellerRoute from './components/SellerRoute';\nimport CartScreen from './screens/CartScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport SellerScreen from './screens/SellerScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport UserListScreen from './screens/UserListScreen';\n\nfunction App() {\n  /*Getting cart from Redux store*/\n  const cart = useSelector((state) => state.cart);\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const { cartItems } = cart;\n\n  /*Getting user signin from redux store*/\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n  const signoutHandler  = () => {\n    dispatch(signout());\n   \n  };\n\n  const productCategoryList = useSelector((state) => state.productCategoryList);\n     const {loading: loadingCategories, error: errorCategories, categories} = productCategoryList;\n\n\n  useEffect(() => {\n    dispatch(listProductCategories()); /*For category wise listing products*/\n  }, [dispatch]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"row\">\n           \n          <div>\n            {/*\n            <button className='open-sidebar' \n            type='button' onClick={() => setSidebarIsOpen(true)}>\n             <i className='fa fa-bars'></i>\n            </button>\n            */}\n            \n            <Link className=\"brand\" to=\"/\">\n            <span className='spanhead'>\n               <img src=\"/images/headerB.jpeg\"></img>\n             </span>\n             \"Handloom Textiles Ltd             \n            </Link>\n          </div>\n\n          <div /*Here direct search box wouln't work, so we need to Route and render history from the searchbox*/>\n            <Route\n              render={({history}) => ( \n                <SearchBox history={history}></SearchBox>\n                )}>\n                \n            </Route>\n\n          </div>\n          <div>\n            <Link to=\"/cart\" className='menus'>\n              Cart\n              {cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>\n              )}\n            </Link>\n\n            {userInfo ? (\n              <div className = \"dropdown\">\n                <Link to = \"#\">{userInfo.name} \n                <i className = \"fa fa-caret-down\" ></i>{' '}\n                </Link>\n\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to = \"/profile\">User Profile</Link>\n                  </li>\n                  <li>\n                    <Link to = \"/orderhistory\">Order History</Link>\n                  </li>\n                  <Link to = \"/\" onClick = {signoutHandler}>\n                    Sign Out\n                  </Link>\n                </ul>\n              </div>\n              ) : (\n                <Link to=\"/signin\" className='menus'>Sign In</Link>\n              )}                   \n\n              { /*Conditional rendering for SELLER*/\n                userInfo && userInfo.isSeller && (\n                  <div className = \"dropdown\">\n                    <Link to=\"#Seller\">\n                      Seller<i className=\"fa fa-caret-down\">\n                      </i>\n                    </Link>\n                    <ul className=\"dropdown-content\">                      \n                      <li>\n                        <Link to = \"/productlist/seller\">Products</Link>\n                      </li>\n\n                      <li>\n                        <Link to = \"/orderlist/seller\">Orders</Link>\n                      </li>                    \n                    </ul>\n                  </div>\n                )\n              }\n\n              {/*A conditional rendering for ADMINS*/\n                userInfo && userInfo.isAdmin && (\n                  <div className = \"dropdown\">\n                    <Link to=\"#Admin\">Admin {' '} <i className=\"fa fa-caret-down\">\n                      </i>\n                    </Link>\n                    <ul className=\"dropdown-content\">\n                      <li>\n                        <Link to = \"/dashboard\">Dashboard</Link>\n                      </li>\n\n                      <li>\n                        <Link to = \"/productlist\">Products</Link>\n                      </li>\n\n                      <li>\n                        <Link to = \"/orderlist\">Orders</Link>\n                      </li>\n\n                      <li>\n                        <Link to = \"/userlist\">All Users</Link>\n                      </li>\n                    </ul>\n                  </div>\n                )\n              }\n            \n          </div>\n        </header>\n{/*\n    \n\n        <aside className= {sidebarIsOpen ? 'open' : ''}>\n                <ul className='categories'>\n                  <li>\n                    <strong>Categories</strong>\n                    <button onClick={() => setSidebarIsOpen(false)}\n                    className='close-sidebar'\n                    type='button'\n                    >\n                      <i className='fa fa-close'></i>\n                    </button>\n                  </li>\n                  {loadingCategories ? (\n                  <LoadingBox></LoadingBox>\n                  ) : errorCategories ? (\n                  <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n                  ) : (\n                    categories.map((c) => (\n                      <li key = {c}>\n                        <Link to = {`/search/category/${c}`}\n                        onClick={() => setSidebarIsOpen(false)}>{c}</Link>\n                      </li>\n                    ))\n                  )\n                  }\n                </ul>\n        </aside>\n                */}\n        <main>\n          <Route path=\"/search/name/:name?\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name/min/:min/max/:max/rating/:rating/order/:order/pageNumber/:pageNumber\" component={SearchScreen} ></Route>\n          <Route path=\"/seller/:id?\" component={SellerScreen}></Route>\n          <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n          <Route path=\"/product/:id\" component={ProductScreen} exact></Route>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n          <Route path=\"/pageNumber/:pageNumber\" component={HomeScreen} exact></Route>\n          <Route path=\"/signin\" component={SigninScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n          <Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n          <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n          <Route path=\"/order/:id\" component={OrderScreen}></Route>\n          <Route path=\"/orderhistory\" component={OrderHistoryScreen}></Route>\n          <PrivateRoute path=\"/profile\" component={ProfileScreen}></PrivateRoute>\n          <AdminRoute path=\"/productlist\" component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/productlist/pageNumber/:pageNumber\" component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/orderlist\" component={OrderListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/userlist\" component={UserListScreen}></AdminRoute>\n          <AdminRoute path=\"/user/:id/edit\" component={UserEditScreen}></AdminRoute>\n          <AdminRoute path=\"/dashboard\" component={DashboardScreen}></AdminRoute>\n          <Route path=\"/product/:id/edit\" component={ProductEditScreen}></Route>\n          <SellerRoute path=\"/productlist/seller\" component={ProductListScreen}></SellerRoute>\n          <SellerRoute path=\"/orderlist/seller\" component={OrderListScreen}></SellerRoute>\n        </main>\n        <footer className='footer'>\n          \n        <h4>Ⓒ All the rights reserved</h4>\n        <div className='buttonIcons'>\n                  <button className='btn_shadow'>\n                    <i class='fab fa-facebook-f'></i>\n                  </button>\n                  <button className='btn_shadow'>\n                    <i class='fab fa-instagram'></i>\n                  </button>\n                  <button className='btn_shadow'>\n                    <i class='fab fa-linkedin-in'></i>\n                  </button>\n          </div>   \n          \n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_RESET,\r\n  PRODUCT_CATEGORY_LIST_REQUEST,\r\n  PRODUCT_CATEGORY_LIST_SUCCESS,\r\n  PRODUCT_CATEGORY_LIST_FAIL,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_REVIEW_RESET,\r\n} = require('../constants/productConstants');\r\n\r\nexport const productListReducer = (\r\n  state = { loading: true, products: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { loading: true },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n/*As it is creating products, state is NULL. */\r\n  switch(action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true};\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload};\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload};\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default: \r\n      return state;\r\n    }\r\n  };\r\n\r\n  export const productUpdateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true};\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload};\r\n      case PRODUCT_UPDATE_FAIL:\r\n        return {loading: false, error: action.payload};\r\n      case PRODUCT_UPDATE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const productDeleteReducer = ( state = {}, action) => {\r\n    switch(action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n        return { loading: true};\r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true};\r\n      case PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload};\r\n      case PRODUCT_DELETE_RESET:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const productCategoryListReducer = ( state = { loading: true, products:[] }, action) => {\r\n    switch(action.type) {\r\n      case PRODUCT_CATEGORY_LIST_REQUEST:\r\n        return { loading: true};\r\n      case PRODUCT_CATEGORY_LIST_SUCCESS:\r\n        return { loading: false, categories: action.payload};\r\n      case PRODUCT_CATEGORY_LIST_FAIL:\r\n        return { loading: false, error: action.payload};      \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n/*For comments and ratings*/\r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    /*As it is creating products, state is NULL. */\r\n      switch(action.type) {\r\n        case PRODUCT_REVIEW_REQUEST:\r\n          return { loading: true};\r\n        case PRODUCT_REVIEW_SUCCESS:\r\n          return { loading: false, success: true, review: action.payload};\r\n        case PRODUCT_REVIEW_FAIL:\r\n          return { loading: false, error: action.payload};\r\n        case PRODUCT_REVIEW_RESET:\r\n          return {};\r\n        default: \r\n          return state;\r\n        }\r\n      };","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, \r\n  orderDeleteReducer, \r\n  orderDeliverReducer, \r\n  orderDetailsReducer, orderListReducer, orderMineListReducer, \r\n  orderPayReducer, \r\n  orderSummaryReducer} from './reducers/orderReducers';\r\n  \r\nimport {\r\n  productCategoryListReducer,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productDetailsReducer,\r\n  productListReducer,\r\n  productReviewCreateReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport { userDeleteReducer, userDetailsReducer, \r\n  userListReducer, userRegisterReducer, \r\n  userSigninReducer, \r\n  userTopSellerListReducer, \r\n  userUpdateProfileReducer, \r\n  userUpdateReducer} from './reducers/userReducers';\r\n\r\n/*For retreving data from the backend to the cart items*/\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n      /*At the very beginning of the web app, checking the local storage for Shipping information*/\r\n      /*Intital State of the Shipping Address*/\r\n      shippingAddress: localStorage.getItem('shippingAddress')\r\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n      : {},\r\n\r\n      /*Payment Method Module Paypal*/\r\n      paymentMethod: 'PayPal',\r\n  },\r\n\r\n/*---------------------------------------------------*/\r\n\r\n/*For retrieving data from the back end for the users*/\r\n  userSignin: {\r\n    userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n  }\r\n/*---------------------------------------------------*/\r\n\r\n};\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer, \r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  orderList: orderListReducer,\r\n  orderDelete: orderDeleteReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userTopSellersList: userTopSellerListReducer,\r\n  productCategoryList: productCategoryListReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  orderSummary: orderSummaryReducer,\r\n\r\n  \r\n});\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { CART_ADD_ITEM, \r\n  CART_EMPTY, CART_REMOVE_ITEM, \r\n  CART_SAVE_PAYMENT_METHOD, \r\n  CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return{\r\n        ...state, shippingAddress: action.payload\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return{\r\n        ...state, paymentMethod: action.payload\r\n      };\r\n    \r\n    case CART_EMPTY:\r\n        return{\r\n          ...state, cartItems: []\r\n      };\r\n        \r\n    default:\r\n      return state;\r\n\r\n    \r\n  }\r\n};\r\n","import {USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_RESET, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, \r\n    USER_LIST_FAIL, \r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS, \r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, USER_SIGIN_FAIL, \r\n    USER_SIGIN_REQUEST, USER_SIGIN_SIGNOUT, \r\n    USER_SIGIN_SUCCESS, \r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_RESET, \r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_TOPSELLER_LIST_REQUEST,\r\n    USER_TOPSELLER_LIST_SUCCESS,\r\n    USER_TOPSELLER_LIST_FAIL,\r\n    USER_ADDRESS_MAP_CONFIRM} from \"../constants/userConstants\";\r\n\r\nexport const userSigninReducer = ( state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGIN_SUCCESS:            /*Payload = data*/\r\n            return { loading: false, userInfo: action.payload}; /*payload value comes from data in the userAction.js page in the \r\n            \"dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\"\" section*/\r\n        case USER_SIGIN_FAIL:\r\n            return { loading: false, error: action.payload}; /*payload value comes from data in the userAction.js page in the \r\n            \"dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\"\" section*/\r\n        case USER_SIGIN_SIGNOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userRegisterReducer = ( state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:            /*Payload = data*/\r\n            return { loading: false, userInfo: action.payload}; /*payload value comes from data in the userAction.js page in the \r\n            \"dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\"\" section*/\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload}; /*payload value comes from data in the userAction.js page in the \r\n            \"dispatch({ type: USER_SIGIN_SUCCESS, payload: data });\"\" section*/\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*For fetching data to show data to update user details*/\r\n\r\nexport const userDetailsReducer = (state = {loading: true}, action) => {\r\n    /*loading is true bcz we call loading details at the very beginning of the loading of the page*/\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {loading: true};\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload};\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_DETAILS_RESET:\r\n            return { loading: true};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*For saving and updating details of a user*/\r\nexport const userUpdateProfileReducer = (state = {loading: true}, action) => {\r\n    /*loading is true bcz we call loading details at the very beginning of the loading of the page*/\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true};\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*For users list in the backend */\r\nexport const userListReducer = (state = {loading: true}, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true};\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload};\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*For deleting users list in the backend */\r\nexport const userDeleteReducer = (state = { }, action) => { /*By default we dont need to load data of the users to be deleted*/\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true};\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_DELETE_RESET:\r\n            return { };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*For saving and updating details of a user*/\r\nexport const userUpdateReducer = (state = {loading: true}, action) => {\r\n    /*loading is true bcz we call loading details at the very beginning of the loading of the page*/\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true};\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case USER_UPDATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n/*For users list in the backend */\r\nexport const userTopSellerListReducer = (state = {loading: true}, action) => {\r\n    switch (action.type) {\r\n        case USER_TOPSELLER_LIST_REQUEST:\r\n            return {loading: true};\r\n        case USER_TOPSELLER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload};\r\n        case USER_TOPSELLER_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_RESET, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_DELETE_FAIL, \r\n    ORDER_DELETE_REQUEST, \r\n    ORDER_DELETE_RESET, \r\n    ORDER_DELETE_SUCCESS, \r\n    ORDER_DELIVER_FAIL, \r\n    ORDER_DELIVER_REQUEST, \r\n    ORDER_DELIVER_RESET, \r\n    ORDER_DELIVER_SUCCESS, \r\n    ORDER_DETAILS_FAIL, \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_MINE_LIST_FAIL,\r\n    ORDER_MINE_LIST_REQUEST,\r\n    ORDER_MINE_LIST_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_SUMMARY_FAIL,\r\n    ORDER_SUMMARY_REQUEST,\r\n    ORDER_SUMMARY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {loading: false, success: true, order: action.payload};\r\n        case ORDER_CREATE_FAIL:\r\n            return {loading: false, error: action.payload} ;\r\n        case ORDER_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = {loading: true}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {loading: false, order: action.payload};\r\n        case ORDER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_PAY_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case ORDER_PAY_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const orderMineListReducer = ( state = {orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_MINE_LIST_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_MINE_LIST_SUCCESS:\r\n            return {loading: false, orders: action.payload};\r\n        case ORDER_MINE_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = ( state = {orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_LIST_SUCCESS:\r\n            return {loading: false, orders: action.payload};\r\n        case ORDER_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeleteReducer = ( state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELETE_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_DELETE_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case ORDER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case ORDER_DELETE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {loading: false, success: true};\r\n        case ORDER_DELIVER_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const orderSummaryReducer = (state = { loading: true, summary: {}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_SUMMARY_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_SUMMARY_SUCCESS:\r\n            return {loading: false, summary: action.payload};\r\n        case ORDER_SUMMARY_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>  \n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// <Provider> is used to wrap the content and use REDUX data from STORE\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}